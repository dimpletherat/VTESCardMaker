// Generated by Haxe 4.1.0
#ifndef INCLUDED_feathers_layout_Direction
#define INCLUDED_feathers_layout_Direction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(feathers,layout,Direction)
namespace feathers{
namespace layout{


class Direction_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef Direction_obj OBJ_;

	public:
		Direction_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("feathers.layout.Direction",99,8c,41,20); }
		::String __ToString() const { return HX_("Direction.",2f,99,c6,1e) + _hx_tag; }

		static ::feathers::layout::Direction HORIZONTAL;
		static inline ::feathers::layout::Direction HORIZONTAL_dyn() { return HORIZONTAL; }
		static ::feathers::layout::Direction NONE;
		static inline ::feathers::layout::Direction NONE_dyn() { return NONE; }
		static ::feathers::layout::Direction VERTICAL;
		static inline ::feathers::layout::Direction VERTICAL_dyn() { return VERTICAL; }
};

} // end namespace feathers
} // end namespace layout

#endif /* INCLUDED_feathers_layout_Direction */ 
