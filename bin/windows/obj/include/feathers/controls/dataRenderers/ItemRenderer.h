// Generated by Haxe 4.1.0
#ifndef INCLUDED_feathers_controls_dataRenderers_ItemRenderer
#define INCLUDED_feathers_controls_dataRenderers_ItemRenderer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_feathers_controls_ToggleButton
#include <feathers/controls/ToggleButton.h>
#endif
HX_DECLARE_CLASS2(feathers,controls,BasicToggleButton)
HX_DECLARE_CLASS2(feathers,controls,IToggle)
HX_DECLARE_CLASS2(feathers,controls,ToggleButton)
HX_DECLARE_CLASS3(feathers,controls,dataRenderers,ItemRenderer)
HX_DECLARE_CLASS2(feathers,core,FeathersControl)
HX_DECLARE_CLASS2(feathers,core,IDisplayObject)
HX_DECLARE_CLASS2(feathers,core,IFocusObject)
HX_DECLARE_CLASS2(feathers,core,IMeasureObject)
HX_DECLARE_CLASS2(feathers,core,IStateContext)
HX_DECLARE_CLASS2(feathers,core,ITextControl)
HX_DECLARE_CLASS2(feathers,core,IUIControl)
HX_DECLARE_CLASS2(feathers,core,IValidating)
HX_DECLARE_CLASS2(feathers,core,MeasureSprite)
HX_DECLARE_CLASS2(feathers,core,ValidatingSprite)
HX_DECLARE_CLASS2(feathers,events,TriggerEvent)
HX_DECLARE_CLASS2(feathers,layout,ILayoutObject)
HX_DECLARE_CLASS2(feathers,style,IStyleObject)
HX_DECLARE_CLASS2(feathers,style,IVariantStyleObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace feathers{
namespace controls{
namespace dataRenderers{


class HXCPP_CLASS_ATTRIBUTES ItemRenderer_obj : public  ::feathers::controls::ToggleButton_obj
{
	public:
		typedef  ::feathers::controls::ToggleButton_obj super;
		typedef ItemRenderer_obj OBJ_;
		ItemRenderer_obj();

	public:
		enum { _hx_ClassId = 0x67cf6db6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="feathers.controls.dataRenderers.ItemRenderer")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"feathers.controls.dataRenderers.ItemRenderer"); }
		static ::hx::ObjectPtr< ItemRenderer_obj > __new();
		static ::hx::ObjectPtr< ItemRenderer_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ItemRenderer_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ItemRenderer",96,5d,17,5f); }

		void initializeItemRendererTheme();
		::Dynamic initializeItemRendererTheme_dyn();

		void basicToggleButton_triggerHandler( ::feathers::events::TriggerEvent event);

		::hx::Class get_styleContext();

};

} // end namespace feathers
} // end namespace controls
} // end namespace dataRenderers

#endif /* INCLUDED_feathers_controls_dataRenderers_ItemRenderer */ 
