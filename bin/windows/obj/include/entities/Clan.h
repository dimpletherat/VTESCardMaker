// Generated by Haxe 4.1.0
#ifndef INCLUDED_entities_Clan
#define INCLUDED_entities_Clan

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(entities,Clan)
HX_DECLARE_CLASS1(entities,ClanName)

namespace entities{


class HXCPP_CLASS_ATTRIBUTES Clan_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Clan_obj OBJ_;
		Clan_obj();

	public:
		enum { _hx_ClassId = 0x1e92eedb };

		void __construct( ::entities::ClanName name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="entities.Clan")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"entities.Clan"); }
		static ::hx::ObjectPtr< Clan_obj > __new( ::entities::ClanName name);
		static ::hx::ObjectPtr< Clan_obj > __alloc(::hx::Ctx *_hx_ctx, ::entities::ClanName name);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Clan_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Clan",f6,93,9b,2c); }

		 ::entities::ClanName name;
		::String label;
		::String backgroundFileName;
		::String get_backgroundFileName();
		::Dynamic get_backgroundFileName_dyn();

};

} // end namespace entities

#endif /* INCLUDED_entities_Clan */ 
