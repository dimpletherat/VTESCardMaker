// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_feathers_data_ListViewItemState
#include <feathers/data/ListViewItemState.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_28e4ed3fb4438c9e_25_new,"feathers.data.ListViewItemState","new",0x3223d567,"feathers.data.ListViewItemState.new","feathers/data/ListViewItemState.hx",25,0x58a9e049)
namespace feathers{
namespace data{

void ListViewItemState_obj::__construct( ::Dynamic data,::hx::Null< int >  __o_index,::hx::Null< bool >  __o_selected,::String text){
            		int index = __o_index.Default(-1);
            		bool selected = __o_selected.Default(false);
            	HX_STACKFRAME(&_hx_pos_28e4ed3fb4438c9e_25_new)
HXLINE(  26)		this->data = data;
HXLINE(  27)		this->index = index;
HXLINE(  28)		this->selected = false;
HXLINE(  29)		this->text = text;
            	}

Dynamic ListViewItemState_obj::__CreateEmpty() { return new ListViewItemState_obj; }

void *ListViewItemState_obj::_hx_vtable = 0;

Dynamic ListViewItemState_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ListViewItemState_obj > _hx_result = new ListViewItemState_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool ListViewItemState_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6e924e61;
}


ListViewItemState_obj::ListViewItemState_obj()
{
}

void ListViewItemState_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ListViewItemState);
	HX_MARK_MEMBER_NAME(data,"data");
	HX_MARK_MEMBER_NAME(index,"index");
	HX_MARK_MEMBER_NAME(selected,"selected");
	HX_MARK_MEMBER_NAME(text,"text");
	HX_MARK_END_CLASS();
}

void ListViewItemState_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(data,"data");
	HX_VISIT_MEMBER_NAME(index,"index");
	HX_VISIT_MEMBER_NAME(selected,"selected");
	HX_VISIT_MEMBER_NAME(text,"text");
}

::hx::Val ListViewItemState_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { return ::hx::Val( data ); }
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { return ::hx::Val( index ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"selected") ) { return ::hx::Val( selected ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ListViewItemState_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { data=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast< ::String >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"index") ) { index=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"selected") ) { selected=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ListViewItemState_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("data",2a,56,63,42));
	outFields->push(HX_("index",12,9b,14,be));
	outFields->push(HX_("selected",5b,2a,6d,b1));
	outFields->push(HX_("text",ad,cc,f9,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ListViewItemState_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListViewItemState_obj,data),HX_("data",2a,56,63,42)},
	{::hx::fsInt,(int)offsetof(ListViewItemState_obj,index),HX_("index",12,9b,14,be)},
	{::hx::fsBool,(int)offsetof(ListViewItemState_obj,selected),HX_("selected",5b,2a,6d,b1)},
	{::hx::fsString,(int)offsetof(ListViewItemState_obj,text),HX_("text",ad,cc,f9,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ListViewItemState_obj_sStaticStorageInfo = 0;
#endif

static ::String ListViewItemState_obj_sMemberFields[] = {
	HX_("data",2a,56,63,42),
	HX_("index",12,9b,14,be),
	HX_("selected",5b,2a,6d,b1),
	HX_("text",ad,cc,f9,4c),
	::String(null()) };

::hx::Class ListViewItemState_obj::__mClass;

void ListViewItemState_obj::__register()
{
	ListViewItemState_obj _hx_dummy;
	ListViewItemState_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.data.ListViewItemState",f5,95,4d,23);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ListViewItemState_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ListViewItemState_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ListViewItemState_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ListViewItemState_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace data
