// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusManager
#include <feathers/core/IFocusManager.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_core__FeathersControl_StyleDefinition
#include <feathers/core/_FeathersControl/StyleDefinition.h>
#endif
#ifndef INCLUDED_feathers_events_FeathersEvent
#include <feathers/events/FeathersEvent.h>
#endif
#ifndef INCLUDED_feathers_events_StyleProviderEvent
#include <feathers/events/StyleProviderEvent.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutData
#include <feathers/layout/ILayoutData.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleProvider
#include <feathers/style/IStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_Theme
#include <feathers/style/Theme.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_errors_ArgumentError
#include <openfl/errors/ArgumentError.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_IllegalOperationError
#include <openfl/errors/IllegalOperationError.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fc095ab710aad3a1_42_new,"feathers.core.FeathersControl","new",0x1161a24e,"feathers.core.FeathersControl.new","feathers/core/FeathersControl.hx",42,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_100_get_enabled,"feathers.core.FeathersControl","get_enabled",0x9d61d486,"feathers.core.FeathersControl.get_enabled","feathers/core/FeathersControl.hx",100,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_103_set_enabled,"feathers.core.FeathersControl","set_enabled",0xa7cedb92,"feathers.core.FeathersControl.set_enabled","feathers/core/FeathersControl.hx",103,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_133_get_styleProvider,"feathers.core.FeathersControl","get_styleProvider",0x42838d47,"feathers.core.FeathersControl.get_styleProvider","feathers/core/FeathersControl.hx",133,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_140_set_styleProvider,"feathers.core.FeathersControl","set_styleProvider",0x65f16553,"feathers.core.FeathersControl.set_styleProvider","feathers/core/FeathersControl.hx",140,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_175_get_styleContext,"feathers.core.FeathersControl","get_styleContext",0x54278e99,"feathers.core.FeathersControl.get_styleContext","feathers/core/FeathersControl.hx",175,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_183_set_includeInLayout,"feathers.core.FeathersControl","set_includeInLayout",0xbe9aeac8,"feathers.core.FeathersControl.set_includeInLayout","feathers/core/FeathersControl.hx",183,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_198_set_layoutData,"feathers.core.FeathersControl","set_layoutData",0xfba1f783,"feathers.core.FeathersControl.set_layoutData","feathers/core/FeathersControl.hx",198,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_212_get_focusManager,"feathers.core.FeathersControl","get_focusManager",0x78398350,"feathers.core.FeathersControl.get_focusManager","feathers/core/FeathersControl.hx",212,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_215_set_focusManager,"feathers.core.FeathersControl","set_focusManager",0xce7b70c4,"feathers.core.FeathersControl.set_focusManager","feathers/core/FeathersControl.hx",215,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_230_get_focusEnabled,"feathers.core.FeathersControl","get_focusEnabled",0xe2a8f564,"feathers.core.FeathersControl.get_focusEnabled","feathers/core/FeathersControl.hx",230,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_233_set_focusEnabled,"feathers.core.FeathersControl","set_focusEnabled",0x38eae2d8,"feathers.core.FeathersControl.set_focusEnabled","feathers/core/FeathersControl.hx",233,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_251_get_focusRectSkin,"feathers.core.FeathersControl","get_focusRectSkin",0xfbe7c77e,"feathers.core.FeathersControl.get_focusRectSkin","feathers/core/FeathersControl.hx",251,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_254_set_focusRectSkin,"feathers.core.FeathersControl","set_focusRectSkin",0x1f559f8a,"feathers.core.FeathersControl.set_focusRectSkin","feathers/core/FeathersControl.hx",254,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_268_showFocus,"feathers.core.FeathersControl","showFocus",0xbaa2be09,"feathers.core.FeathersControl.showFocus","feathers/core/FeathersControl.hx",268,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_287_clearStyle_layoutData,"feathers.core.FeathersControl","clearStyle_layoutData",0x8e2cee9d,"feathers.core.FeathersControl.clearStyle_layoutData","feathers/core/FeathersControl.hx",287,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_290_setLayoutDataInternal,"feathers.core.FeathersControl","setLayoutDataInternal",0x7b7a3b01,"feathers.core.FeathersControl.setLayoutDataInternal","feathers/core/FeathersControl.hx",290,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_313_set_variant,"feathers.core.FeathersControl","set_variant",0x06801796,"feathers.core.FeathersControl.set_variant","feathers/core/FeathersControl.hx",313,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_335_validateNow,"feathers.core.FeathersControl","validateNow",0x63f6320e,"feathers.core.FeathersControl.validateNow","feathers/core/FeathersControl.hx",335,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_355_initializeNow,"feathers.core.FeathersControl","initializeNow",0x3a5ad914,"feathers.core.FeathersControl.initializeNow","feathers/core/FeathersControl.hx",355,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_377_move,"feathers.core.FeathersControl","move",0x236ac163,"feathers.core.FeathersControl.move","feathers/core/FeathersControl.hx",377,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_391_setSize,"feathers.core.FeathersControl","setSize",0xf6004271,"feathers.core.FeathersControl.setSize","feathers/core/FeathersControl.hx",391,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_414_initialize,"feathers.core.FeathersControl","initialize",0x235f9922,"feathers.core.FeathersControl.initialize","feathers/core/FeathersControl.hx",414,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_423_setStyle,"feathers.core.FeathersControl","setStyle",0x517e7d81,"feathers.core.FeathersControl.setStyle","feathers/core/FeathersControl.hx",423,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_442_isStyleRestricted,"feathers.core.FeathersControl","isStyleRestricted",0xc46e94d0,"feathers.core.FeathersControl.isStyleRestricted","feathers/core/FeathersControl.hx",442,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_447_containsStyleDef,"feathers.core.FeathersControl","containsStyleDef",0x4928bfa5,"feathers.core.FeathersControl.containsStyleDef","feathers/core/FeathersControl.hx",447,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_456_applyStyles,"feathers.core.FeathersControl","applyStyles",0xeb04161e,"feathers.core.FeathersControl.applyStyles","feathers/core/FeathersControl.hx",456,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_508_clearStyles,"feathers.core.FeathersControl","clearStyles",0x42f6637d,"feathers.core.FeathersControl.clearStyles","feathers/core/FeathersControl.hx",508,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_533_clearStyleProvider,"feathers.core.FeathersControl","clearStyleProvider",0x62d01f87,"feathers.core.FeathersControl.clearStyleProvider","feathers/core/FeathersControl.hx",533,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_543_feathersControl_addedToStageHandler,"feathers.core.FeathersControl","feathersControl_addedToStageHandler",0x8f978963,"feathers.core.FeathersControl.feathersControl_addedToStageHandler","feathers/core/FeathersControl.hx",543,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_560_feathersControl_removedFromStageHandler,"feathers.core.FeathersControl","feathersControl_removedFromStageHandler",0x854304b2,"feathers.core.FeathersControl.feathersControl_removedFromStageHandler","feathers/core/FeathersControl.hx",560,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_563_styleProvider_stylesChangeHandler,"feathers.core.FeathersControl","styleProvider_stylesChangeHandler",0xea1372a9,"feathers.core.FeathersControl.styleProvider_stylesChangeHandler","feathers/core/FeathersControl.hx",563,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_574_customStyleProvider_clearHandler,"feathers.core.FeathersControl","customStyleProvider_clearHandler",0xb888ba3d,"feathers.core.FeathersControl.customStyleProvider_clearHandler","feathers/core/FeathersControl.hx",574,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_581_styleProvider_clearHandler,"feathers.core.FeathersControl","styleProvider_clearHandler",0xfff9abac,"feathers.core.FeathersControl.styleProvider_clearHandler","feathers/core/FeathersControl.hx",581,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_590_layoutData_changeHandler,"feathers.core.FeathersControl","layoutData_changeHandler",0xc193c8c1,"feathers.core.FeathersControl.layoutData_changeHandler","feathers/core/FeathersControl.hx",590,0x65999542)
HX_LOCAL_STACK_FRAME(_hx_pos_fc095ab710aad3a1_42_boot,"feathers.core.FeathersControl","boot",0x1c256284,"feathers.core.FeathersControl.boot","feathers/core/FeathersControl.hx",42,0x65999542)
namespace feathers{
namespace core{

void FeathersControl_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_42_new)
HXLINE( 333)		this->_restrictedStyles = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 332)		this->_styleProviderStyles = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 331)		this->_clearingStyles = false;
HXLINE( 330)		this->_applyingStyles = false;
HXLINE( 311)		this->variant = null();
HXLINE( 248)		this->focusRectSkin = null();
HXLINE( 227)		this->focusEnabled = true;
HXLINE( 209)		this->focusManager = null();
HXLINE( 196)		this->layoutData = null();
HXLINE( 181)		this->includeInLayout = true;
HXLINE( 113)		this->_customStyleProvider = null();
HXLINE( 112)		this->_currentStyleProvider = null();
HXLINE(  97)		this->enabled = true;
HXLINE(  91)		this->created = false;
HXLINE(  72)		this->initialized = false;
HXLINE(  50)		this->_initializing = false;
HXLINE(  49)		this->_waitingToApplyStyles = false;
HXLINE(  44)		super::__construct();
HXLINE(  45)		this->addEventListener(HX_("addedToStage",63,22,55,0c),this->feathersControl_addedToStageHandler_dyn(),null(),null(),null());
HXLINE(  46)		this->addEventListener(HX_("removedFromStage",34,21,76,ba),this->feathersControl_removedFromStageHandler_dyn(),null(),null(),null());
            	}

Dynamic FeathersControl_obj::__CreateEmpty() { return new FeathersControl_obj; }

void *FeathersControl_obj::_hx_vtable = 0;

Dynamic FeathersControl_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FeathersControl_obj > _hx_result = new FeathersControl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FeathersControl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x093ab78b) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x093ab78b;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x58123034) {
			if (inClassId<=(int)0x4af7dd8e) {
				return inClassId==(int)0x4033f4be || inClassId==(int)0x4af7dd8e;
			} else {
				return inClassId==(int)0x58123034;
			}
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

static ::feathers::layout::ILayoutObject_obj _hx_feathers_core_FeathersControl__hx_feathers_layout_ILayoutObject= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::core::FeathersControl_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::willTrigger,
	( bool (::hx::Object::*)(bool))&::feathers::core::FeathersControl_obj::set_includeInLayout,
	( ::Dynamic (::hx::Object::*)(::Dynamic))&::feathers::core::FeathersControl_obj::set_layoutData,
};

static ::openfl::events::IEventDispatcher_obj _hx_feathers_core_FeathersControl__hx_openfl_events_IEventDispatcher= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::core::FeathersControl_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::willTrigger,
};

static ::feathers::style::IVariantStyleObject_obj _hx_feathers_core_FeathersControl__hx_feathers_style_IVariantStyleObject= {
	( ::hx::Class (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_styleContext,
	( ::String (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::set_variant,
};

static ::feathers::core::IUIControl_obj _hx_feathers_core_FeathersControl__hx_feathers_core_IUIControl= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::core::FeathersControl_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::core::FeathersControl_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_enabled,
	( bool (::hx::Object::*)(bool))&::feathers::core::FeathersControl_obj::set_enabled,
	( void (::hx::Object::*)())&::feathers::core::FeathersControl_obj::initializeNow,
};

static ::feathers::style::IStyleObject_obj _hx_feathers_core_FeathersControl__hx_feathers_style_IStyleObject= {
};

static ::feathers::core::IDisplayObject_obj _hx_feathers_core_FeathersControl__hx_feathers_core_IDisplayObject= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::core::FeathersControl_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::core::FeathersControl_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::core::FeathersControl_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::core::FeathersControl_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::core::FeathersControl_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::core::FeathersControl_obj::set_visible,
};

void *FeathersControl_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xf54ca718: return &_hx_feathers_core_FeathersControl__hx_feathers_layout_ILayoutObject;
		case (int)0x87530281: return &_hx_feathers_core_FeathersControl__hx_openfl_events_IEventDispatcher;
		case (int)0x41bc4513: return &_hx_feathers_core_FeathersControl__hx_feathers_style_IVariantStyleObject;
		case (int)0x2696a04f: return &_hx_feathers_core_FeathersControl__hx_feathers_core_IUIControl;
		case (int)0xd6c92308: return &_hx_feathers_core_FeathersControl__hx_feathers_style_IStyleObject;
		case (int)0x3a979a67: return &_hx_feathers_core_FeathersControl__hx_feathers_core_IDisplayObject;
	}
	return super::_hx_getInterface(inHash);
}

bool FeathersControl_obj::get_enabled(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_100_get_enabled)
HXDLIN( 100)		return this->enabled;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_enabled,return )

bool FeathersControl_obj::set_enabled(bool value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_103_set_enabled)
HXLINE( 104)		if ((this->get_enabled() == value)) {
HXLINE( 105)			return this->get_enabled();
            		}
HXLINE( 107)		this->enabled = value;
HXLINE( 108)		this->setInvalid(HX_("state",11,76,0b,84));
HXLINE( 109)		return this->get_enabled();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_enabled,return )

::Dynamic FeathersControl_obj::get_styleProvider(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_133_get_styleProvider)
HXLINE( 134)		if (::hx::IsNotNull( this->_customStyleProvider )) {
HXLINE( 135)			return this->_customStyleProvider;
            		}
HXLINE( 137)		return this->_currentStyleProvider;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_styleProvider,return )

::Dynamic FeathersControl_obj::set_styleProvider(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_140_set_styleProvider)
HXLINE( 141)		if (::hx::IsEq( this->_customStyleProvider,value )) {
HXLINE( 142)			return this->_customStyleProvider;
            		}
HXLINE( 144)		if (::hx::IsNotNull( this->_customStyleProvider )) {
HXLINE( 145)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->_customStyleProvider,HX_("clear",8d,71,5b,48),this->customStyleProvider_clearHandler_dyn(),null());
            		}
HXLINE( 147)		this->_customStyleProvider = value;
HXLINE( 148)		if (::hx::IsNotNull( this->_customStyleProvider )) {
HXLINE( 149)			::openfl::events::IEventDispatcher_obj::addEventListener(this->_customStyleProvider,HX_("clear",8d,71,5b,48),this->customStyleProvider_clearHandler_dyn(),false,0,true);
            		}
HXLINE( 151)		bool _hx_tmp;
HXDLIN( 151)		if (this->initialized) {
HXLINE( 151)			_hx_tmp = ::hx::IsNotNull( this->stage );
            		}
            		else {
HXLINE( 151)			_hx_tmp = false;
            		}
HXDLIN( 151)		if (_hx_tmp) {
HXLINE( 155)			this->applyStyles();
            		}
            		else {
HXLINE( 157)			this->_waitingToApplyStyles = true;
            		}
HXLINE( 159)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE( 160)		return this->_customStyleProvider;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_styleProvider,return )

::hx::Class FeathersControl_obj::get_styleContext(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_175_get_styleContext)
HXDLIN( 175)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_styleContext,return )

bool FeathersControl_obj::set_includeInLayout(bool value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_183_set_includeInLayout)
HXLINE( 184)		if ((this->includeInLayout == value)) {
HXLINE( 185)			return this->includeInLayout;
            		}
HXLINE( 187)		this->includeInLayout = value;
HXLINE( 188)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("layoutDataChange",84,c2,16,c9),null(),null());
HXLINE( 189)		return this->includeInLayout;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_includeInLayout,return )

::Dynamic FeathersControl_obj::set_layoutData(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_198_set_layoutData)
HXLINE( 199)		if (!(this->setStyle(HX_("layoutData",f4,cd,02,dd),null()))) {
HXLINE( 200)			return this->layoutData;
            		}
HXLINE( 202)		return this->setLayoutDataInternal(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_layoutData,return )

::Dynamic FeathersControl_obj::get_focusManager(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_212_get_focusManager)
HXDLIN( 212)		return this->focusManager;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_focusManager,return )

::Dynamic FeathersControl_obj::set_focusManager(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_215_set_focusManager)
HXLINE( 216)		if (::hx::IsEq( this->get_focusManager(),value )) {
HXLINE( 217)			return this->get_focusManager();
            		}
HXLINE( 219)		this->focusManager = value;
HXLINE( 220)		return this->get_focusManager();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_focusManager,return )

bool FeathersControl_obj::get_focusEnabled(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_230_get_focusEnabled)
HXDLIN( 230)		return this->focusEnabled;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_focusEnabled,return )

bool FeathersControl_obj::set_focusEnabled(bool value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_233_set_focusEnabled)
HXLINE( 234)		if ((this->get_focusEnabled() == value)) {
HXLINE( 235)			return this->get_focusEnabled();
            		}
HXLINE( 237)		this->focusEnabled = value;
HXLINE( 238)		return this->get_focusEnabled();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_focusEnabled,return )

 ::openfl::display::DisplayObject FeathersControl_obj::get_focusRectSkin(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_251_get_focusRectSkin)
HXDLIN( 251)		return this->focusRectSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,get_focusRectSkin,return )

 ::openfl::display::DisplayObject FeathersControl_obj::set_focusRectSkin( ::openfl::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_254_set_focusRectSkin)
HXLINE( 255)		if (::hx::IsEq( this->get_focusRectSkin(),value )) {
HXLINE( 256)			return this->get_focusRectSkin();
            		}
HXLINE( 258)		if (::hx::IsNotNull( this->get_focusRectSkin() )) {
HXLINE( 259)			this->showFocus(false);
            		}
HXLINE( 261)		this->focusRectSkin = value;
HXLINE( 262)		return this->get_focusRectSkin();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_focusRectSkin,return )

void FeathersControl_obj::showFocus(bool show){
            	HX_GC_STACKFRAME(&_hx_pos_fc095ab710aad3a1_268_showFocus)
HXLINE( 269)		bool _hx_tmp;
HXDLIN( 269)		if (::hx::IsNotNull( this->get_focusManager() )) {
HXLINE( 269)			_hx_tmp = ::hx::IsNull( this->get_focusRectSkin() );
            		}
            		else {
HXLINE( 269)			_hx_tmp = true;
            		}
HXDLIN( 269)		if (_hx_tmp) {
HXLINE( 270)			return;
            		}
HXLINE( 272)		if (show) {
HXLINE( 273)			 ::openfl::display::DisplayObjectContainer _hx_tmp = ::feathers::core::IFocusManager_obj::get_focusPane(this->get_focusManager());
HXDLIN( 273)			_hx_tmp->addChild(this->get_focusRectSkin());
HXLINE( 274)			 ::openfl::geom::Point point =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,0,0);
HXLINE( 275)			point = this->localToGlobal(point);
HXLINE( 276)			point = ::feathers::core::IFocusManager_obj::get_focusPane(this->get_focusManager())->globalToLocal(point);
HXLINE( 277)			this->get_focusRectSkin()->set_x(point->x);
HXLINE( 278)			this->get_focusRectSkin()->set_y(point->y);
HXLINE( 279)			this->get_focusRectSkin()->set_width(this->actualWidth);
HXLINE( 280)			this->get_focusRectSkin()->set_height(this->actualHeight);
            		}
            		else {
HXLINE( 281)			if (::hx::IsNotNull( this->get_focusRectSkin()->parent )) {
HXLINE( 282)				 ::openfl::display::DisplayObjectContainer _hx_tmp = this->get_focusRectSkin()->parent;
HXDLIN( 282)				_hx_tmp->removeChild(this->get_focusRectSkin());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,showFocus,(void))

::Dynamic FeathersControl_obj::clearStyle_layoutData(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_287_clearStyle_layoutData)
HXDLIN( 287)		return this->setLayoutDataInternal(null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,clearStyle_layoutData,return )

::Dynamic FeathersControl_obj::setLayoutDataInternal(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_290_setLayoutDataInternal)
HXLINE( 291)		if (::hx::IsEq( this->layoutData,value )) {
HXLINE( 292)			return this->layoutData;
            		}
HXLINE( 294)		if (::hx::IsNotNull( this->layoutData )) {
HXLINE( 295)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->layoutData,HX_("change",70,91,72,b7),this->layoutData_changeHandler_dyn(),null());
            		}
HXLINE( 297)		this->layoutData = value;
HXLINE( 298)		if (::hx::IsNotNull( this->layoutData )) {
HXLINE( 299)			::openfl::events::IEventDispatcher_obj::addEventListener(this->layoutData,HX_("change",70,91,72,b7),this->layoutData_changeHandler_dyn(),false,0,true);
            		}
HXLINE( 301)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("layoutDataChange",84,c2,16,c9),null(),null());
HXLINE( 302)		return this->layoutData;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,setLayoutDataInternal,return )

::String FeathersControl_obj::set_variant(::String value){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_313_set_variant)
HXLINE( 314)		if ((this->variant == value)) {
HXLINE( 315)			return this->variant;
            		}
HXLINE( 317)		this->variant = value;
HXLINE( 318)		bool _hx_tmp;
HXDLIN( 318)		if (this->initialized) {
HXLINE( 318)			_hx_tmp = ::hx::IsNotNull( this->stage );
            		}
            		else {
HXLINE( 318)			_hx_tmp = false;
            		}
HXDLIN( 318)		if (_hx_tmp) {
HXLINE( 322)			this->applyStyles();
            		}
            		else {
HXLINE( 324)			this->_waitingToApplyStyles = true;
            		}
HXLINE( 326)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE( 327)		return this->variant;
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,set_variant,return )

void FeathersControl_obj::validateNow(){
            	HX_GC_STACKFRAME(&_hx_pos_fc095ab710aad3a1_335_validateNow)
HXLINE( 336)		if (!(this->initialized)) {
HXLINE( 337)			if (this->_initializing) {
HXLINE( 338)				HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("A component cannot validate until after it has finished initializing.",d9,ea,17,6f))));
            			}
HXLINE( 340)			this->initializeNow();
            		}
HXLINE( 342)		if (this->_waitingToApplyStyles) {
HXLINE( 343)			this->applyStyles();
            		}
HXLINE( 345)		this->super::validateNow();
HXLINE( 346)		if (!(this->created)) {
HXLINE( 347)			this->created = true;
HXLINE( 348)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("creationComplete",f8,fb,74,9f),null(),null());
            		}
            	}


void FeathersControl_obj::initializeNow(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_355_initializeNow)
HXLINE( 356)		bool _hx_tmp;
HXDLIN( 356)		if (!(this->initialized)) {
HXLINE( 356)			_hx_tmp = this->_initializing;
            		}
            		else {
HXLINE( 356)			_hx_tmp = true;
            		}
HXDLIN( 356)		if (_hx_tmp) {
HXLINE( 357)			return;
            		}
HXLINE( 359)		this->_waitingToApplyStyles = true;
HXLINE( 360)		this->_initializing = true;
HXLINE( 361)		this->initialize();
HXLINE( 362)		this->setInvalid(null());
HXLINE( 363)		this->_initializing = false;
HXLINE( 364)		this->initialized = true;
HXLINE( 365)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("initialize",50,31,bb,ec),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,initializeNow,(void))

void FeathersControl_obj::move(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_377_move)
HXLINE( 378)		this->set_x(x);
HXLINE( 379)		this->set_y(y);
            	}


HX_DEFINE_DYNAMIC_FUNC2(FeathersControl_obj,move,(void))

void FeathersControl_obj::setSize(Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_391_setSize)
HXLINE( 392)		this->set_width(width);
HXLINE( 393)		this->set_height(height);
            	}


HX_DEFINE_DYNAMIC_FUNC2(FeathersControl_obj,setSize,(void))

void FeathersControl_obj::initialize(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_414_initialize)
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,initialize,(void))

bool FeathersControl_obj::setStyle(::String styleName, ::Dynamic state){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_423_setStyle)
HXLINE( 424)		 ::feathers::core::_FeathersControl::StyleDefinition styleDef;
HXDLIN( 424)		if (::hx::IsNull( state )) {
HXLINE( 424)			styleDef = ::feathers::core::_FeathersControl::StyleDefinition_obj::Name(styleName);
            		}
            		else {
HXLINE( 424)			styleDef = ::feathers::core::_FeathersControl::StyleDefinition_obj::NameAndState(styleName,state);
            		}
HXLINE( 425)		bool restricted = this->containsStyleDef(this->_restrictedStyles,styleDef);
HXLINE( 426)		bool _hx_tmp;
HXDLIN( 426)		if (this->_applyingStyles) {
HXLINE( 426)			_hx_tmp = restricted;
            		}
            		else {
HXLINE( 426)			_hx_tmp = false;
            		}
HXDLIN( 426)		if (_hx_tmp) {
HXLINE( 427)			return false;
            		}
HXLINE( 429)		if (this->_applyingStyles) {
HXLINE( 430)			bool _hx_tmp;
HXDLIN( 430)			if (!(this->_clearingStyles)) {
HXLINE( 430)				_hx_tmp = !(this->containsStyleDef(this->_styleProviderStyles,styleDef));
            			}
            			else {
HXLINE( 430)				_hx_tmp = false;
            			}
HXDLIN( 430)			if (_hx_tmp) {
HXLINE( 431)				this->_styleProviderStyles->push(styleDef);
            			}
            		}
            		else {
HXLINE( 433)			if (!(restricted)) {
HXLINE( 434)				bool _hx_tmp;
HXDLIN( 434)				if (!(this->_clearingStyles)) {
HXLINE( 434)					_hx_tmp = this->containsStyleDef(this->_styleProviderStyles,styleDef);
            				}
            				else {
HXLINE( 434)					_hx_tmp = false;
            				}
HXDLIN( 434)				if (_hx_tmp) {
HXLINE( 435)					this->_styleProviderStyles->remove(styleDef);
            				}
HXLINE( 437)				this->_restrictedStyles->push(styleDef);
            			}
            		}
HXLINE( 439)		return true;
            	}


HX_DEFINE_DYNAMIC_FUNC2(FeathersControl_obj,setStyle,return )

bool FeathersControl_obj::isStyleRestricted(::String styleName, ::Dynamic state){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_442_isStyleRestricted)
HXLINE( 443)		 ::feathers::core::_FeathersControl::StyleDefinition styleDef;
HXDLIN( 443)		if (::hx::IsNull( state )) {
HXLINE( 443)			styleDef = ::feathers::core::_FeathersControl::StyleDefinition_obj::Name(styleName);
            		}
            		else {
HXLINE( 443)			styleDef = ::feathers::core::_FeathersControl::StyleDefinition_obj::NameAndState(styleName,state);
            		}
HXLINE( 444)		return this->containsStyleDef(this->_restrictedStyles,styleDef);
            	}


HX_DEFINE_DYNAMIC_FUNC2(FeathersControl_obj,isStyleRestricted,return )

bool FeathersControl_obj::containsStyleDef(::Array< ::Dynamic> target, ::feathers::core::_FeathersControl::StyleDefinition styleDef){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_447_containsStyleDef)
HXLINE( 448)		{
HXLINE( 448)			int _g = 0;
HXDLIN( 448)			while((_g < target->length)){
HXLINE( 448)				 ::feathers::core::_FeathersControl::StyleDefinition other = target->__get(_g).StaticCast<  ::feathers::core::_FeathersControl::StyleDefinition >();
HXDLIN( 448)				_g = (_g + 1);
HXLINE( 449)				if (::Type_obj::enumEq(styleDef,other)) {
HXLINE( 450)					return true;
            				}
            			}
            		}
HXLINE( 453)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC2(FeathersControl_obj,containsStyleDef,return )

void FeathersControl_obj::applyStyles(){
            	HX_GC_STACKFRAME(&_hx_pos_fc095ab710aad3a1_456_applyStyles)
HXLINE( 457)		if (!(this->initialized)) {
HXLINE( 458)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,HX_("Cannot apply styles until after a Feathers UI component has initialized.",93,b3,d3,93))));
            		}
HXLINE( 460)		this->_waitingToApplyStyles = false;
HXLINE( 461)		::Dynamic styleProvider = this->_customStyleProvider;
HXLINE( 462)		if (::hx::IsNull( styleProvider )) {
HXLINE( 463)			styleProvider = this->_currentStyleProvider;
            		}
HXLINE( 465)		if (::hx::IsNull( styleProvider )) {
HXLINE( 466)			::Dynamic theme = ::feathers::style::Theme_obj::getTheme(::hx::ObjectPtr<OBJ_>(this));
HXLINE( 467)			if (::hx::IsNotNull( theme )) {
HXLINE( 468)				styleProvider = ::feathers::style::ITheme_obj::getStyleProvider(theme,::hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 471)		if (::hx::IsNull( styleProvider )) {
HXLINE( 472)			::Dynamic theme = ::feathers::style::Theme_obj::get_fallbackTheme();
HXLINE( 473)			if (::hx::IsNotNull( theme )) {
HXLINE( 474)				styleProvider = ::feathers::style::ITheme_obj::getStyleProvider(theme,::hx::ObjectPtr<OBJ_>(this));
            			}
            		}
HXLINE( 477)		if (::hx::IsNotEq( this->_currentStyleProvider,styleProvider )) {
HXLINE( 478)			if (::hx::IsNotNull( this->_currentStyleProvider )) {
HXLINE( 479)				::openfl::events::IEventDispatcher_obj::removeEventListener(this->_currentStyleProvider,HX_("stylesChange",32,31,e4,f9),this->styleProvider_stylesChangeHandler_dyn(),null());
HXLINE( 480)				::openfl::events::IEventDispatcher_obj::removeEventListener(this->_currentStyleProvider,HX_("clear",8d,71,5b,48),this->styleProvider_clearHandler_dyn(),null());
            			}
HXLINE( 482)			this->_currentStyleProvider = styleProvider;
HXLINE( 483)			if (::hx::IsNotNull( this->_currentStyleProvider )) {
HXLINE( 484)				::openfl::events::IEventDispatcher_obj::addEventListener(this->_currentStyleProvider,HX_("stylesChange",32,31,e4,f9),this->styleProvider_stylesChangeHandler_dyn(),false,0,true);
HXLINE( 485)				::openfl::events::IEventDispatcher_obj::addEventListener(this->_currentStyleProvider,HX_("clear",8d,71,5b,48),this->styleProvider_clearHandler_dyn(),false,0,true);
            			}
            		}
HXLINE( 489)		bool oldApplyingStyles = this->_applyingStyles;
HXLINE( 492)		this->_applyingStyles = true;
HXLINE( 496)		this->clearStyles();
HXLINE( 499)		if (::hx::IsNotNull( this->_currentStyleProvider )) {
HXLINE( 500)			::feathers::style::IStyleProvider_obj::applyStyles(this->_currentStyleProvider,::hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 503)		this->_applyingStyles = oldApplyingStyles;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,applyStyles,(void))

void FeathersControl_obj::clearStyles(){
            	HX_GC_STACKFRAME(&_hx_pos_fc095ab710aad3a1_508_clearStyles)
HXLINE( 509)		bool oldClearingStyles = this->_clearingStyles;
HXLINE( 510)		this->_clearingStyles = true;
HXLINE( 511)		{
HXLINE( 511)			int _g = 0;
HXDLIN( 511)			::Array< ::Dynamic> _g1 = this->_styleProviderStyles;
HXDLIN( 511)			while((_g < _g1->length)){
HXLINE( 511)				 ::feathers::core::_FeathersControl::StyleDefinition styleDef = _g1->__get(_g).StaticCast<  ::feathers::core::_FeathersControl::StyleDefinition >();
HXDLIN( 511)				_g = (_g + 1);
HXLINE( 512)				switch((int)(styleDef->_hx_getIndex())){
            					case (int)0: {
HXLINE( 513)						::String name = styleDef->_hx_getString(0);
HXLINE( 514)						{
HXLINE( 515)							::String clearMethodName = (HX_("clearStyle_",7b,f3,bf,a9) + name);
HXLINE( 516)							 ::Dynamic clearMethod = ::Reflect_obj::field(::hx::ObjectPtr<OBJ_>(this),clearMethodName);
HXLINE( 517)							if (::hx::IsNull( clearMethod )) {
HXLINE( 518)								HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::ArgumentError_obj::__alloc( HX_CTX ,((HX_("Missing @style method: '",ab,64,95,d1) + clearMethodName) + HX_("'",27,00,00,00)))));
            							}
HXLINE( 520)							::Reflect_obj::callMethod(::hx::ObjectPtr<OBJ_>(this),clearMethod,::cpp::VirtualArray_obj::__new(0));
            						}
            					}
            					break;
            					case (int)1: {
HXLINE( 522)						 ::Dynamic state = styleDef->_hx_getObject(1);
HXDLIN( 522)						::String name = styleDef->_hx_getString(0);
HXLINE( 523)						{
HXLINE( 524)							 ::Dynamic method = ::Reflect_obj::field(::hx::ObjectPtr<OBJ_>(this),name);
HXLINE( 525)							::Reflect_obj::callMethod(::hx::ObjectPtr<OBJ_>(this),method,::cpp::VirtualArray_obj::__new(2)->init(0,state)->init(1,null()));
            						}
            					}
            					break;
            				}
            			}
            		}
HXLINE( 529)		this->_styleProviderStyles = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 530)		this->_clearingStyles = oldClearingStyles;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,clearStyles,(void))

void FeathersControl_obj::clearStyleProvider(){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_533_clearStyleProvider)
HXLINE( 534)		if (::hx::IsNull( this->_currentStyleProvider )) {
HXLINE( 535)			return;
            		}
HXLINE( 537)		::openfl::events::IEventDispatcher_obj::removeEventListener(this->_currentStyleProvider,HX_("stylesChange",32,31,e4,f9),this->styleProvider_stylesChangeHandler_dyn(),null());
HXLINE( 538)		::openfl::events::IEventDispatcher_obj::removeEventListener(this->_currentStyleProvider,HX_("clear",8d,71,5b,48),this->styleProvider_clearHandler_dyn(),null());
HXLINE( 539)		this->_currentStyleProvider = null();
HXLINE( 540)		this->_waitingToApplyStyles = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FeathersControl_obj,clearStyleProvider,(void))

void FeathersControl_obj::feathersControl_addedToStageHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_543_feathersControl_addedToStageHandler)
HXLINE( 547)		if (!(this->initialized)) {
HXLINE( 548)			this->initializeNow();
            		}
HXLINE( 550)		if (this->_waitingToApplyStyles) {
HXLINE( 551)			this->applyStyles();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,feathersControl_addedToStageHandler,(void))

void FeathersControl_obj::feathersControl_removedFromStageHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_560_feathersControl_removedFromStageHandler)
HXDLIN( 560)		this->clearStyleProvider();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,feathersControl_removedFromStageHandler,(void))

void FeathersControl_obj::styleProvider_stylesChangeHandler( ::feathers::events::StyleProviderEvent event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_563_styleProvider_stylesChangeHandler)
HXLINE( 564)		if (!(( (bool)(event->affectsTarget(::hx::ObjectPtr<OBJ_>(this))) ))) {
HXLINE( 565)			return;
            		}
HXLINE( 567)		if (::hx::IsNotNull( this->stage )) {
HXLINE( 568)			this->applyStyles();
            		}
            		else {
HXLINE( 570)			this->_waitingToApplyStyles = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,styleProvider_stylesChangeHandler,(void))

void FeathersControl_obj::customStyleProvider_clearHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_574_customStyleProvider_clearHandler)
HXLINE( 575)		::openfl::events::IEventDispatcher_obj::removeEventListener(this->_customStyleProvider,HX_("clear",8d,71,5b,48),this->customStyleProvider_clearHandler_dyn(),null());
HXLINE( 576)		this->_customStyleProvider = null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,customStyleProvider_clearHandler,(void))

void FeathersControl_obj::styleProvider_clearHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_581_styleProvider_clearHandler)
HXLINE( 583)		this->clearStyleProvider();
HXLINE( 584)		if (::hx::IsNotNull( this->stage )) {
HXLINE( 585)			this->applyStyles();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,styleProvider_clearHandler,(void))

void FeathersControl_obj::layoutData_changeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_590_layoutData_changeHandler)
HXDLIN( 590)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("layoutDataChange",84,c2,16,c9),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(FeathersControl_obj,layoutData_changeHandler,(void))


::hx::ObjectPtr< FeathersControl_obj > FeathersControl_obj::__new() {
	::hx::ObjectPtr< FeathersControl_obj > __this = new FeathersControl_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< FeathersControl_obj > FeathersControl_obj::__alloc(::hx::Ctx *_hx_ctx) {
	FeathersControl_obj *__this = (FeathersControl_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FeathersControl_obj), true, "feathers.core.FeathersControl"));
	*(void **)__this = FeathersControl_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

FeathersControl_obj::FeathersControl_obj()
{
}

void FeathersControl_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(FeathersControl);
	HX_MARK_MEMBER_NAME(_waitingToApplyStyles,"_waitingToApplyStyles");
	HX_MARK_MEMBER_NAME(_initializing,"_initializing");
	HX_MARK_MEMBER_NAME(initialized,"initialized");
	HX_MARK_MEMBER_NAME(created,"created");
	HX_MARK_MEMBER_NAME(enabled,"enabled");
	HX_MARK_MEMBER_NAME(_currentStyleProvider,"_currentStyleProvider");
	HX_MARK_MEMBER_NAME(_customStyleProvider,"_customStyleProvider");
	HX_MARK_MEMBER_NAME(includeInLayout,"includeInLayout");
	HX_MARK_MEMBER_NAME(layoutData,"layoutData");
	HX_MARK_MEMBER_NAME(focusManager,"focusManager");
	HX_MARK_MEMBER_NAME(focusEnabled,"focusEnabled");
	HX_MARK_MEMBER_NAME(focusRectSkin,"focusRectSkin");
	HX_MARK_MEMBER_NAME(variant,"variant");
	HX_MARK_MEMBER_NAME(_applyingStyles,"_applyingStyles");
	HX_MARK_MEMBER_NAME(_clearingStyles,"_clearingStyles");
	HX_MARK_MEMBER_NAME(_styleProviderStyles,"_styleProviderStyles");
	HX_MARK_MEMBER_NAME(_restrictedStyles,"_restrictedStyles");
	HX_MARK_MEMBER_NAME(_previousClearStyle,"_previousClearStyle");
	 ::feathers::core::MeasureSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void FeathersControl_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_waitingToApplyStyles,"_waitingToApplyStyles");
	HX_VISIT_MEMBER_NAME(_initializing,"_initializing");
	HX_VISIT_MEMBER_NAME(initialized,"initialized");
	HX_VISIT_MEMBER_NAME(created,"created");
	HX_VISIT_MEMBER_NAME(enabled,"enabled");
	HX_VISIT_MEMBER_NAME(_currentStyleProvider,"_currentStyleProvider");
	HX_VISIT_MEMBER_NAME(_customStyleProvider,"_customStyleProvider");
	HX_VISIT_MEMBER_NAME(includeInLayout,"includeInLayout");
	HX_VISIT_MEMBER_NAME(layoutData,"layoutData");
	HX_VISIT_MEMBER_NAME(focusManager,"focusManager");
	HX_VISIT_MEMBER_NAME(focusEnabled,"focusEnabled");
	HX_VISIT_MEMBER_NAME(focusRectSkin,"focusRectSkin");
	HX_VISIT_MEMBER_NAME(variant,"variant");
	HX_VISIT_MEMBER_NAME(_applyingStyles,"_applyingStyles");
	HX_VISIT_MEMBER_NAME(_clearingStyles,"_clearingStyles");
	HX_VISIT_MEMBER_NAME(_styleProviderStyles,"_styleProviderStyles");
	HX_VISIT_MEMBER_NAME(_restrictedStyles,"_restrictedStyles");
	HX_VISIT_MEMBER_NAME(_previousClearStyle,"_previousClearStyle");
	 ::feathers::core::MeasureSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val FeathersControl_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"move") ) { return ::hx::Val( move_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"created") ) { return ::hx::Val( created ); }
		if (HX_FIELD_EQ(inName,"enabled") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_enabled() : enabled ); }
		if (HX_FIELD_EQ(inName,"variant") ) { return ::hx::Val( variant ); }
		if (HX_FIELD_EQ(inName,"setSize") ) { return ::hx::Val( setSize_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setStyle") ) { return ::hx::Val( setStyle_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"showFocus") ) { return ::hx::Val( showFocus_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"layoutData") ) { return ::hx::Val( layoutData ); }
		if (HX_FIELD_EQ(inName,"initialize") ) { return ::hx::Val( initialize_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initialized") ) { return ::hx::Val( initialized ); }
		if (HX_FIELD_EQ(inName,"get_enabled") ) { return ::hx::Val( get_enabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_enabled") ) { return ::hx::Val( set_enabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_variant") ) { return ::hx::Val( set_variant_dyn() ); }
		if (HX_FIELD_EQ(inName,"validateNow") ) { return ::hx::Val( validateNow_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyStyles") ) { return ::hx::Val( applyStyles_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyles") ) { return ::hx::Val( clearStyles_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"styleContext") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_styleContext() ); }
		if (HX_FIELD_EQ(inName,"focusManager") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_focusManager() : focusManager ); }
		if (HX_FIELD_EQ(inName,"focusEnabled") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_focusEnabled() : focusEnabled ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_initializing") ) { return ::hx::Val( _initializing ); }
		if (HX_FIELD_EQ(inName,"styleProvider") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_styleProvider() ); }
		if (HX_FIELD_EQ(inName,"focusRectSkin") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_focusRectSkin() : focusRectSkin ); }
		if (HX_FIELD_EQ(inName,"initializeNow") ) { return ::hx::Val( initializeNow_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"set_layoutData") ) { return ::hx::Val( set_layoutData_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"includeInLayout") ) { return ::hx::Val( includeInLayout ); }
		if (HX_FIELD_EQ(inName,"_applyingStyles") ) { return ::hx::Val( _applyingStyles ); }
		if (HX_FIELD_EQ(inName,"_clearingStyles") ) { return ::hx::Val( _clearingStyles ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_styleContext") ) { return ::hx::Val( get_styleContext_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_focusManager") ) { return ::hx::Val( get_focusManager_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_focusManager") ) { return ::hx::Val( set_focusManager_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_focusEnabled") ) { return ::hx::Val( get_focusEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_focusEnabled") ) { return ::hx::Val( set_focusEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"containsStyleDef") ) { return ::hx::Val( containsStyleDef_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_styleProvider") ) { return ::hx::Val( get_styleProvider_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_styleProvider") ) { return ::hx::Val( set_styleProvider_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_focusRectSkin") ) { return ::hx::Val( get_focusRectSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_focusRectSkin") ) { return ::hx::Val( set_focusRectSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"_restrictedStyles") ) { return ::hx::Val( _restrictedStyles ); }
		if (HX_FIELD_EQ(inName,"isStyleRestricted") ) { return ::hx::Val( isStyleRestricted_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"clearStyleProvider") ) { return ::hx::Val( clearStyleProvider_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"set_includeInLayout") ) { return ::hx::Val( set_includeInLayout_dyn() ); }
		if (HX_FIELD_EQ(inName,"_previousClearStyle") ) { return ::hx::Val( _previousClearStyle ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_customStyleProvider") ) { return ::hx::Val( _customStyleProvider ); }
		if (HX_FIELD_EQ(inName,"_styleProviderStyles") ) { return ::hx::Val( _styleProviderStyles ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"_waitingToApplyStyles") ) { return ::hx::Val( _waitingToApplyStyles ); }
		if (HX_FIELD_EQ(inName,"_currentStyleProvider") ) { return ::hx::Val( _currentStyleProvider ); }
		if (HX_FIELD_EQ(inName,"clearStyle_layoutData") ) { return ::hx::Val( clearStyle_layoutData_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLayoutDataInternal") ) { return ::hx::Val( setLayoutDataInternal_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"layoutData_changeHandler") ) { return ::hx::Val( layoutData_changeHandler_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"styleProvider_clearHandler") ) { return ::hx::Val( styleProvider_clearHandler_dyn() ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"customStyleProvider_clearHandler") ) { return ::hx::Val( customStyleProvider_clearHandler_dyn() ); }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"styleProvider_stylesChangeHandler") ) { return ::hx::Val( styleProvider_stylesChangeHandler_dyn() ); }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"feathersControl_addedToStageHandler") ) { return ::hx::Val( feathersControl_addedToStageHandler_dyn() ); }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"feathersControl_removedFromStageHandler") ) { return ::hx::Val( feathersControl_removedFromStageHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FeathersControl_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"created") ) { created=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"enabled") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_enabled(inValue.Cast< bool >()) );enabled=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"variant") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_variant(inValue.Cast< ::String >()) );variant=inValue.Cast< ::String >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"layoutData") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_layoutData(inValue.Cast< ::Dynamic >()) );layoutData=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initialized") ) { initialized=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"focusManager") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_focusManager(inValue.Cast< ::Dynamic >()) );focusManager=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"focusEnabled") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_focusEnabled(inValue.Cast< bool >()) );focusEnabled=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_initializing") ) { _initializing=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"styleProvider") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_styleProvider(inValue.Cast< ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"focusRectSkin") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_focusRectSkin(inValue.Cast<  ::openfl::display::DisplayObject >()) );focusRectSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"includeInLayout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_includeInLayout(inValue.Cast< bool >()) );includeInLayout=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_applyingStyles") ) { _applyingStyles=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_clearingStyles") ) { _clearingStyles=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_restrictedStyles") ) { _restrictedStyles=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_previousClearStyle") ) { _previousClearStyle=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_customStyleProvider") ) { _customStyleProvider=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_styleProviderStyles") ) { _styleProviderStyles=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"_waitingToApplyStyles") ) { _waitingToApplyStyles=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_currentStyleProvider") ) { _currentStyleProvider=inValue.Cast< ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FeathersControl_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_waitingToApplyStyles",87,60,96,78));
	outFields->push(HX_("_initializing",6c,21,58,d9));
	outFields->push(HX_("initialized",14,f5,0f,37));
	outFields->push(HX_("created",e8,b5,6a,11));
	outFields->push(HX_("enabled",81,04,31,7e));
	outFields->push(HX_("_currentStyleProvider",68,39,19,4f));
	outFields->push(HX_("_customStyleProvider",12,90,30,94));
	outFields->push(HX_("styleProvider",82,6b,eb,5e));
	outFields->push(HX_("styleContext",be,90,81,46));
	outFields->push(HX_("includeInLayout",b7,1a,c6,6e));
	outFields->push(HX_("layoutData",f4,cd,02,dd));
	outFields->push(HX_("focusManager",75,85,93,6a));
	outFields->push(HX_("focusEnabled",89,f7,02,d5));
	outFields->push(HX_("focusRectSkin",b9,a5,4f,18));
	outFields->push(HX_("variant",85,40,e2,dc));
	outFields->push(HX_("_applyingStyles",15,e2,46,b4));
	outFields->push(HX_("_clearingStyles",16,fa,cd,83));
	outFields->push(HX_("_styleProviderStyles",45,6a,74,c1));
	outFields->push(HX_("_restrictedStyles",7c,19,a2,50));
	outFields->push(HX_("_previousClearStyle",9a,33,f0,d5));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FeathersControl_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,_waitingToApplyStyles),HX_("_waitingToApplyStyles",87,60,96,78)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,_initializing),HX_("_initializing",6c,21,58,d9)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,initialized),HX_("initialized",14,f5,0f,37)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,created),HX_("created",e8,b5,6a,11)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,enabled),HX_("enabled",81,04,31,7e)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(FeathersControl_obj,_currentStyleProvider),HX_("_currentStyleProvider",68,39,19,4f)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(FeathersControl_obj,_customStyleProvider),HX_("_customStyleProvider",12,90,30,94)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,includeInLayout),HX_("includeInLayout",b7,1a,c6,6e)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(FeathersControl_obj,layoutData),HX_("layoutData",f4,cd,02,dd)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(FeathersControl_obj,focusManager),HX_("focusManager",75,85,93,6a)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,focusEnabled),HX_("focusEnabled",89,f7,02,d5)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(FeathersControl_obj,focusRectSkin),HX_("focusRectSkin",b9,a5,4f,18)},
	{::hx::fsString,(int)offsetof(FeathersControl_obj,variant),HX_("variant",85,40,e2,dc)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,_applyingStyles),HX_("_applyingStyles",15,e2,46,b4)},
	{::hx::fsBool,(int)offsetof(FeathersControl_obj,_clearingStyles),HX_("_clearingStyles",16,fa,cd,83)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(FeathersControl_obj,_styleProviderStyles),HX_("_styleProviderStyles",45,6a,74,c1)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(FeathersControl_obj,_restrictedStyles),HX_("_restrictedStyles",7c,19,a2,50)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(FeathersControl_obj,_previousClearStyle),HX_("_previousClearStyle",9a,33,f0,d5)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *FeathersControl_obj_sStaticStorageInfo = 0;
#endif

static ::String FeathersControl_obj_sMemberFields[] = {
	HX_("_waitingToApplyStyles",87,60,96,78),
	HX_("_initializing",6c,21,58,d9),
	HX_("initialized",14,f5,0f,37),
	HX_("created",e8,b5,6a,11),
	HX_("enabled",81,04,31,7e),
	HX_("get_enabled",98,64,2b,04),
	HX_("set_enabled",a4,6b,98,0e),
	HX_("_currentStyleProvider",68,39,19,4f),
	HX_("_customStyleProvider",12,90,30,94),
	HX_("get_styleProvider",d9,76,5b,65),
	HX_("set_styleProvider",e5,4e,c9,88),
	HX_("get_styleContext",47,7d,20,4b),
	HX_("includeInLayout",b7,1a,c6,6e),
	HX_("set_includeInLayout",da,dc,6d,36),
	HX_("layoutData",f4,cd,02,dd),
	HX_("set_layoutData",b1,3e,18,73),
	HX_("focusManager",75,85,93,6a),
	HX_("get_focusManager",fe,71,32,6f),
	HX_("set_focusManager",72,5f,74,c5),
	HX_("focusEnabled",89,f7,02,d5),
	HX_("get_focusEnabled",12,e4,a1,d9),
	HX_("set_focusEnabled",86,d1,e3,2f),
	HX_("focusRectSkin",b9,a5,4f,18),
	HX_("get_focusRectSkin",10,b1,bf,1e),
	HX_("set_focusRectSkin",1c,89,2d,42),
	HX_("showFocus",9b,c5,ed,32),
	HX_("clearStyle_layoutData",2f,09,2e,d6),
	HX_("setLayoutDataInternal",93,55,7b,c3),
	HX_("variant",85,40,e2,dc),
	HX_("set_variant",a8,a7,49,6d),
	HX_("_applyingStyles",15,e2,46,b4),
	HX_("_clearingStyles",16,fa,cd,83),
	HX_("_styleProviderStyles",45,6a,74,c1),
	HX_("_restrictedStyles",7c,19,a2,50),
	HX_("validateNow",20,c2,bf,ca),
	HX_("initializeNow",a6,11,b6,12),
	HX_("move",11,e3,60,48),
	HX_("setSize",83,e1,d7,11),
	HX_("initialize",50,31,bb,ec),
	HX_("setStyle",2f,0e,52,92),
	HX_("isStyleRestricted",62,7e,46,e7),
	HX_("containsStyleDef",53,ae,21,40),
	HX_("applyStyles",30,a6,cd,51),
	HX_("_previousClearStyle",9a,33,f0,d5),
	HX_("clearStyles",8f,f3,bf,a9),
	HX_("clearStyleProvider",b5,95,e4,bc),
	HX_("feathersControl_addedToStageHandler",75,3f,13,fd),
	HX_("feathersControl_removedFromStageHandler",c4,2b,08,17),
	HX_("styleProvider_stylesChangeHandler",3b,20,1b,04),
	HX_("customStyleProvider_clearHandler",eb,64,76,ce),
	HX_("styleProvider_clearHandler",da,ff,d4,bb),
	HX_("layoutData_changeHandler",6f,15,40,40),
	::String(null()) };

::hx::Class FeathersControl_obj::__mClass;

void FeathersControl_obj::__register()
{
	FeathersControl_obj _hx_dummy;
	FeathersControl_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.core.FeathersControl",5c,23,fb,d9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FeathersControl_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FeathersControl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FeathersControl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FeathersControl_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FeathersControl_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_fc095ab710aad3a1_42_boot)
HXDLIN(  42)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("layoutData",f4,cd,02,dd), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("style",31,a5,1d,84),null()))))));
            	}
}

} // end namespace feathers
} // end namespace core
