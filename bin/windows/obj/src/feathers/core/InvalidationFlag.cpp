// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_feathers_core_InvalidationFlag
#include <feathers/core/InvalidationFlag.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_35_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",35,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_42_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",42,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_49_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",49,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_56_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",56,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_63_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",63,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_70_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",70,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_77_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",77,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_84_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",84,0x3574bc03)
HX_LOCAL_STACK_FRAME(_hx_pos_c6ff41311e3b55f9_91_boot,"feathers.core.InvalidationFlag","boot",0xfb454045,"feathers.core.InvalidationFlag.boot","feathers/core/InvalidationFlag.hx",91,0x3574bc03)
namespace feathers{
namespace core{

void InvalidationFlag_obj::__construct() { }

Dynamic InvalidationFlag_obj::__CreateEmpty() { return new InvalidationFlag_obj; }

void *InvalidationFlag_obj::_hx_vtable = 0;

Dynamic InvalidationFlag_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< InvalidationFlag_obj > _hx_result = new InvalidationFlag_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool InvalidationFlag_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2b006461;
}

::String InvalidationFlag_obj::STATE;

::String InvalidationFlag_obj::SIZE;

::String InvalidationFlag_obj::STYLES;

::String InvalidationFlag_obj::SKIN;

::String InvalidationFlag_obj::LAYOUT;

::String InvalidationFlag_obj::DATA;

::String InvalidationFlag_obj::SCROLL;

::String InvalidationFlag_obj::SELECTION;

::String InvalidationFlag_obj::FOCUS;


InvalidationFlag_obj::InvalidationFlag_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *InvalidationFlag_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo InvalidationFlag_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &InvalidationFlag_obj::STATE,HX_("STATE",f1,ad,f9,01)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::SIZE,HX_("SIZE",c1,68,14,37)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::STYLES,HX_("STYLES",22,92,55,c8)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::SKIN,HX_("SKIN",7d,de,15,37)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::LAYOUT,HX_("LAYOUT",aa,5a,3b,0b)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::DATA,HX_("DATA",2a,1e,24,2d)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::SCROLL,HX_("SCROLL",0d,84,e7,f9)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::SELECTION,HX_("SELECTION",2c,68,73,89)},
	{::hx::fsString,(void *) &InvalidationFlag_obj::FOCUS,HX_("FOCUS",b8,97,77,82)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void InvalidationFlag_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::STATE,"STATE");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::SIZE,"SIZE");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::STYLES,"STYLES");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::SKIN,"SKIN");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::LAYOUT,"LAYOUT");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::DATA,"DATA");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::SCROLL,"SCROLL");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::SELECTION,"SELECTION");
	HX_MARK_MEMBER_NAME(InvalidationFlag_obj::FOCUS,"FOCUS");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InvalidationFlag_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::STATE,"STATE");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::SIZE,"SIZE");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::STYLES,"STYLES");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::SKIN,"SKIN");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::LAYOUT,"LAYOUT");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::DATA,"DATA");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::SCROLL,"SCROLL");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::SELECTION,"SELECTION");
	HX_VISIT_MEMBER_NAME(InvalidationFlag_obj::FOCUS,"FOCUS");
};

#endif

::hx::Class InvalidationFlag_obj::__mClass;

static ::String InvalidationFlag_obj_sStaticFields[] = {
	HX_("STATE",f1,ad,f9,01),
	HX_("SIZE",c1,68,14,37),
	HX_("STYLES",22,92,55,c8),
	HX_("SKIN",7d,de,15,37),
	HX_("LAYOUT",aa,5a,3b,0b),
	HX_("DATA",2a,1e,24,2d),
	HX_("SCROLL",0d,84,e7,f9),
	HX_("SELECTION",2c,68,73,89),
	HX_("FOCUS",b8,97,77,82),
	::String(null())
};

void InvalidationFlag_obj::__register()
{
	InvalidationFlag_obj _hx_dummy;
	InvalidationFlag_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.core.InvalidationFlag",3b,1d,8a,be);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = InvalidationFlag_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(InvalidationFlag_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< InvalidationFlag_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = InvalidationFlag_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = InvalidationFlag_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = InvalidationFlag_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void InvalidationFlag_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_35_boot)
HXDLIN(  35)		STATE = HX_("state",11,76,0b,84);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_42_boot)
HXDLIN(  42)		SIZE = HX_("size",c1,a0,53,4c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_49_boot)
HXDLIN(  49)		STYLES = HX_("styles",22,e6,d2,15);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_56_boot)
HXDLIN(  56)		SKIN = HX_("skin",7d,16,55,4c);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_63_boot)
HXDLIN(  63)		LAYOUT = HX_("layout",aa,ae,b8,58);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_70_boot)
HXDLIN(  70)		DATA = HX_("data",2a,56,63,42);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_77_boot)
HXDLIN(  77)		SCROLL = HX_("scroll",0d,d8,64,47);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_84_boot)
HXDLIN(  84)		SELECTION = HX_("selection",4c,f8,1a,8e);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c6ff41311e3b55f9_91_boot)
HXDLIN(  91)		FOCUS = HX_("focus",d8,5f,89,04);
            	}
}

} // end namespace feathers
} // end namespace core
