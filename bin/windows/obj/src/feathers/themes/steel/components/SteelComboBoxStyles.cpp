// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_feathers_controls_BasicButton
#include <feathers/controls/BasicButton.h>
#endif
#ifndef INCLUDED_feathers_controls_Button
#include <feathers/controls/Button.h>
#endif
#ifndef INCLUDED_feathers_controls_ButtonState
#include <feathers/controls/ButtonState.h>
#endif
#ifndef INCLUDED_feathers_controls_ComboBox
#include <feathers/controls/ComboBox.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDataSelector
#include <feathers/core/IDataSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusObject
#include <feathers/core/IFocusObject.h>
#endif
#ifndef INCLUDED_feathers_core_IIndexSelector
#include <feathers/core/IIndexSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IStateContext
#include <feathers/core/IStateContext.h>
#endif
#ifndef INCLUDED_feathers_core_ITextControl
#include <feathers/core/ITextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_style_ClassVariantStyleProvider
#include <feathers/style/ClassVariantStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleProvider
#include <feathers/style/IStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_Theme
#include <feathers/style/Theme.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelComboBoxStyles
#include <feathers/themes/steel/components/SteelComboBoxStyles.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2c40f0059a9b3ceb_28_initialize,"feathers.themes.steel.components.SteelComboBoxStyles","initialize",0x6f2ac163,"feathers.themes.steel.components.SteelComboBoxStyles.initialize","feathers/themes/steel/components/SteelComboBoxStyles.hx",28,0x203057a3)
HX_LOCAL_STACK_FRAME(_hx_pos_2c40f0059a9b3ceb_38_initialize,"feathers.themes.steel.components.SteelComboBoxStyles","initialize",0x6f2ac163,"feathers.themes.steel.components.SteelComboBoxStyles.initialize","feathers/themes/steel/components/SteelComboBoxStyles.hx",38,0x203057a3)
namespace feathers{
namespace themes{
namespace steel{
namespace components{

void SteelComboBoxStyles_obj::__construct() { }

Dynamic SteelComboBoxStyles_obj::__CreateEmpty() { return new SteelComboBoxStyles_obj; }

void *SteelComboBoxStyles_obj::_hx_vtable = 0;

Dynamic SteelComboBoxStyles_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SteelComboBoxStyles_obj > _hx_result = new SteelComboBoxStyles_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SteelComboBoxStyles_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7727c7c7;
}

void SteelComboBoxStyles_obj::initialize( ::feathers::themes::steel::BaseSteelTheme theme){
            	HX_STACKFRAME(&_hx_pos_2c40f0059a9b3ceb_28_initialize)
HXLINE(  29)		if (::hx::IsNull( theme )) {
HXLINE(  30)			theme = ( ( ::feathers::themes::steel::BaseSteelTheme)(::Std_obj::downcast(::feathers::style::Theme_obj::get_fallbackTheme(),::hx::ClassOf< ::feathers::themes::steel::BaseSteelTheme >())) );
            		}
HXLINE(  32)		if (::hx::IsNull( theme )) {
HXLINE(  33)			return;
            		}
HXLINE(  36)		 ::feathers::style::ClassVariantStyleProvider styleProvider = theme->styleProvider;
HXLINE(  37)		if (::hx::IsNull( styleProvider->getStyleFunction(::hx::ClassOf< ::feathers::controls::Button >(),::feathers::controls::ComboBox_obj::CHILD_VARIANT_BUTTON) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::feathers::themes::steel::BaseSteelTheme,theme) HXARGC(1)
            			void _hx_run( ::feathers::controls::Button button){
            				HX_GC_STACKFRAME(&_hx_pos_2c40f0059a9b3ceb_38_initialize)
HXLINE(  39)				theme->styleProvider->getStyleFunction(::hx::ClassOf< ::feathers::controls::Button >(),null())(button);
HXLINE(  41)				 ::openfl::display::Shape icon =  ::openfl::display::Shape_obj::__alloc( HX_CTX );
HXLINE(  42)				icon->get_graphics()->beginFill(theme->textColor,null());
HXLINE(  43)				icon->get_graphics()->moveTo(((Float)0.0),((Float)0.0));
HXLINE(  44)				icon->get_graphics()->lineTo(((Float)4.0),((Float)4.0));
HXLINE(  45)				icon->get_graphics()->lineTo(((Float)8.0),((Float)0.0));
HXLINE(  46)				button->set_icon(icon);
HXLINE(  48)				 ::openfl::display::Shape downIcon =  ::openfl::display::Shape_obj::__alloc( HX_CTX );
HXLINE(  49)				downIcon->get_graphics()->beginFill(theme->activeTextColor,null());
HXLINE(  50)				downIcon->get_graphics()->moveTo(((Float)0.0),((Float)0.0));
HXLINE(  51)				downIcon->get_graphics()->lineTo(((Float)4.0),((Float)4.0));
HXLINE(  52)				downIcon->get_graphics()->lineTo(((Float)8.0),((Float)0.0));
HXLINE(  53)				button->setIconForState(::feathers::controls::ButtonState_obj::DOWN_dyn(),downIcon);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  38)			styleProvider->setStyleFunction(::hx::ClassOf< ::feathers::controls::Button >(),::feathers::controls::ComboBox_obj::CHILD_VARIANT_BUTTON, ::Dynamic(new _hx_Closure_0(theme)));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SteelComboBoxStyles_obj,initialize,(void))


SteelComboBoxStyles_obj::SteelComboBoxStyles_obj()
{
}

bool SteelComboBoxStyles_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"initialize") ) { outValue = initialize_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SteelComboBoxStyles_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SteelComboBoxStyles_obj_sStaticStorageInfo = 0;
#endif

::hx::Class SteelComboBoxStyles_obj::__mClass;

static ::String SteelComboBoxStyles_obj_sStaticFields[] = {
	HX_("initialize",50,31,bb,ec),
	::String(null())
};

void SteelComboBoxStyles_obj::__register()
{
	SteelComboBoxStyles_obj _hx_dummy;
	SteelComboBoxStyles_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.themes.steel.components.SteelComboBoxStyles",7b,01,4f,d0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SteelComboBoxStyles_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SteelComboBoxStyles_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SteelComboBoxStyles_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SteelComboBoxStyles_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SteelComboBoxStyles_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace themes
} // end namespace steel
} // end namespace components
