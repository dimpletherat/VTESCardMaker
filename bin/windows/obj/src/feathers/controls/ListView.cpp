// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_feathers_controls_BasicToggleButton
#include <feathers/controls/BasicToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls_IToggle
#include <feathers/controls/IToggle.h>
#endif
#ifndef INCLUDED_feathers_controls_ListView
#include <feathers/controls/ListView.h>
#endif
#ifndef INCLUDED_feathers_controls_ToggleButton
#include <feathers/controls/ToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_IDataRenderer
#include <feathers/controls/dataRenderers/IDataRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_IListViewItemRenderer
#include <feathers/controls/dataRenderers/IListViewItemRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_ItemRenderer
#include <feathers/controls/dataRenderers/ItemRenderer.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_AdvancedLayoutViewPort
#include <feathers/controls/supportClasses/AdvancedLayoutViewPort.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_BaseScrollContainer
#include <feathers/controls/supportClasses/BaseScrollContainer.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_IViewPort
#include <feathers/controls/supportClasses/IViewPort.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDataSelector
#include <feathers/core/IDataSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusObject
#include <feathers/core/IFocusObject.h>
#endif
#ifndef INCLUDED_feathers_core_IIndexSelector
#include <feathers/core/IIndexSelector.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IStateContext
#include <feathers/core/IStateContext.h>
#endif
#ifndef INCLUDED_feathers_core_ITextControl
#include <feathers/core/ITextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_data_IFlatCollection
#include <feathers/data/IFlatCollection.h>
#endif
#ifndef INCLUDED_feathers_data_ListViewItemState
#include <feathers/data/ListViewItemState.h>
#endif
#ifndef INCLUDED_feathers_events_FeathersEvent
#include <feathers/events/FeathersEvent.h>
#endif
#ifndef INCLUDED_feathers_events_FlatCollectionEvent
#include <feathers/events/FlatCollectionEvent.h>
#endif
#ifndef INCLUDED_feathers_layout_Direction
#include <feathers/layout/Direction.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayout
#include <feathers/layout/ILayout.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_layout_IScrollLayout
#include <feathers/layout/IScrollLayout.h>
#endif
#ifndef INCLUDED_feathers_layout_IVirtualLayout
#include <feathers/layout/IVirtualLayout.h>
#endif
#ifndef INCLUDED_feathers_layout_VirtualLayoutRange
#include <feathers/layout/VirtualLayoutRange.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelListViewStyles
#include <feathers/themes/steel/components/SteelListViewStyles.h>
#endif
#ifndef INCLUDED_feathers_utils_DisplayObjectRecycler
#include <feathers/utils/DisplayObjectRecycler.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_IllegalOperationError
#include <openfl/errors/IllegalOperationError.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_KeyboardEvent
#include <openfl/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_events_TouchEvent
#include <openfl/events/TouchEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c5852abc10682dee_87_new,"feathers.controls.ListView","new",0xe061376f,"feathers.controls.ListView.new","feathers/controls/ListView.hx",87,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_161_get_primaryDirection,"feathers.controls.ListView","get_primaryDirection",0x93ba1737,"feathers.controls.ListView.get_primaryDirection","feathers/controls/ListView.hx",161,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_195_set_dataProvider,"feathers.controls.ListView","set_dataProvider",0x6a973309,"feathers.controls.ListView.set_dataProvider","feathers/controls/ListView.hx",195,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_233_get_selectedIndex,"feathers.controls.ListView","get_selectedIndex",0xaf98855d,"feathers.controls.ListView.get_selectedIndex","feathers/controls/ListView.hx",233,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_236_set_selectedIndex,"feathers.controls.ListView","set_selectedIndex",0xd3065d69,"feathers.controls.ListView.set_selectedIndex","feathers/controls/ListView.hx",236,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_261_get_maxSelectedIndex,"feathers.controls.ListView","get_maxSelectedIndex",0x2913028d,"feathers.controls.ListView.get_maxSelectedIndex","feathers/controls/ListView.hx",261,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_275_get_selectedItem,"feathers.controls.ListView","get_selectedItem",0x5b7eed28,"feathers.controls.ListView.get_selectedItem","feathers/controls/ListView.hx",275,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_278_set_selectedItem,"feathers.controls.ListView","set_selectedItem",0xb1c0da9c,"feathers.controls.ListView.set_selectedItem","feathers/controls/ListView.hx",278,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_326_set_itemRendererRecycler,"feathers.controls.ListView","set_itemRendererRecycler",0xe0c46823,"feathers.controls.ListView.set_itemRendererRecycler","feathers/controls/ListView.hx",326,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_361_set_selectable,"feathers.controls.ListView","set_selectable",0xeaa58ca4,"feathers.controls.ListView.set_selectable","feathers/controls/ListView.hx",361,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_386_set_virtualLayout,"feathers.controls.ListView","set_virtualLayout",0xee8541c7,"feathers.controls.ListView.set_virtualLayout","feathers/controls/ListView.hx",386,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_436___default_itemToText,"feathers.controls.ListView","__default_itemToText",0x87b4ee6a,"feathers.controls.ListView.__default_itemToText","feathers/controls/ListView.hx",436,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_440_initializeListViewTheme,"feathers.controls.ListView","initializeListViewTheme",0x1599aa45,"feathers.controls.ListView.initializeListViewTheme","feathers/controls/ListView.hx",440,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_445_update,"feathers.controls.ListView","update",0x8bfcb25a,"feathers.controls.ListView.update","feathers/controls/ListView.hx",445,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_471_refreshItemRenderers,"feathers.controls.ListView","refreshItemRenderers",0x34761773,"feathers.controls.ListView.refreshItemRenderers","feathers/controls/ListView.hx",471,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_496_refreshInactiveItemRenderers,"feathers.controls.ListView","refreshInactiveItemRenderers",0x945aef08,"feathers.controls.ListView.refreshInactiveItemRenderers","feathers/controls/ListView.hx",496,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_510_recoverInactiveItemRenderers,"feathers.controls.ListView","recoverInactiveItemRenderers",0xf9b2db9f,"feathers.controls.ListView.recoverInactiveItemRenderers","feathers/controls/ListView.hx",510,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_548_freeInactiveItemRenderers,"feathers.controls.ListView","freeInactiveItemRenderers",0x5f235dd5,"feathers.controls.ListView.freeInactiveItemRenderers","feathers/controls/ListView.hx",548,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_561_findUnrenderedData,"feathers.controls.ListView","findUnrenderedData",0x101d65c2,"feathers.controls.ListView.findUnrenderedData","feathers/controls/ListView.hx",561,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_621_renderUnrenderedData,"feathers.controls.ListView","renderUnrenderedData",0x17de2fdf,"feathers.controls.ListView.renderUnrenderedData","feathers/controls/ListView.hx",621,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_633_createItemRenderer,"feathers.controls.ListView","createItemRenderer",0xd4143063,"feathers.controls.ListView.createItemRenderer","feathers/controls/ListView.hx",633,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_673_destroyItemRenderer,"feathers.controls.ListView","destroyItemRenderer",0xb7fece9f,"feathers.controls.ListView.destroyItemRenderer","feathers/controls/ListView.hx",673,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_680_refreshSelectedIndicesAfterFilterOrSort,"feathers.controls.ListView","refreshSelectedIndicesAfterFilterOrSort",0x3893b113,"feathers.controls.ListView.refreshSelectedIndicesAfterFilterOrSort","feathers/controls/ListView.hx",680,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_689_listView_itemRenderer_touchTapHandler,"feathers.controls.ListView","listView_itemRenderer_touchTapHandler",0x1513dc28,"feathers.controls.ListView.listView_itemRenderer_touchTapHandler","feathers/controls/ListView.hx",689,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_706_listView_itemRenderer_clickHandler,"feathers.controls.ListView","listView_itemRenderer_clickHandler",0x256f7740,"feathers.controls.ListView.listView_itemRenderer_clickHandler","feathers/controls/ListView.hx",706,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_719_listView_itemRenderer_changeHandler,"feathers.controls.ListView","listView_itemRenderer_changeHandler",0x7acd539c,"feathers.controls.ListView.listView_itemRenderer_changeHandler","feathers/controls/ListView.hx",719,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_737_listView_dataProvider_changeHandler,"feathers.controls.ListView","listView_dataProvider_changeHandler",0x70979e61,"feathers.controls.ListView.listView_dataProvider_changeHandler","feathers/controls/ListView.hx",737,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_740_listView_dataProvider_addItemHandler,"feathers.controls.ListView","listView_dataProvider_addItemHandler",0x1f62ca4f,"feathers.controls.ListView.listView_dataProvider_addItemHandler","feathers/controls/ListView.hx",740,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_753_listView_dataProvider_removeItemHandler,"feathers.controls.ListView","listView_dataProvider_removeItemHandler",0x3e23aeba,"feathers.controls.ListView.listView_dataProvider_removeItemHandler","feathers/controls/ListView.hx",753,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_769_listView_dataProvider_replaceItemHandler,"feathers.controls.ListView","listView_dataProvider_replaceItemHandler",0x2b2b479c,"feathers.controls.ListView.listView_dataProvider_replaceItemHandler","feathers/controls/ListView.hx",769,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_782_listView_dataProvider_removeAllHandler,"feathers.controls.ListView","listView_dataProvider_removeAllHandler",0x33ec1a46,"feathers.controls.ListView.listView_dataProvider_removeAllHandler","feathers/controls/ListView.hx",782,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_789_listView_dataProvider_resetHandler,"feathers.controls.ListView","listView_dataProvider_resetHandler",0x45cf6d74,"feathers.controls.ListView.listView_dataProvider_resetHandler","feathers/controls/ListView.hx",789,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_797_listView_dataProvider_sortChangeHandler,"feathers.controls.ListView","listView_dataProvider_sortChangeHandler",0x8e95a3a3,"feathers.controls.ListView.listView_dataProvider_sortChangeHandler","feathers/controls/ListView.hx",797,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_807_listView_dataProvider_filterChangeHandler,"feathers.controls.ListView","listView_dataProvider_filterChangeHandler",0x79b7f2c9,"feathers.controls.ListView.listView_dataProvider_filterChangeHandler","feathers/controls/ListView.hx",807,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_817_navigateWithKeyboard,"feathers.controls.ListView","navigateWithKeyboard",0x3fb66daf,"feathers.controls.ListView.navigateWithKeyboard","feathers/controls/ListView.hx",817,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_866_listView_keyDownHandler,"feathers.controls.ListView","listView_keyDownHandler",0xd2981ad4,"feathers.controls.ListView.listView_keyDownHandler","feathers/controls/ListView.hx",866,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_51bd3f43eb83f231_42_get_styleContext,"feathers.controls.ListView","get_styleContext",0xcba698d8,"feathers.controls.ListView.get_styleContext","feathers/macros/StyleContextMacro.hx",42,0xea61cbb9)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_68_set_layout,"feathers.controls.ListView","set_layout",0xde2fe5b8,"feathers.controls.ListView.set_layout","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c505d7860b5e39ae_94_clearStyle_layout,"feathers.controls.ListView","clearStyle_layout",0x2b12f3b4,"feathers.controls.ListView.clearStyle_layout","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_125_defaultUpdateItemRenderer,"feathers.controls.ListView","defaultUpdateItemRenderer",0x6696f88f,"feathers.controls.ListView.defaultUpdateItemRenderer","feathers/controls/ListView.hx",125,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_132_defaultResetItemRenderer,"feathers.controls.ListView","defaultResetItemRenderer",0xccea3475,"feathers.controls.ListView.defaultResetItemRenderer","feathers/controls/ListView.hx",132,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_87_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",87,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_103_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",103,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_120_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",120,0x2d3f9f01)
HX_LOCAL_STACK_FRAME(_hx_pos_c5852abc10682dee_122_boot,"feathers.controls.ListView","boot",0x6cc84a43,"feathers.controls.ListView.boot","feathers/controls/ListView.hx",122,0x2d3f9f01)
namespace feathers{
namespace controls{

void ListView_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_87_new)
HXLINE( 559)		this->_visibleIndices =  ::feathers::layout::VirtualLayoutRange_obj::__alloc( HX_CTX ,0,0);
HXLINE( 558)		this->_currentItemState =  ::feathers::data::ListViewItemState_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE( 443)		this->_layoutItems = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 411)		this->_ignoreSelectionChange = false;
HXLINE( 409)		this->pointerSelectionEnabled = true;
HXLINE( 384)		this->virtualLayout = true;
HXLINE( 359)		this->selectable = true;
HXLINE( 340)		this->_virtualCache = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 339)		this->_unrenderedData = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 338)		this->itemRendererToData =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
HXLINE( 337)		this->dataToItemRenderer =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
HXLINE( 336)		this->activeItemRenderers = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 335)		this->inactiveItemRenderers = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 323)		this->itemRendererRecycler = ::feathers::utils::DisplayObjectRecycler_obj::withClass(::hx::ClassOf< ::feathers::controls::dataRenderers::ItemRenderer >(),null(),null(),null());
HXLINE( 308)		this->layout = null();
HXLINE( 272)		this->selectedItem = null();
HXLINE( 230)		this->selectedIndex = -1;
HXLINE( 193)		this->dataProvider = null();
HXLINE( 144)		this->initializeListViewTheme();
HXLINE( 146)		super::__construct();
HXLINE( 148)		this->set_tabEnabled(true);
HXLINE( 149)		this->focusRect = false;
HXLINE( 151)		if (::hx::IsNull( this->viewPort )) {
HXLINE( 152)			this->listViewPort =  ::feathers::controls::supportClasses::AdvancedLayoutViewPort_obj::__alloc( HX_CTX );
HXLINE( 153)			this->addChild(this->listViewPort);
HXLINE( 154)			this->set_viewPort(this->listViewPort);
            		}
HXLINE( 156)		this->addEventListener(HX_("keyDown",a1,69,47,9c),this->listView_keyDownHandler_dyn(),null(),null(),null());
            	}

Dynamic ListView_obj::__CreateEmpty() { return new ListView_obj; }

void *ListView_obj::_hx_vtable = 0;

Dynamic ListView_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ListView_obj > _hx_result = new ListView_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ListView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x093ab78b) {
			if (inClassId<=(int)0x0498edf2) {
				if (inClassId<=(int)0x0330636f) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
				} else {
					return inClassId==(int)0x0498edf2;
				}
			} else {
				return inClassId==(int)0x093ab78b;
			}
		} else {
			return inClassId==(int)0x0c89e854 || inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			if (inClassId<=(int)0x4033f4be) {
				return inClassId==(int)0x2607a7f1 || inClassId==(int)0x4033f4be;
			} else {
				return inClassId==(int)0x4af7dd8e;
			}
		} else {
			return inClassId==(int)0x58123034 || inClassId==(int)0x6b353933;
		}
	}
}

static ::feathers::core::IDataSelector_obj _hx_feathers_controls_ListView__hx_feathers_core_IDataSelector= {
	(  ::Dynamic (::hx::Object::*)())&::feathers::controls::ListView_obj::get_selectedItem,
	(  ::Dynamic (::hx::Object::*)( ::Dynamic))&::feathers::controls::ListView_obj::set_selectedItem,
};

static ::feathers::core::IIndexSelector_obj _hx_feathers_controls_ListView__hx_feathers_core_IIndexSelector= {
	( int (::hx::Object::*)())&::feathers::controls::ListView_obj::get_selectedIndex,
	( int (::hx::Object::*)(int))&::feathers::controls::ListView_obj::set_selectedIndex,
	( int (::hx::Object::*)())&::feathers::controls::ListView_obj::get_maxSelectedIndex,
};

void *ListView_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xe7e1ba63: return &_hx_feathers_controls_ListView__hx_feathers_core_IDataSelector;
		case (int)0xe0b54c17: return &_hx_feathers_controls_ListView__hx_feathers_core_IIndexSelector;
	}
	return super::_hx_getInterface(inHash);
}

 ::feathers::layout::Direction ListView_obj::get_primaryDirection(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_161_get_primaryDirection)
HXLINE( 162)		if (::Std_obj::isOfType(this->layout,( ( ::Dynamic)(::hx::ClassOf< ::feathers::layout::IScrollLayout >()) ))) {
HXLINE( 163)			return ::feathers::layout::IScrollLayout_obj::get_primaryDirection(this->layout);
            		}
HXLINE( 165)		return ::feathers::layout::Direction_obj::NONE_dyn();
            	}


::Dynamic ListView_obj::set_dataProvider(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_195_set_dataProvider)
HXLINE( 196)		if (::hx::IsEq( this->dataProvider,value )) {
HXLINE( 197)			return this->dataProvider;
            		}
HXLINE( 199)		this->_virtualCache->resize(0);
HXLINE( 200)		if (::hx::IsNotNull( this->dataProvider )) {
HXLINE( 201)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("change",70,91,72,b7),this->listView_dataProvider_changeHandler_dyn(),null());
HXLINE( 202)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("addItem",d4,07,fd,81),this->listView_dataProvider_addItemHandler_dyn(),null());
HXLINE( 203)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("removeItem",77,ff,de,c2),this->listView_dataProvider_removeItemHandler_dyn(),null());
HXLINE( 204)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("replaceItem",67,63,5b,5a),this->listView_dataProvider_replaceItemHandler_dyn(),null());
HXLINE( 205)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("removeAll",3d,17,e5,ca),this->listView_dataProvider_removeAllHandler_dyn(),null());
HXLINE( 206)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("reset",cf,49,c8,e6),this->listView_dataProvider_resetHandler_dyn(),null());
HXLINE( 207)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("sortChange",6e,07,58,14),this->listView_dataProvider_sortChangeHandler_dyn(),null());
HXLINE( 208)			::openfl::events::IEventDispatcher_obj::removeEventListener(this->dataProvider,HX_("filterChange",48,bf,ca,c3),this->listView_dataProvider_filterChangeHandler_dyn(),null());
            		}
HXLINE( 210)		this->dataProvider = value;
HXLINE( 211)		if (::hx::IsNotNull( this->dataProvider )) {
HXLINE( 212)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 212)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
HXLINE( 213)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("change",70,91,72,b7),this->listView_dataProvider_changeHandler_dyn(),null(),null(),null());
HXLINE( 214)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("addItem",d4,07,fd,81),this->listView_dataProvider_addItemHandler_dyn(),null(),null(),null());
HXLINE( 215)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("removeItem",77,ff,de,c2),this->listView_dataProvider_removeItemHandler_dyn(),null(),null(),null());
HXLINE( 216)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("replaceItem",67,63,5b,5a),this->listView_dataProvider_replaceItemHandler_dyn(),null(),null(),null());
HXLINE( 217)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("removeAll",3d,17,e5,ca),this->listView_dataProvider_removeAllHandler_dyn(),null(),null(),null());
HXLINE( 218)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("reset",cf,49,c8,e6),this->listView_dataProvider_resetHandler_dyn(),null(),null(),null());
HXLINE( 219)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("sortChange",6e,07,58,14),this->listView_dataProvider_sortChangeHandler_dyn(),null(),null(),null());
HXLINE( 220)			::openfl::events::IEventDispatcher_obj::addEventListener(this->dataProvider,HX_("filterChange",48,bf,ca,c3),this->listView_dataProvider_filterChangeHandler_dyn(),null(),null(),null());
            		}
HXLINE( 222)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE( 223)		return this->dataProvider;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_dataProvider,return )

int ListView_obj::get_selectedIndex(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_233_get_selectedIndex)
HXDLIN( 233)		return this->selectedIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedIndex,return )

int ListView_obj::set_selectedIndex(int value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_236_set_selectedIndex)
HXLINE( 237)		bool _hx_tmp;
HXDLIN( 237)		if (this->selectable) {
HXLINE( 237)			_hx_tmp = ::hx::IsNull( this->dataProvider );
            		}
            		else {
HXLINE( 237)			_hx_tmp = true;
            		}
HXDLIN( 237)		if (_hx_tmp) {
HXLINE( 238)			value = -1;
            		}
HXLINE( 240)		if ((this->get_selectedIndex() == value)) {
HXLINE( 241)			return this->get_selectedIndex();
            		}
HXLINE( 243)		this->selectedIndex = value;
HXLINE( 246)		if ((this->get_selectedIndex() == -1)) {
HXLINE( 247)			this->selectedItem = null();
            		}
            		else {
HXLINE( 249)			::Dynamic _hx_tmp = this->dataProvider;
HXDLIN( 249)			this->selectedItem = ::feathers::data::IFlatCollection_obj::get(_hx_tmp,this->get_selectedIndex());
            		}
HXLINE( 251)		this->setInvalid(HX_("selection",4c,f8,1a,8e));
HXLINE( 252)		::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
HXLINE( 253)		return this->get_selectedIndex();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedIndex,return )

int ListView_obj::get_maxSelectedIndex(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_261_get_maxSelectedIndex)
HXLINE( 262)		if (::hx::IsNull( this->dataProvider )) {
HXLINE( 263)			return -1;
            		}
HXLINE( 265)		return (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) - 1);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_maxSelectedIndex,return )

 ::Dynamic ListView_obj::get_selectedItem(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_275_get_selectedItem)
HXDLIN( 275)		return this->selectedItem;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,get_selectedItem,return )

 ::Dynamic ListView_obj::set_selectedItem( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_278_set_selectedItem)
HXLINE( 279)		bool _hx_tmp;
HXDLIN( 279)		if (this->selectable) {
HXLINE( 279)			_hx_tmp = ::hx::IsNull( this->dataProvider );
            		}
            		else {
HXLINE( 279)			_hx_tmp = true;
            		}
HXDLIN( 279)		if (_hx_tmp) {
HXLINE( 280)			this->set_selectedIndex(-1);
HXLINE( 281)			return this->get_selectedItem();
            		}
HXLINE( 283)		this->set_selectedIndex(::feathers::data::IFlatCollection_obj::indexOf(this->dataProvider,value));
HXLINE( 284)		return this->get_selectedItem();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectedItem,return )

 ::feathers::utils::DisplayObjectRecycler ListView_obj::set_itemRendererRecycler( ::feathers::utils::DisplayObjectRecycler value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_326_set_itemRendererRecycler)
HXLINE( 327)		if (::hx::IsEq( this->itemRendererRecycler,value )) {
HXLINE( 328)			return this->itemRendererRecycler;
            		}
HXLINE( 330)		this->itemRendererRecycler = value;
HXLINE( 331)		this->setInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
HXLINE( 332)		return this->itemRendererRecycler;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_itemRendererRecycler,return )

bool ListView_obj::set_selectable(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_361_set_selectable)
HXLINE( 362)		if ((this->selectable == value)) {
HXLINE( 363)			return this->selectable;
            		}
HXLINE( 365)		this->selectable = value;
HXLINE( 366)		if (!(this->selectable)) {
HXLINE( 367)			this->set_selectedIndex(-1);
            		}
HXLINE( 369)		return this->selectable;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_selectable,return )

bool ListView_obj::set_virtualLayout(bool value){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_386_set_virtualLayout)
HXLINE( 387)		if ((this->virtualLayout = value)) {
HXLINE( 388)			return this->virtualLayout;
            		}
HXLINE( 390)		this->virtualLayout = value;
HXLINE( 391)		this->setInvalid(HX_("layout",aa,ae,b8,58));
HXLINE( 392)		return this->virtualLayout;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_virtualLayout,return )

HX_BEGIN_DEFAULT_FUNC(__default_itemToText,ListView_obj)
::String _hx_run( ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_436___default_itemToText)
HXDLIN( 436)		return ::Std_obj::string(data);
            	}
HX_END_LOCAL_FUNC1(return )
HX_END_DEFAULT_FUNC

void ListView_obj::initializeListViewTheme(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_440_initializeListViewTheme)
HXDLIN( 440)		::feathers::themes::steel::components::SteelListViewStyles_obj::initialize(null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,initializeListViewTheme,(void))

void ListView_obj::update(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_445_update)
HXLINE( 446)		bool layoutInvalid = this->isInvalid(HX_("layout",aa,ae,b8,58));
HXLINE( 447)		bool stylesInvalid = this->isInvalid(HX_("styles",22,e6,d2,15));
HXLINE( 449)		bool _hx_tmp;
HXDLIN( 449)		if (!(layoutInvalid)) {
HXLINE( 449)			_hx_tmp = stylesInvalid;
            		}
            		else {
HXLINE( 449)			_hx_tmp = true;
            		}
HXDLIN( 449)		if (_hx_tmp) {
HXLINE( 450)			if (::hx::IsNotEq( this->_previousLayout,this->layout )) {
HXLINE( 453)				this->_virtualCache->resize(0);
HXLINE( 454)				::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 454)				_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
            			}
HXLINE( 456)			this->listViewPort->set_layout(this->layout);
HXLINE( 457)			this->_previousLayout = this->layout;
            		}
HXLINE( 460)		this->listViewPort->refreshChildren = this->refreshItemRenderers_dyn();
HXLINE( 462)		{
HXLINE( 462)			 ::Dynamic flag = this->_invalidationFlags->keys();
HXDLIN( 462)			while(( (bool)(flag->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 462)				::String flag1 = ( (::String)(flag->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 463)				this->listViewPort->setInvalid(flag1);
            			}
            		}
HXLINE( 466)		this->super::update();
HXLINE( 468)		this->_previousLayout = this->layout;
            	}


void ListView_obj::refreshItemRenderers(::Array< ::Dynamic> items){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_471_refreshItemRenderers)
HXLINE( 472)		this->_layoutItems = items;
HXLINE( 474)		if (::hx::IsNull( this->itemRendererRecycler->update )) {
HXLINE( 475)			this->itemRendererRecycler->update = ::feathers::controls::ListView_obj::defaultUpdateItemRenderer_dyn();
HXLINE( 476)			if (::hx::IsNull( this->itemRendererRecycler->reset )) {
HXLINE( 477)				this->itemRendererRecycler->reset = ::feathers::controls::ListView_obj::defaultResetItemRenderer_dyn();
            			}
            		}
HXLINE( 481)		bool itemRendererInvalid = this->isInvalid(::feathers::controls::ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY);
HXLINE( 482)		this->refreshInactiveItemRenderers(itemRendererInvalid);
HXLINE( 483)		if (::hx::IsNull( this->dataProvider )) {
HXLINE( 484)			return;
            		}
HXLINE( 487)		this->findUnrenderedData();
HXLINE( 488)		this->recoverInactiveItemRenderers();
HXLINE( 489)		this->renderUnrenderedData();
HXLINE( 490)		this->freeInactiveItemRenderers();
HXLINE( 491)		if ((this->inactiveItemRenderers->length > 0)) {
HXLINE( 492)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,(::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this))) + HX_(": inactive item renderers should be empty after updating.",53,d2,af,ec)))));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,refreshItemRenderers,(void))

void ListView_obj::refreshInactiveItemRenderers(bool factoryInvalid){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_496_refreshInactiveItemRenderers)
HXLINE( 497)		::Array< ::Dynamic> temp = this->inactiveItemRenderers;
HXLINE( 498)		this->inactiveItemRenderers = this->activeItemRenderers;
HXLINE( 499)		this->activeItemRenderers = temp;
HXLINE( 500)		if ((this->activeItemRenderers->length > 0)) {
HXLINE( 501)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,(::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this))) + HX_(": active item renderers should be empty before updating.",93,7b,6d,45)))));
            		}
HXLINE( 503)		if (factoryInvalid) {
HXLINE( 504)			this->recoverInactiveItemRenderers();
HXLINE( 505)			this->freeInactiveItemRenderers();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,refreshInactiveItemRenderers,(void))

void ListView_obj::recoverInactiveItemRenderers(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_510_recoverInactiveItemRenderers)
HXDLIN( 510)		int _g = 0;
HXDLIN( 510)		::Array< ::Dynamic> _g1 = this->inactiveItemRenderers;
HXDLIN( 510)		while((_g < _g1->length)){
HXDLIN( 510)			 ::openfl::display::DisplayObject itemRenderer = _g1->__get(_g).StaticCast<  ::openfl::display::DisplayObject >();
HXDLIN( 510)			_g = (_g + 1);
HXLINE( 511)			if (::hx::IsNull( itemRenderer )) {
HXLINE( 512)				continue;
            			}
HXLINE( 514)			 ::Dynamic item = this->itemRendererToData->get(itemRenderer);
HXLINE( 515)			if (::hx::IsNull( item )) {
HXLINE( 516)				return;
            			}
HXLINE( 518)			this->itemRendererToData->remove(itemRenderer);
HXLINE( 519)			this->dataToItemRenderer->remove(item);
HXLINE( 520)			itemRenderer->removeEventListener(HX_("click",48,7c,5e,48),this->listView_itemRenderer_clickHandler_dyn(),null());
HXLINE( 521)			itemRenderer->removeEventListener(HX_("touchTap",e4,1b,15,00),this->listView_itemRenderer_touchTapHandler_dyn(),null());
HXLINE( 522)			itemRenderer->removeEventListener(HX_("change",70,91,72,b7),this->listView_itemRenderer_changeHandler_dyn(),null());
HXLINE( 523)			this->_currentItemState->data = item;
HXLINE( 524)			this->_currentItemState->index = -1;
HXLINE( 525)			this->_currentItemState->selected = false;
HXLINE( 526)			this->_currentItemState->text = null();
HXLINE( 527)			bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE( 528)			this->_ignoreSelectionChange = true;
HXLINE( 529)			if (::hx::IsNotNull( this->itemRendererRecycler->reset )) {
HXLINE( 530)				this->itemRendererRecycler->reset(itemRenderer,this->_currentItemState);
            			}
HXLINE( 532)			if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 533)				::Dynamic toggle =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE( 534)				::feathers::controls::IToggle_obj::set_selected(toggle,false);
            			}
HXLINE( 536)			if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IDataRenderer >()) ))) {
HXLINE( 537)				::Dynamic dataRenderer =  ::hx::interface_check(itemRenderer,0x70798096);
HXLINE( 538)				::feathers::controls::dataRenderers::IDataRenderer_obj::set_data(dataRenderer,null());
            			}
HXLINE( 540)			if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IListViewItemRenderer >()) ))) {
HXLINE( 541)				::Dynamic listRenderer =  ::hx::interface_check(itemRenderer,0x65334802);
HXLINE( 542)				::feathers::controls::dataRenderers::IListViewItemRenderer_obj::set_index(listRenderer,-1);
            			}
HXLINE( 544)			this->_ignoreSelectionChange = oldIgnoreSelectionChange;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,recoverInactiveItemRenderers,(void))

void ListView_obj::freeInactiveItemRenderers(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_548_freeInactiveItemRenderers)
HXLINE( 549)		{
HXLINE( 549)			int _g = 0;
HXDLIN( 549)			::Array< ::Dynamic> _g1 = this->inactiveItemRenderers;
HXDLIN( 549)			while((_g < _g1->length)){
HXLINE( 549)				 ::openfl::display::DisplayObject itemRenderer = _g1->__get(_g).StaticCast<  ::openfl::display::DisplayObject >();
HXDLIN( 549)				_g = (_g + 1);
HXLINE( 550)				if (::hx::IsNull( itemRenderer )) {
HXLINE( 551)					continue;
            				}
HXLINE( 553)				this->destroyItemRenderer(itemRenderer);
            			}
            		}
HXLINE( 555)		this->inactiveItemRenderers->resize(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,freeInactiveItemRenderers,(void))

void ListView_obj::findUnrenderedData(){
            	HX_GC_STACKFRAME(&_hx_pos_c5852abc10682dee_561_findUnrenderedData)
HXLINE( 563)		this->_layoutItems->resize(0);
HXLINE( 564)		::Array< ::Dynamic> _hx_tmp = this->_layoutItems;
HXDLIN( 564)		_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
HXLINE( 566)		bool _hx_tmp1;
HXDLIN( 566)		if (this->virtualLayout) {
HXLINE( 566)			_hx_tmp1 = ::Std_obj::isOfType(this->layout,( ( ::Dynamic)(::hx::ClassOf< ::feathers::layout::IVirtualLayout >()) ));
            		}
            		else {
HXLINE( 566)			_hx_tmp1 = false;
            		}
HXDLIN( 566)		if (_hx_tmp1) {
HXLINE( 567)			::Dynamic virtualLayout = this->layout;
HXLINE( 568)			::feathers::layout::IVirtualLayout_obj::set_virtualCache(virtualLayout,this->_virtualCache);
HXLINE( 569)			int _hx_tmp = ::feathers::data::IFlatCollection_obj::get_length(this->dataProvider);
HXDLIN( 569)			 ::Dynamic _hx_tmp1 = this->listViewPort->get_visibleWidth();
HXDLIN( 569)			 ::Dynamic _hx_tmp2 = this->listViewPort->get_visibleHeight();
HXDLIN( 569)			::feathers::layout::IVirtualLayout_obj::getVisibleIndices(virtualLayout,_hx_tmp,_hx_tmp1,_hx_tmp2,this->_visibleIndices);
            		}
            		else {
HXLINE( 571)			this->_visibleIndices->start = 0;
HXLINE( 572)			int _hx_tmp = ::feathers::data::IFlatCollection_obj::get_length(this->dataProvider);
HXDLIN( 572)			this->_visibleIndices->end = (_hx_tmp - 1);
            		}
HXLINE( 574)		bool _hx_tmp2;
HXDLIN( 574)		if (::hx::IsNotNull( this->dataProvider )) {
HXLINE( 574)			_hx_tmp2 = (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) == 0);
            		}
            		else {
HXLINE( 574)			_hx_tmp2 = true;
            		}
HXDLIN( 574)		if (_hx_tmp2) {
HXLINE( 575)			return;
            		}
HXLINE( 577)		{
HXLINE( 577)			int _g = this->_visibleIndices->start;
HXDLIN( 577)			int _g1 = (this->_visibleIndices->end + 1);
HXDLIN( 577)			while((_g < _g1)){
HXLINE( 577)				_g = (_g + 1);
HXDLIN( 577)				int i = (_g - 1);
HXLINE( 578)				 ::Dynamic item = ::feathers::data::IFlatCollection_obj::get(this->dataProvider,i);
HXLINE( 579)				 ::openfl::display::DisplayObject itemRenderer = ( ( ::openfl::display::DisplayObject)(this->dataToItemRenderer->get(item)) );
HXLINE( 580)				if (::hx::IsNotNull( itemRenderer )) {
HXLINE( 581)					this->_currentItemState->data = item;
HXLINE( 582)					this->_currentItemState->index = i;
HXLINE( 583)					 ::Dynamic _hx_tmp = this->get_selectedItem();
HXDLIN( 583)					this->_currentItemState->selected = ::hx::IsEq( item,_hx_tmp );
HXLINE( 584)					this->_currentItemState->text = ( (::String)(this->itemToText(item)) );
HXLINE( 585)					bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE( 586)					this->_ignoreSelectionChange = true;
HXLINE( 587)					if (::hx::IsNotNull( this->itemRendererRecycler->update )) {
HXLINE( 588)						this->itemRendererRecycler->update(itemRenderer,this->_currentItemState);
            					}
HXLINE( 590)					if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IDataRenderer >()) ))) {
HXLINE( 591)						::Dynamic dataRenderer =  ::hx::interface_check(itemRenderer,0x70798096);
HXLINE( 593)						::feathers::controls::dataRenderers::IDataRenderer_obj::set_data(dataRenderer,this->_currentItemState->data);
            					}
HXLINE( 595)					if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IListViewItemRenderer >()) ))) {
HXLINE( 596)						::Dynamic listRenderer =  ::hx::interface_check(itemRenderer,0x65334802);
HXLINE( 597)						::feathers::controls::dataRenderers::IListViewItemRenderer_obj::set_index(listRenderer,this->_currentItemState->index);
            					}
HXLINE( 599)					if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 600)						::Dynamic toggle =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE( 602)						::feathers::controls::IToggle_obj::set_selected(toggle,this->_currentItemState->selected);
            					}
HXLINE( 604)					this->_ignoreSelectionChange = oldIgnoreSelectionChange;
HXLINE( 607)					itemRenderer->set_visible(true);
HXLINE( 608)					this->_layoutItems[i] = itemRenderer;
HXLINE( 609)					bool removed = this->inactiveItemRenderers->remove(itemRenderer);
HXLINE( 610)					if (!(removed)) {
HXLINE( 611)						HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::IllegalOperationError_obj::__alloc( HX_CTX ,(::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this))) + HX_(": item renderer map contains bad data. This may be caused by duplicate items in the data provider, which is not allowed.",be,7a,93,d5)))));
            					}
HXLINE( 614)					this->activeItemRenderers->push(itemRenderer);
            				}
            				else {
HXLINE( 616)					this->_unrenderedData->push(item);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,findUnrenderedData,(void))

void ListView_obj::renderUnrenderedData(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_621_renderUnrenderedData)
HXLINE( 622)		{
HXLINE( 622)			int _g = 0;
HXDLIN( 622)			::cpp::VirtualArray _g1 = this->_unrenderedData;
HXDLIN( 622)			while((_g < _g1->get_length())){
HXLINE( 622)				 ::Dynamic item = _g1->__get(_g);
HXDLIN( 622)				_g = (_g + 1);
HXLINE( 623)				int index = ::feathers::data::IFlatCollection_obj::indexOf(this->dataProvider,item);
HXLINE( 624)				 ::openfl::display::DisplayObject itemRenderer = this->createItemRenderer(item,index);
HXLINE( 625)				itemRenderer->set_visible(true);
HXLINE( 626)				this->activeItemRenderers->push(itemRenderer);
HXLINE( 627)				this->listViewPort->addChild(itemRenderer);
HXLINE( 628)				this->_layoutItems[index] = itemRenderer;
            			}
            		}
HXLINE( 630)		this->_unrenderedData->resize(0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,renderUnrenderedData,(void))

 ::openfl::display::DisplayObject ListView_obj::createItemRenderer( ::Dynamic item,int index){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_633_createItemRenderer)
HXLINE( 634)		 ::openfl::display::DisplayObject itemRenderer = null();
HXLINE( 635)		if ((this->inactiveItemRenderers->length == 0)) {
HXLINE( 636)			itemRenderer = ( ( ::openfl::display::DisplayObject)(this->itemRendererRecycler->create()) );
            		}
            		else {
HXLINE( 638)			itemRenderer = this->inactiveItemRenderers->shift().StaticCast<  ::openfl::display::DisplayObject >();
            		}
HXLINE( 640)		this->_currentItemState->data = item;
HXLINE( 641)		this->_currentItemState->index = index;
HXLINE( 642)		 ::Dynamic _hx_tmp = this->get_selectedItem();
HXDLIN( 642)		this->_currentItemState->selected = ::hx::IsEq( item,_hx_tmp );
HXLINE( 643)		this->_currentItemState->text = ( (::String)(this->itemToText(item)) );
HXLINE( 644)		if (::hx::IsNotNull( this->itemRendererRecycler->update )) {
HXLINE( 645)			this->itemRendererRecycler->update(itemRenderer,this->_currentItemState);
            		}
HXLINE( 647)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IListViewItemRenderer >()) ))) {
HXLINE( 648)			::Dynamic listRenderer =  ::hx::interface_check(itemRenderer,0x65334802);
HXLINE( 649)			::feathers::controls::dataRenderers::IListViewItemRenderer_obj::set_index(listRenderer,this->_currentItemState->index);
            		}
HXLINE( 651)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::dataRenderers::IDataRenderer >()) ))) {
HXLINE( 652)			::Dynamic dataRenderer =  ::hx::interface_check(itemRenderer,0x70798096);
HXLINE( 654)			::feathers::controls::dataRenderers::IDataRenderer_obj::set_data(dataRenderer,this->_currentItemState->data);
            		}
HXLINE( 656)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 657)			::Dynamic toggle =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE( 659)			::feathers::controls::IToggle_obj::set_selected(toggle,this->_currentItemState->selected);
            		}
HXLINE( 661)		itemRenderer->addEventListener(HX_("click",48,7c,5e,48),this->listView_itemRenderer_clickHandler_dyn(),null(),null(),null());
HXLINE( 665)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 666)			itemRenderer->addEventListener(HX_("change",70,91,72,b7),this->listView_itemRenderer_changeHandler_dyn(),null(),null(),null());
            		}
HXLINE( 668)		this->itemRendererToData->set(itemRenderer,item);
HXLINE( 669)		this->dataToItemRenderer->set(item,itemRenderer);
HXLINE( 670)		return itemRenderer;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,createItemRenderer,return )

void ListView_obj::destroyItemRenderer( ::openfl::display::DisplayObject itemRenderer){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_673_destroyItemRenderer)
HXLINE( 674)		this->listViewPort->removeChild(itemRenderer);
HXLINE( 675)		if (::hx::IsNotNull( this->itemRendererRecycler->destroy )) {
HXLINE( 676)			this->itemRendererRecycler->destroy(itemRenderer);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,destroyItemRenderer,(void))

void ListView_obj::refreshSelectedIndicesAfterFilterOrSort(){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_680_refreshSelectedIndicesAfterFilterOrSort)
HXLINE( 681)		if ((this->get_selectedIndex() == -1)) {
HXLINE( 682)			return;
            		}
HXLINE( 686)		::Dynamic _hx_tmp = this->dataProvider;
HXDLIN( 686)		this->set_selectedIndex(::feathers::data::IFlatCollection_obj::indexOf(_hx_tmp,this->get_selectedItem()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,refreshSelectedIndicesAfterFilterOrSort,(void))

void ListView_obj::listView_itemRenderer_touchTapHandler( ::openfl::events::TouchEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_689_listView_itemRenderer_touchTapHandler)
HXLINE( 690)		bool _hx_tmp;
HXDLIN( 690)		if (this->selectable) {
HXLINE( 690)			_hx_tmp = !(this->pointerSelectionEnabled);
            		}
            		else {
HXLINE( 690)			_hx_tmp = true;
            		}
HXDLIN( 690)		if (_hx_tmp) {
HXLINE( 691)			return;
            		}
HXLINE( 693)		if (event->isPrimaryTouchPoint) {
HXLINE( 695)			return;
            		}
HXLINE( 697)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE( 698)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 700)			return;
            		}
HXLINE( 702)		 ::Dynamic data = this->itemRendererToData->get(itemRenderer);
HXLINE( 703)		this->set_selectedIndex(::feathers::data::IFlatCollection_obj::indexOf(this->dataProvider,data));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_touchTapHandler,(void))

void ListView_obj::listView_itemRenderer_clickHandler( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_706_listView_itemRenderer_clickHandler)
HXLINE( 707)		bool _hx_tmp;
HXDLIN( 707)		if (this->selectable) {
HXLINE( 707)			_hx_tmp = !(this->pointerSelectionEnabled);
            		}
            		else {
HXLINE( 707)			_hx_tmp = true;
            		}
HXDLIN( 707)		if (_hx_tmp) {
HXLINE( 708)			return;
            		}
HXLINE( 710)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE( 711)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::controls::IToggle >()) ))) {
HXLINE( 713)			return;
            		}
HXLINE( 715)		 ::Dynamic data = this->itemRendererToData->get(itemRenderer);
HXLINE( 716)		this->set_selectedIndex(::feathers::data::IFlatCollection_obj::indexOf(this->dataProvider,data));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_clickHandler,(void))

void ListView_obj::listView_itemRenderer_changeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_719_listView_itemRenderer_changeHandler)
HXLINE( 720)		if (this->_ignoreSelectionChange) {
HXLINE( 721)			return;
            		}
HXLINE( 723)		 ::openfl::display::DisplayObject itemRenderer = ::hx::TCast<  ::openfl::display::DisplayObject >::cast(event->currentTarget);
HXLINE( 724)		if (!(this->selectable)) {
HXLINE( 725)			::Dynamic toggle =  ::hx::interface_check(itemRenderer,0xdea06717);
HXLINE( 726)			bool oldIgnoreSelectionChange = this->_ignoreSelectionChange;
HXLINE( 727)			this->_ignoreSelectionChange = true;
HXLINE( 728)			::feathers::controls::IToggle_obj::set_selected(toggle,false);
HXLINE( 729)			this->_ignoreSelectionChange = oldIgnoreSelectionChange;
HXLINE( 730)			return;
            		}
HXLINE( 732)		 ::Dynamic item = this->itemRendererToData->get(itemRenderer);
HXLINE( 733)		this->set_selectedItem(item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_itemRenderer_changeHandler,(void))

void ListView_obj::listView_dataProvider_changeHandler( ::openfl::events::Event event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_737_listView_dataProvider_changeHandler)
HXDLIN( 737)		this->setInvalid(HX_("data",2a,56,63,42));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_changeHandler,(void))

void ListView_obj::listView_dataProvider_addItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_740_listView_dataProvider_addItemHandler)
HXLINE( 741)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 742)			this->_virtualCache->insert(event->index,null());
            		}
HXLINE( 744)		if ((this->get_selectedIndex() == -1)) {
HXLINE( 745)			return;
            		}
HXLINE( 747)		int _hx_tmp = this->get_selectedIndex();
HXDLIN( 747)		if ((_hx_tmp >= event->index)) {
HXLINE( 748)			this->selectedIndex++;
HXLINE( 749)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_addItemHandler,(void))

void ListView_obj::listView_dataProvider_removeItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_753_listView_dataProvider_removeItemHandler)
HXLINE( 754)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 755)			this->_virtualCache->remove(event->index);
            		}
HXLINE( 757)		if ((this->get_selectedIndex() == -1)) {
HXLINE( 758)			return;
            		}
HXLINE( 760)		int _hx_tmp = this->get_selectedIndex();
HXDLIN( 760)		if ((_hx_tmp == event->index)) {
HXLINE( 761)			this->selectedIndex = -1;
HXLINE( 762)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            		else {
HXLINE( 763)			int _hx_tmp = this->get_selectedIndex();
HXDLIN( 763)			if ((_hx_tmp > event->index)) {
HXLINE( 764)				this->selectedIndex--;
HXLINE( 765)				::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_removeItemHandler,(void))

void ListView_obj::listView_dataProvider_replaceItemHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_769_listView_dataProvider_replaceItemHandler)
HXLINE( 770)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 771)			this->_virtualCache->set(event->index,null());
            		}
HXLINE( 773)		if ((this->get_selectedIndex() == -1)) {
HXLINE( 774)			return;
            		}
HXLINE( 776)		int _hx_tmp = this->get_selectedIndex();
HXDLIN( 776)		if ((_hx_tmp == event->index)) {
HXLINE( 777)			::Dynamic _hx_tmp = this->dataProvider;
HXDLIN( 777)			this->selectedItem = ::feathers::data::IFlatCollection_obj::get(_hx_tmp,this->get_selectedIndex());
HXLINE( 778)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_replaceItemHandler,(void))

void ListView_obj::listView_dataProvider_removeAllHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_782_listView_dataProvider_removeAllHandler)
HXLINE( 783)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 784)			this->_virtualCache->resize(0);
            		}
HXLINE( 786)		this->set_selectedIndex(-1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_removeAllHandler,(void))

void ListView_obj::listView_dataProvider_resetHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_789_listView_dataProvider_resetHandler)
HXLINE( 790)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 791)			this->_virtualCache->resize(0);
HXLINE( 792)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 792)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
            		}
HXLINE( 794)		this->set_selectedIndex(-1);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_resetHandler,(void))

void ListView_obj::listView_dataProvider_sortChangeHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_797_listView_dataProvider_sortChangeHandler)
HXLINE( 798)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 801)			this->_virtualCache->resize(0);
HXLINE( 802)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 802)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
            		}
HXLINE( 804)		this->refreshSelectedIndicesAfterFilterOrSort();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_sortChangeHandler,(void))

void ListView_obj::listView_dataProvider_filterChangeHandler( ::feathers::events::FlatCollectionEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_807_listView_dataProvider_filterChangeHandler)
HXLINE( 808)		if (::hx::IsNotNull( this->_virtualCache )) {
HXLINE( 811)			this->_virtualCache->resize(0);
HXLINE( 812)			::cpp::VirtualArray _hx_tmp = this->_virtualCache;
HXDLIN( 812)			_hx_tmp->resize(::feathers::data::IFlatCollection_obj::get_length(this->dataProvider));
            		}
HXLINE( 814)		this->refreshSelectedIndicesAfterFilterOrSort();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_dataProvider_filterChangeHandler,(void))

int ListView_obj::navigateWithKeyboard(int startIndex,int keyCode){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_817_navigateWithKeyboard)
HXLINE( 818)		bool _hx_tmp;
HXDLIN( 818)		if (::hx::IsNotNull( this->dataProvider )) {
HXLINE( 818)			_hx_tmp = (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) == 0);
            		}
            		else {
HXLINE( 818)			_hx_tmp = true;
            		}
HXDLIN( 818)		if (_hx_tmp) {
HXLINE( 819)			return -1;
            		}
HXLINE( 821)		switch((int)(keyCode)){
            			case (int)33: {
HXLINE( 847)				int result = (startIndex - 1);
HXLINE( 848)				if ((result < 0)) {
HXLINE( 849)					result = 0;
            				}
HXLINE( 851)				return result;
            			}
            			break;
            			case (int)34: {
HXLINE( 853)				int result = (startIndex + 1);
HXLINE( 854)				if ((result >= ::feathers::data::IFlatCollection_obj::get_length(this->dataProvider))) {
HXLINE( 855)					result = (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) - 1);
            				}
HXLINE( 857)				return result;
            			}
            			break;
            			case (int)35: {
HXLINE( 861)				return (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) - 1);
            			}
            			break;
            			case (int)36: {
HXLINE( 859)				return 0;
            			}
            			break;
            			case (int)37: {
HXLINE( 835)				int result = (startIndex - 1);
HXLINE( 836)				if ((result < 0)) {
HXLINE( 837)					result = 0;
            				}
HXLINE( 839)				return result;
            			}
            			break;
            			case (int)38: {
HXLINE( 823)				int result = (startIndex - 1);
HXLINE( 824)				if ((result < 0)) {
HXLINE( 825)					result = 0;
            				}
HXLINE( 827)				return result;
            			}
            			break;
            			case (int)39: {
HXLINE( 841)				int result = (startIndex + 1);
HXLINE( 842)				if ((result >= ::feathers::data::IFlatCollection_obj::get_length(this->dataProvider))) {
HXLINE( 843)					result = (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) - 1);
            				}
HXLINE( 845)				return result;
            			}
            			break;
            			case (int)40: {
HXLINE( 829)				int result = (startIndex + 1);
HXLINE( 830)				if ((result >= ::feathers::data::IFlatCollection_obj::get_length(this->dataProvider))) {
HXLINE( 831)					result = (::feathers::data::IFlatCollection_obj::get_length(this->dataProvider) - 1);
            				}
HXLINE( 833)				return result;
            			}
            			break;
            		}
HXLINE( 863)		return startIndex;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,navigateWithKeyboard,return )

void ListView_obj::listView_keyDownHandler( ::openfl::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_866_listView_keyDownHandler)
HXLINE( 867)		this->focusRect = false;
HXLINE( 868)		int index = this->get_selectedIndex();
HXDLIN( 868)		int index1 = this->navigateWithKeyboard(index,event->keyCode);
HXLINE( 869)		if ((this->get_selectedIndex() != index1)) {
HXLINE( 870)			event->preventDefault();
HXLINE( 871)			this->set_selectedIndex(index1);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,listView_keyDownHandler,(void))

::hx::Class ListView_obj::get_styleContext(){
            	HX_STACKFRAME(&_hx_pos_51bd3f43eb83f231_42_get_styleContext)
HXDLIN(  42)		return ::hx::ClassOf< ::feathers::controls::ListView >();
            	}


::Dynamic ListView_obj::set_layout(::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_68_set_layout)
HXLINE(  69)		if (!(this->setStyle(HX_("layout",aa,ae,b8,58),null()))) {
HXLINE(  70)			return this->layout;
            		}
HXLINE(  72)		if (::hx::IsEq( this->layout,value )) {
HXLINE(  73)			return this->layout;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_layout_dyn();
HXLINE(  79)		this->layout = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->layout;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ListView_obj,set_layout,return )

::Dynamic ListView_obj::clearStyle_layout(){
            	HX_STACKFRAME(&_hx_pos_c505d7860b5e39ae_94_clearStyle_layout)
HXLINE(  95)		this->set_layout(null());
HXLINE(  96)		return this->layout;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListView_obj,clearStyle_layout,return )

::String ListView_obj::VARIANT_BORDERLESS;

::String ListView_obj::VARIANT_BORDER;

::String ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY;

void ListView_obj::defaultUpdateItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_125_defaultUpdateItemRenderer)
HXDLIN( 125)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::ITextControl >()) ))) {
HXLINE( 126)			::Dynamic textControl =  ::hx::interface_check(itemRenderer,0xfccd2876);
HXLINE( 127)			::feathers::core::ITextControl_obj::set_text(textControl,state->text);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,defaultUpdateItemRenderer,(void))

void ListView_obj::defaultResetItemRenderer( ::openfl::display::DisplayObject itemRenderer, ::feathers::data::ListViewItemState state){
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_132_defaultResetItemRenderer)
HXDLIN( 132)		if (::Std_obj::isOfType(itemRenderer,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::ITextControl >()) ))) {
HXLINE( 133)			::Dynamic textControl =  ::hx::interface_check(itemRenderer,0xfccd2876);
HXLINE( 134)			::feathers::core::ITextControl_obj::set_text(textControl,null());
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ListView_obj,defaultResetItemRenderer,(void))


void ListView_obj::__alloc_dynamic_functions(::hx::Ctx *_hx_ctx,ListView_obj *_hx_obj) {
	if (!_hx_obj->itemToText.mPtr) _hx_obj->itemToText = new __default_itemToText(_hx_obj);
}
::hx::ObjectPtr< ListView_obj > ListView_obj::__new() {
	::hx::ObjectPtr< ListView_obj > __this = new ListView_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ListView_obj > ListView_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ListView_obj *__this = (ListView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ListView_obj), true, "feathers.controls.ListView"));
	*(void **)__this = ListView_obj::_hx_vtable;
	feathers::controls::ListView_obj::__alloc_dynamic_functions(_hx_ctx,__this);
	__this->__construct();
	return __this;
}

ListView_obj::ListView_obj()
{
	itemToText = new __default_itemToText(this);
}

void ListView_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ListView);
	HX_MARK_MEMBER_NAME(listViewPort,"listViewPort");
	HX_MARK_MEMBER_NAME(dataProvider,"dataProvider");
	HX_MARK_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_MARK_MEMBER_NAME(selectedItem,"selectedItem");
	HX_MARK_MEMBER_NAME(_previousLayout,"_previousLayout");
	HX_MARK_MEMBER_NAME(layout,"layout");
	HX_MARK_MEMBER_NAME(itemRendererRecycler,"itemRendererRecycler");
	HX_MARK_MEMBER_NAME(inactiveItemRenderers,"inactiveItemRenderers");
	HX_MARK_MEMBER_NAME(activeItemRenderers,"activeItemRenderers");
	HX_MARK_MEMBER_NAME(dataToItemRenderer,"dataToItemRenderer");
	HX_MARK_MEMBER_NAME(itemRendererToData,"itemRendererToData");
	HX_MARK_MEMBER_NAME(_unrenderedData,"_unrenderedData");
	HX_MARK_MEMBER_NAME(_virtualCache,"_virtualCache");
	HX_MARK_MEMBER_NAME(selectable,"selectable");
	HX_MARK_MEMBER_NAME(virtualLayout,"virtualLayout");
	HX_MARK_MEMBER_NAME(pointerSelectionEnabled,"pointerSelectionEnabled");
	HX_MARK_MEMBER_NAME(_ignoreSelectionChange,"_ignoreSelectionChange");
	HX_MARK_MEMBER_NAME(itemToText,"itemToText");
	HX_MARK_MEMBER_NAME(_layoutItems,"_layoutItems");
	HX_MARK_MEMBER_NAME(_currentItemState,"_currentItemState");
	HX_MARK_MEMBER_NAME(_visibleIndices,"_visibleIndices");
	 ::feathers::controls::supportClasses::BaseScrollContainer_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ListView_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(listViewPort,"listViewPort");
	HX_VISIT_MEMBER_NAME(dataProvider,"dataProvider");
	HX_VISIT_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_VISIT_MEMBER_NAME(selectedItem,"selectedItem");
	HX_VISIT_MEMBER_NAME(_previousLayout,"_previousLayout");
	HX_VISIT_MEMBER_NAME(layout,"layout");
	HX_VISIT_MEMBER_NAME(itemRendererRecycler,"itemRendererRecycler");
	HX_VISIT_MEMBER_NAME(inactiveItemRenderers,"inactiveItemRenderers");
	HX_VISIT_MEMBER_NAME(activeItemRenderers,"activeItemRenderers");
	HX_VISIT_MEMBER_NAME(dataToItemRenderer,"dataToItemRenderer");
	HX_VISIT_MEMBER_NAME(itemRendererToData,"itemRendererToData");
	HX_VISIT_MEMBER_NAME(_unrenderedData,"_unrenderedData");
	HX_VISIT_MEMBER_NAME(_virtualCache,"_virtualCache");
	HX_VISIT_MEMBER_NAME(selectable,"selectable");
	HX_VISIT_MEMBER_NAME(virtualLayout,"virtualLayout");
	HX_VISIT_MEMBER_NAME(pointerSelectionEnabled,"pointerSelectionEnabled");
	HX_VISIT_MEMBER_NAME(_ignoreSelectionChange,"_ignoreSelectionChange");
	HX_VISIT_MEMBER_NAME(itemToText,"itemToText");
	HX_VISIT_MEMBER_NAME(_layoutItems,"_layoutItems");
	HX_VISIT_MEMBER_NAME(_currentItemState,"_currentItemState");
	HX_VISIT_MEMBER_NAME(_visibleIndices,"_visibleIndices");
	 ::feathers::controls::supportClasses::BaseScrollContainer_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val ListView_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { return ::hx::Val( layout ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectable") ) { return ::hx::Val( selectable ); }
		if (HX_FIELD_EQ(inName,"itemToText") ) { return ::hx::Val( itemToText ); }
		if (HX_FIELD_EQ(inName,"set_layout") ) { return ::hx::Val( set_layout_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"listViewPort") ) { return ::hx::Val( listViewPort ); }
		if (HX_FIELD_EQ(inName,"dataProvider") ) { return ::hx::Val( dataProvider ); }
		if (HX_FIELD_EQ(inName,"selectedItem") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_selectedItem() : selectedItem ); }
		if (HX_FIELD_EQ(inName,"_layoutItems") ) { return ::hx::Val( _layoutItems ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_selectedIndex() : selectedIndex ); }
		if (HX_FIELD_EQ(inName,"_virtualCache") ) { return ::hx::Val( _virtualCache ); }
		if (HX_FIELD_EQ(inName,"virtualLayout") ) { return ::hx::Val( virtualLayout ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"set_selectable") ) { return ::hx::Val( set_selectable_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_previousLayout") ) { return ::hx::Val( _previousLayout ); }
		if (HX_FIELD_EQ(inName,"_unrenderedData") ) { return ::hx::Val( _unrenderedData ); }
		if (HX_FIELD_EQ(inName,"_visibleIndices") ) { return ::hx::Val( _visibleIndices ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"set_dataProvider") ) { return ::hx::Val( set_dataProvider_dyn() ); }
		if (HX_FIELD_EQ(inName,"maxSelectedIndex") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_maxSelectedIndex() ); }
		if (HX_FIELD_EQ(inName,"get_selectedItem") ) { return ::hx::Val( get_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedItem") ) { return ::hx::Val( set_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_styleContext") ) { return ::hx::Val( get_styleContext_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_selectedIndex") ) { return ::hx::Val( get_selectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedIndex") ) { return ::hx::Val( set_selectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_virtualLayout") ) { return ::hx::Val( set_virtualLayout_dyn() ); }
		if (HX_FIELD_EQ(inName,"_currentItemState") ) { return ::hx::Val( _currentItemState ); }
		if (HX_FIELD_EQ(inName,"clearStyle_layout") ) { return ::hx::Val( clearStyle_layout_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"dataToItemRenderer") ) { return ::hx::Val( dataToItemRenderer ); }
		if (HX_FIELD_EQ(inName,"itemRendererToData") ) { return ::hx::Val( itemRendererToData ); }
		if (HX_FIELD_EQ(inName,"findUnrenderedData") ) { return ::hx::Val( findUnrenderedData_dyn() ); }
		if (HX_FIELD_EQ(inName,"createItemRenderer") ) { return ::hx::Val( createItemRenderer_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"activeItemRenderers") ) { return ::hx::Val( activeItemRenderers ); }
		if (HX_FIELD_EQ(inName,"destroyItemRenderer") ) { return ::hx::Val( destroyItemRenderer_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"get_primaryDirection") ) { return ::hx::Val( get_primaryDirection_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_maxSelectedIndex") ) { return ::hx::Val( get_maxSelectedIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { return ::hx::Val( itemRendererRecycler ); }
		if (HX_FIELD_EQ(inName,"refreshItemRenderers") ) { return ::hx::Val( refreshItemRenderers_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderUnrenderedData") ) { return ::hx::Val( renderUnrenderedData_dyn() ); }
		if (HX_FIELD_EQ(inName,"navigateWithKeyboard") ) { return ::hx::Val( navigateWithKeyboard_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"inactiveItemRenderers") ) { return ::hx::Val( inactiveItemRenderers ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_ignoreSelectionChange") ) { return ::hx::Val( _ignoreSelectionChange ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"pointerSelectionEnabled") ) { return ::hx::Val( pointerSelectionEnabled ); }
		if (HX_FIELD_EQ(inName,"initializeListViewTheme") ) { return ::hx::Val( initializeListViewTheme_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_keyDownHandler") ) { return ::hx::Val( listView_keyDownHandler_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"set_itemRendererRecycler") ) { return ::hx::Val( set_itemRendererRecycler_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"freeInactiveItemRenderers") ) { return ::hx::Val( freeInactiveItemRenderers_dyn() ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"refreshInactiveItemRenderers") ) { return ::hx::Val( refreshInactiveItemRenderers_dyn() ); }
		if (HX_FIELD_EQ(inName,"recoverInactiveItemRenderers") ) { return ::hx::Val( recoverInactiveItemRenderers_dyn() ); }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_clickHandler") ) { return ::hx::Val( listView_itemRenderer_clickHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_resetHandler") ) { return ::hx::Val( listView_dataProvider_resetHandler_dyn() ); }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_changeHandler") ) { return ::hx::Val( listView_itemRenderer_changeHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_changeHandler") ) { return ::hx::Val( listView_dataProvider_changeHandler_dyn() ); }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_addItemHandler") ) { return ::hx::Val( listView_dataProvider_addItemHandler_dyn() ); }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"listView_itemRenderer_touchTapHandler") ) { return ::hx::Val( listView_itemRenderer_touchTapHandler_dyn() ); }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_removeAllHandler") ) { return ::hx::Val( listView_dataProvider_removeAllHandler_dyn() ); }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"refreshSelectedIndicesAfterFilterOrSort") ) { return ::hx::Val( refreshSelectedIndicesAfterFilterOrSort_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_removeItemHandler") ) { return ::hx::Val( listView_dataProvider_removeItemHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"listView_dataProvider_sortChangeHandler") ) { return ::hx::Val( listView_dataProvider_sortChangeHandler_dyn() ); }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_replaceItemHandler") ) { return ::hx::Val( listView_dataProvider_replaceItemHandler_dyn() ); }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"listView_dataProvider_filterChangeHandler") ) { return ::hx::Val( listView_dataProvider_filterChangeHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ListView_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDER") ) { outValue = ( VARIANT_BORDER ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDERLESS") ) { outValue = ( VARIANT_BORDERLESS ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"defaultResetItemRenderer") ) { outValue = defaultResetItemRenderer_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"defaultUpdateItemRenderer") ) { outValue = defaultUpdateItemRenderer_dyn(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY") ) { outValue = ( INVALIDATION_FLAG_ITEM_RENDERER_FACTORY ); return true; }
	}
	return false;
}

::hx::Val ListView_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"layout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_layout(inValue.Cast< ::Dynamic >()) );layout=inValue.Cast< ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"selectable") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectable(inValue.Cast< bool >()) );selectable=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"itemToText") ) { itemToText=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"listViewPort") ) { listViewPort=inValue.Cast<  ::feathers::controls::supportClasses::AdvancedLayoutViewPort >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dataProvider") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_dataProvider(inValue.Cast< ::Dynamic >()) );dataProvider=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selectedItem") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedItem(inValue.Cast<  ::Dynamic >()) );selectedItem=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_layoutItems") ) { _layoutItems=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_selectedIndex(inValue.Cast< int >()) );selectedIndex=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_virtualCache") ) { _virtualCache=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"virtualLayout") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_virtualLayout(inValue.Cast< bool >()) );virtualLayout=inValue.Cast< bool >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"_previousLayout") ) { _previousLayout=inValue.Cast< ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_unrenderedData") ) { _unrenderedData=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_visibleIndices") ) { _visibleIndices=inValue.Cast<  ::feathers::layout::VirtualLayoutRange >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_currentItemState") ) { _currentItemState=inValue.Cast<  ::feathers::data::ListViewItemState >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"dataToItemRenderer") ) { dataToItemRenderer=inValue.Cast<  ::haxe::ds::ObjectMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"itemRendererToData") ) { itemRendererToData=inValue.Cast<  ::haxe::ds::ObjectMap >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"activeItemRenderers") ) { activeItemRenderers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"itemRendererRecycler") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_itemRendererRecycler(inValue.Cast<  ::feathers::utils::DisplayObjectRecycler >()) );itemRendererRecycler=inValue.Cast<  ::feathers::utils::DisplayObjectRecycler >(); return inValue; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"inactiveItemRenderers") ) { inactiveItemRenderers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_ignoreSelectionChange") ) { _ignoreSelectionChange=inValue.Cast< bool >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"pointerSelectionEnabled") ) { pointerSelectionEnabled=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool ListView_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDER") ) { VARIANT_BORDER=ioValue.Cast< ::String >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"VARIANT_BORDERLESS") ) { VARIANT_BORDERLESS=ioValue.Cast< ::String >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY") ) { INVALIDATION_FLAG_ITEM_RENDERER_FACTORY=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void ListView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("listViewPort",04,df,03,f0));
	outFields->push(HX_("dataProvider",7b,3d,30,8f));
	outFields->push(HX_("selectedIndex",b7,76,56,b4));
	outFields->push(HX_("maxSelectedIndex",73,e5,5e,80));
	outFields->push(HX_("selectedItem",0e,e5,59,d6));
	outFields->push(HX_("_previousLayout",e0,aa,af,90));
	outFields->push(HX_("layout",aa,ae,b8,58));
	outFields->push(HX_("itemRendererRecycler",95,34,f8,23));
	outFields->push(HX_("inactiveItemRenderers",d2,e7,19,be));
	outFields->push(HX_("activeItemRenderers",97,20,8e,5f));
	outFields->push(HX_("dataToItemRenderer",5b,2f,03,01));
	outFields->push(HX_("itemRendererToData",5b,c3,3d,ed));
	outFields->push(HX_("_unrenderedData",77,d6,68,99));
	outFields->push(HX_("_virtualCache",16,37,ef,2a));
	outFields->push(HX_("selectable",96,b6,2a,c4));
	outFields->push(HX_("virtualLayout",15,5b,d5,cf));
	outFields->push(HX_("pointerSelectionEnabled",72,bc,ce,f6));
	outFields->push(HX_("_ignoreSelectionChange",2b,2b,f7,83));
	outFields->push(HX_("_layoutItems",f7,b2,ff,d8));
	outFields->push(HX_("_currentItemState",e4,3e,a2,0f));
	outFields->push(HX_("_visibleIndices",74,11,57,e1));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ListView_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::feathers::controls::supportClasses::AdvancedLayoutViewPort */ ,(int)offsetof(ListView_obj,listViewPort),HX_("listViewPort",04,df,03,f0)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,dataProvider),HX_("dataProvider",7b,3d,30,8f)},
	{::hx::fsInt,(int)offsetof(ListView_obj,selectedIndex),HX_("selectedIndex",b7,76,56,b4)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,selectedItem),HX_("selectedItem",0e,e5,59,d6)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,_previousLayout),HX_("_previousLayout",e0,aa,af,90)},
	{::hx::fsObject /* ::Dynamic */ ,(int)offsetof(ListView_obj,layout),HX_("layout",aa,ae,b8,58)},
	{::hx::fsObject /*  ::feathers::utils::DisplayObjectRecycler */ ,(int)offsetof(ListView_obj,itemRendererRecycler),HX_("itemRendererRecycler",95,34,f8,23)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ListView_obj,inactiveItemRenderers),HX_("inactiveItemRenderers",d2,e7,19,be)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ListView_obj,activeItemRenderers),HX_("activeItemRenderers",97,20,8e,5f)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(ListView_obj,dataToItemRenderer),HX_("dataToItemRenderer",5b,2f,03,01)},
	{::hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(ListView_obj,itemRendererToData),HX_("itemRendererToData",5b,c3,3d,ed)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ListView_obj,_unrenderedData),HX_("_unrenderedData",77,d6,68,99)},
	{::hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ListView_obj,_virtualCache),HX_("_virtualCache",16,37,ef,2a)},
	{::hx::fsBool,(int)offsetof(ListView_obj,selectable),HX_("selectable",96,b6,2a,c4)},
	{::hx::fsBool,(int)offsetof(ListView_obj,virtualLayout),HX_("virtualLayout",15,5b,d5,cf)},
	{::hx::fsBool,(int)offsetof(ListView_obj,pointerSelectionEnabled),HX_("pointerSelectionEnabled",72,bc,ce,f6)},
	{::hx::fsBool,(int)offsetof(ListView_obj,_ignoreSelectionChange),HX_("_ignoreSelectionChange",2b,2b,f7,83)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ListView_obj,itemToText),HX_("itemToText",3b,01,c1,70)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(ListView_obj,_layoutItems),HX_("_layoutItems",f7,b2,ff,d8)},
	{::hx::fsObject /*  ::feathers::data::ListViewItemState */ ,(int)offsetof(ListView_obj,_currentItemState),HX_("_currentItemState",e4,3e,a2,0f)},
	{::hx::fsObject /*  ::feathers::layout::VirtualLayoutRange */ ,(int)offsetof(ListView_obj,_visibleIndices),HX_("_visibleIndices",74,11,57,e1)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo ListView_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &ListView_obj::VARIANT_BORDERLESS,HX_("VARIANT_BORDERLESS",1f,33,25,d4)},
	{::hx::fsString,(void *) &ListView_obj::VARIANT_BORDER,HX_("VARIANT_BORDER",c6,7c,ef,4c)},
	{::hx::fsString,(void *) &ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,HX_("INVALIDATION_FLAG_ITEM_RENDERER_FACTORY",c8,93,28,cb)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String ListView_obj_sMemberFields[] = {
	HX_("listViewPort",04,df,03,f0),
	HX_("get_primaryDirection",26,5f,70,09),
	HX_("dataProvider",7b,3d,30,8f),
	HX_("set_dataProvider",78,17,11,ea),
	HX_("selectedIndex",b7,76,56,b4),
	HX_("get_selectedIndex",0e,82,c6,ba),
	HX_("set_selectedIndex",1a,5a,34,de),
	HX_("get_maxSelectedIndex",7c,4a,c9,9e),
	HX_("selectedItem",0e,e5,59,d6),
	HX_("get_selectedItem",97,d1,f8,da),
	HX_("set_selectedItem",0b,bf,3a,31),
	HX_("_previousLayout",e0,aa,af,90),
	HX_("layout",aa,ae,b8,58),
	HX_("itemRendererRecycler",95,34,f8,23),
	HX_("set_itemRendererRecycler",92,d3,6e,79),
	HX_("inactiveItemRenderers",d2,e7,19,be),
	HX_("activeItemRenderers",97,20,8e,5f),
	HX_("dataToItemRenderer",5b,2f,03,01),
	HX_("itemRendererToData",5b,c3,3d,ed),
	HX_("_unrenderedData",77,d6,68,99),
	HX_("_virtualCache",16,37,ef,2a),
	HX_("selectable",96,b6,2a,c4),
	HX_("set_selectable",53,27,40,5a),
	HX_("virtualLayout",15,5b,d5,cf),
	HX_("set_virtualLayout",78,3e,b3,f9),
	HX_("pointerSelectionEnabled",72,bc,ce,f6),
	HX_("_ignoreSelectionChange",2b,2b,f7,83),
	HX_("itemToText",3b,01,c1,70),
	HX_("initializeListViewTheme",b6,c1,c3,21),
	HX_("_layoutItems",f7,b2,ff,d8),
	HX_("update",09,86,05,87),
	HX_("refreshItemRenderers",62,5f,2c,aa),
	HX_("refreshInactiveItemRenderers",f7,3d,91,93),
	HX_("recoverInactiveItemRenderers",8e,2a,e9,f8),
	HX_("freeInactiveItemRenderers",86,f3,96,5b),
	HX_("_currentItemState",e4,3e,a2,0f),
	HX_("_visibleIndices",74,11,57,e1),
	HX_("findUnrenderedData",f1,83,2c,cd),
	HX_("renderUnrenderedData",ce,77,94,8d),
	HX_("createItemRenderer",92,4e,23,91),
	HX_("destroyItemRenderer",90,19,2a,68),
	HX_("refreshSelectedIndicesAfterFilterOrSort",84,7a,3b,6e),
	HX_("listView_itemRenderer_touchTapHandler",59,b7,29,b5),
	HX_("listView_itemRenderer_clickHandler",6f,23,de,cd),
	HX_("listView_itemRenderer_changeHandler",8d,50,35,33),
	HX_("listView_dataProvider_changeHandler",52,9b,ff,28),
	HX_("listView_dataProvider_addItemHandler",3e,20,f8,c1),
	HX_("listView_dataProvider_removeItemHandler",2b,78,cb,73),
	HX_("listView_dataProvider_replaceItemHandler",0b,c1,53,e8),
	HX_("listView_dataProvider_removeAllHandler",f5,09,f6,a6),
	HX_("listView_dataProvider_resetHandler",a3,19,3e,ee),
	HX_("listView_dataProvider_sortChangeHandler",14,6d,3d,c4),
	HX_("listView_dataProvider_filterChangeHandler",7a,ba,f9,3f),
	HX_("navigateWithKeyboard",9e,b5,6c,b5),
	HX_("listView_keyDownHandler",45,32,c2,de),
	HX_("get_styleContext",47,7d,20,4b),
	HX_("set_layout",e7,bc,bd,4c),
	HX_("clearStyle_layout",65,f0,40,36),
	::String(null()) };

static void ListView_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ListView_obj::VARIANT_BORDERLESS,"VARIANT_BORDERLESS");
	HX_MARK_MEMBER_NAME(ListView_obj::VARIANT_BORDER,"VARIANT_BORDER");
	HX_MARK_MEMBER_NAME(ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ListView_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ListView_obj::VARIANT_BORDERLESS,"VARIANT_BORDERLESS");
	HX_VISIT_MEMBER_NAME(ListView_obj::VARIANT_BORDER,"VARIANT_BORDER");
	HX_VISIT_MEMBER_NAME(ListView_obj::INVALIDATION_FLAG_ITEM_RENDERER_FACTORY,"INVALIDATION_FLAG_ITEM_RENDERER_FACTORY");
};

#endif

::hx::Class ListView_obj::__mClass;

static ::String ListView_obj_sStaticFields[] = {
	HX_("VARIANT_BORDERLESS",1f,33,25,d4),
	HX_("VARIANT_BORDER",c6,7c,ef,4c),
	HX_("INVALIDATION_FLAG_ITEM_RENDERER_FACTORY",c8,93,28,cb),
	HX_("defaultUpdateItemRenderer",40,8e,0a,63),
	HX_("defaultResetItemRenderer",e4,9f,94,65),
	::String(null())
};

void ListView_obj::__register()
{
	ListView_obj _hx_dummy;
	ListView_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.controls.ListView",fd,53,9f,17);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ListView_obj::__GetStatic;
	__mClass->mSetStaticField = &ListView_obj::__SetStatic;
	__mClass->mMarkFunc = ListView_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ListView_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ListView_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ListView_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ListView_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ListView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ListView_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ListView_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_87_boot)
HXDLIN(  87)		__mClass->__meta__ =  ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("obj",f7,8f,54,00), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("defaultXmlProperty",0b,06,d9,8a),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("dataProvider",7b,3d,30,8f))))));
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_103_boot)
HXDLIN( 103)		VARIANT_BORDERLESS = HX_("borderless",45,46,71,17);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_120_boot)
HXDLIN( 120)		VARIANT_BORDER = HX_("border",ec,4c,1a,64);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c5852abc10682dee_122_boot)
HXDLIN( 122)		INVALIDATION_FLAG_ITEM_RENDERER_FACTORY = HX_("itemRendererFactory",f4,ed,98,af);
            	}
}

} // end namespace feathers
} // end namespace controls
