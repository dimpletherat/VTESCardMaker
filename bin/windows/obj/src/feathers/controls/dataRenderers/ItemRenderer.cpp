// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_feathers_controls_BasicToggleButton
#include <feathers/controls/BasicToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls_IToggle
#include <feathers/controls/IToggle.h>
#endif
#ifndef INCLUDED_feathers_controls_ToggleButton
#include <feathers/controls/ToggleButton.h>
#endif
#ifndef INCLUDED_feathers_controls_dataRenderers_ItemRenderer
#include <feathers/controls/dataRenderers/ItemRenderer.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IFocusObject
#include <feathers/core/IFocusObject.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IStateContext
#include <feathers/core/IStateContext.h>
#endif
#ifndef INCLUDED_feathers_core_ITextControl
#include <feathers/core/ITextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_events_TriggerEvent
#include <feathers/events/TriggerEvent.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelItemRendererStyles
#include <feathers/themes/steel/components/SteelItemRendererStyles.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_57908de65a73485d_26_new,"feathers.controls.dataRenderers.ItemRenderer","new",0x3acc662a,"feathers.controls.dataRenderers.ItemRenderer.new","feathers/controls/dataRenderers/ItemRenderer.hx",26,0xff6591c5)
HX_LOCAL_STACK_FRAME(_hx_pos_57908de65a73485d_33_initializeItemRendererTheme,"feathers.controls.dataRenderers.ItemRenderer","initializeItemRendererTheme",0x82b0090d,"feathers.controls.dataRenderers.ItemRenderer.initializeItemRendererTheme","feathers/controls/dataRenderers/ItemRenderer.hx",33,0xff6591c5)
HX_LOCAL_STACK_FRAME(_hx_pos_57908de65a73485d_36_basicToggleButton_triggerHandler,"feathers.controls.dataRenderers.ItemRenderer","basicToggleButton_triggerHandler",0xea70a413,"feathers.controls.dataRenderers.ItemRenderer.basicToggleButton_triggerHandler","feathers/controls/dataRenderers/ItemRenderer.hx",36,0xff6591c5)
HX_LOCAL_STACK_FRAME(_hx_pos_a7fc358dfef2f496_42_get_styleContext,"feathers.controls.dataRenderers.ItemRenderer","get_styleContext",0x63f2913d,"feathers.controls.dataRenderers.ItemRenderer.get_styleContext","feathers/macros/StyleContextMacro.hx",42,0xea61cbb9)
namespace feathers{
namespace controls{
namespace dataRenderers{

void ItemRenderer_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_57908de65a73485d_26_new)
HXLINE(  27)		this->initializeItemRendererTheme();
HXLINE(  29)		super::__construct();
            	}

Dynamic ItemRenderer_obj::__CreateEmpty() { return new ItemRenderer_obj; }

void *ItemRenderer_obj::_hx_vtable = 0;

Dynamic ItemRenderer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ItemRenderer_obj > _hx_result = new ItemRenderer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ItemRenderer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4033f4be) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x093ab78b) {
				if (inClassId<=(int)0x0330636f) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
				} else {
					return inClassId==(int)0x093ab78b;
				}
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			if (inClassId<=(int)0x1f4df417) {
				return inClassId==(int)0x1727ecc2 || inClassId==(int)0x1f4df417;
			} else {
				return inClassId==(int)0x4033f4be;
			}
		}
	} else {
		if (inClassId<=(int)0x58123034) {
			if (inClassId<=(int)0x4af7dd8e) {
				return inClassId==(int)0x482d5eec || inClassId==(int)0x4af7dd8e;
			} else {
				return inClassId==(int)0x58123034;
			}
		} else {
			return inClassId==(int)0x67cf6db6 || inClassId==(int)0x6b353933;
		}
	}
}

void ItemRenderer_obj::initializeItemRendererTheme(){
            	HX_STACKFRAME(&_hx_pos_57908de65a73485d_33_initializeItemRendererTheme)
HXDLIN(  33)		::feathers::themes::steel::components::SteelItemRendererStyles_obj::initialize(null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ItemRenderer_obj,initializeItemRendererTheme,(void))

void ItemRenderer_obj::basicToggleButton_triggerHandler( ::feathers::events::TriggerEvent event){
            	HX_STACKFRAME(&_hx_pos_57908de65a73485d_36_basicToggleButton_triggerHandler)
HXLINE(  37)		if (!(this->get_enabled())) {
HXLINE(  38)			event->stopImmediatePropagation();
HXLINE(  39)			return;
            		}
HXLINE(  41)		bool _hx_tmp;
HXDLIN(  41)		if (this->toggleable) {
HXLINE(  41)			_hx_tmp = this->get_selected();
            		}
            		else {
HXLINE(  41)			_hx_tmp = true;
            		}
HXDLIN(  41)		if (_hx_tmp) {
HXLINE(  42)			return;
            		}
HXLINE(  44)		this->set_selected(!(this->get_selected()));
            	}


::hx::Class ItemRenderer_obj::get_styleContext(){
            	HX_STACKFRAME(&_hx_pos_a7fc358dfef2f496_42_get_styleContext)
HXDLIN(  42)		return ::hx::ClassOf< ::feathers::controls::dataRenderers::ItemRenderer >();
            	}



::hx::ObjectPtr< ItemRenderer_obj > ItemRenderer_obj::__new() {
	::hx::ObjectPtr< ItemRenderer_obj > __this = new ItemRenderer_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ItemRenderer_obj > ItemRenderer_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ItemRenderer_obj *__this = (ItemRenderer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ItemRenderer_obj), true, "feathers.controls.dataRenderers.ItemRenderer"));
	*(void **)__this = ItemRenderer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ItemRenderer_obj::ItemRenderer_obj()
{
}

::hx::Val ItemRenderer_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 16:
		if (HX_FIELD_EQ(inName,"get_styleContext") ) { return ::hx::Val( get_styleContext_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"initializeItemRendererTheme") ) { return ::hx::Val( initializeItemRendererTheme_dyn() ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"basicToggleButton_triggerHandler") ) { return ::hx::Val( basicToggleButton_triggerHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ItemRenderer_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ItemRenderer_obj_sStaticStorageInfo = 0;
#endif

static ::String ItemRenderer_obj_sMemberFields[] = {
	HX_("initializeItemRendererTheme",43,e5,2b,4b),
	HX_("basicToggleButton_triggerHandler",1d,c4,bc,9e),
	HX_("get_styleContext",47,7d,20,4b),
	::String(null()) };

::hx::Class ItemRenderer_obj::__mClass;

void ItemRenderer_obj::__register()
{
	ItemRenderer_obj _hx_dummy;
	ItemRenderer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.controls.dataRenderers.ItemRenderer",38,c9,87,83);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ItemRenderer_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ItemRenderer_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ItemRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ItemRenderer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace controls
} // end namespace dataRenderers
