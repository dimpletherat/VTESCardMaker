// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_feathers_controls_TextInputState
#include <feathers/controls/TextInputState.h>
#endif
namespace feathers{
namespace controls{

::feathers::controls::TextInputState TextInputState_obj::DISABLED;

::feathers::controls::TextInputState TextInputState_obj::ENABLED;

::feathers::controls::TextInputState TextInputState_obj::ERROR;

::feathers::controls::TextInputState TextInputState_obj::FOCUSED;

bool TextInputState_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DISABLED",7c,d1,89,d5)) { outValue = TextInputState_obj::DISABLED; return true; }
	if (inName==HX_("ENABLED",61,d8,04,fe)) { outValue = TextInputState_obj::ENABLED; return true; }
	if (inName==HX_("ERROR",a8,03,18,f1)) { outValue = TextInputState_obj::ERROR; return true; }
	if (inName==HX_("FOCUSED",17,32,57,c1)) { outValue = TextInputState_obj::FOCUSED; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TextInputState_obj)

int TextInputState_obj::__FindIndex(::String inName)
{
	if (inName==HX_("DISABLED",7c,d1,89,d5)) return 1;
	if (inName==HX_("ENABLED",61,d8,04,fe)) return 0;
	if (inName==HX_("ERROR",a8,03,18,f1)) return 3;
	if (inName==HX_("FOCUSED",17,32,57,c1)) return 2;
	return super::__FindIndex(inName);
}

int TextInputState_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("DISABLED",7c,d1,89,d5)) return 0;
	if (inName==HX_("ENABLED",61,d8,04,fe)) return 0;
	if (inName==HX_("ERROR",a8,03,18,f1)) return 0;
	if (inName==HX_("FOCUSED",17,32,57,c1)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val TextInputState_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DISABLED",7c,d1,89,d5)) return DISABLED;
	if (inName==HX_("ENABLED",61,d8,04,fe)) return ENABLED;
	if (inName==HX_("ERROR",a8,03,18,f1)) return ERROR;
	if (inName==HX_("FOCUSED",17,32,57,c1)) return FOCUSED;
	return super::__Field(inName,inCallProp);
}

static ::String TextInputState_obj_sStaticFields[] = {
	HX_("ENABLED",61,d8,04,fe),
	HX_("DISABLED",7c,d1,89,d5),
	HX_("FOCUSED",17,32,57,c1),
	HX_("ERROR",a8,03,18,f1),
	::String(null())
};

::hx::Class TextInputState_obj::__mClass;

Dynamic __Create_TextInputState_obj() { return new TextInputState_obj; }

void TextInputState_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("feathers.controls.TextInputState",4e,6a,c9,e3), ::hx::TCanCast< TextInputState_obj >,TextInputState_obj_sStaticFields,0,
	&__Create_TextInputState_obj, &__Create,
	&super::__SGetClass(), &CreateTextInputState_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TextInputState_obj::__GetStatic;
}

void TextInputState_obj::__boot()
{
DISABLED = ::hx::CreateConstEnum< TextInputState_obj >(HX_("DISABLED",7c,d1,89,d5),1);
ENABLED = ::hx::CreateConstEnum< TextInputState_obj >(HX_("ENABLED",61,d8,04,fe),0);
ERROR = ::hx::CreateConstEnum< TextInputState_obj >(HX_("ERROR",a8,03,18,f1),3);
FOCUSED = ::hx::CreateConstEnum< TextInputState_obj >(HX_("FOCUSED",17,32,57,c1),2);
}


} // end namespace feathers
} // end namespace controls
