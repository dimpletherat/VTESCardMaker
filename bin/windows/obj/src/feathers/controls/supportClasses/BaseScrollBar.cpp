// Generated by Haxe 4.1.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_feathers_controls_IRange
#include <feathers/controls/IRange.h>
#endif
#ifndef INCLUDED_feathers_controls_IScrollBar
#include <feathers/controls/IScrollBar.h>
#endif
#ifndef INCLUDED_feathers_controls_supportClasses_BaseScrollBar
#include <feathers/controls/supportClasses/BaseScrollBar.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_events_FeathersEvent
#include <feathers/events/FeathersEvent.h>
#endif
#ifndef INCLUDED_feathers_events_ScrollEvent
#include <feathers/events/ScrollEvent.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_layout_Measurements
#include <feathers/layout/Measurements.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_errors_Error
#include <openfl/errors/Error.h>
#endif
#ifndef INCLUDED_openfl_errors_TypeError
#include <openfl/errors/TypeError.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_MouseEvent
#include <openfl/events/MouseEvent.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_33_new,"feathers.controls.supportClasses.BaseScrollBar","new",0x5f5020ea,"feathers.controls.supportClasses.BaseScrollBar.new","feathers/controls/supportClasses/BaseScrollBar.hx",33,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_70_get_value,"feathers.controls.supportClasses.BaseScrollBar","get_value",0x590c2fd2,"feathers.controls.supportClasses.BaseScrollBar.get_value","feathers/controls/supportClasses/BaseScrollBar.hx",70,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_73_set_value,"feathers.controls.supportClasses.BaseScrollBar","set_value",0x3c5d1bde,"feathers.controls.supportClasses.BaseScrollBar.set_value","feathers/controls/supportClasses/BaseScrollBar.hx",73,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_108_get_minimum,"feathers.controls.supportClasses.BaseScrollBar","get_minimum",0xb3d4106f,"feathers.controls.supportClasses.BaseScrollBar.get_minimum","feathers/controls/supportClasses/BaseScrollBar.hx",108,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_111_set_minimum,"feathers.controls.supportClasses.BaseScrollBar","set_minimum",0xbe41177b,"feathers.controls.supportClasses.BaseScrollBar.set_minimum","feathers/controls/supportClasses/BaseScrollBar.hx",111,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_146_get_maximum,"feathers.controls.supportClasses.BaseScrollBar","get_maximum",0x42fafa81,"feathers.controls.supportClasses.BaseScrollBar.get_maximum","feathers/controls/supportClasses/BaseScrollBar.hx",146,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_149_set_maximum,"feathers.controls.supportClasses.BaseScrollBar","set_maximum",0x4d68018d,"feathers.controls.supportClasses.BaseScrollBar.set_maximum","feathers/controls/supportClasses/BaseScrollBar.hx",149,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_188_get_step,"feathers.controls.supportClasses.BaseScrollBar","get_step",0x55b81e0b,"feathers.controls.supportClasses.BaseScrollBar.get_step","feathers/controls/supportClasses/BaseScrollBar.hx",188,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_191_set_step,"feathers.controls.supportClasses.BaseScrollBar","set_step",0x0415777f,"feathers.controls.supportClasses.BaseScrollBar.set_step","feathers/controls/supportClasses/BaseScrollBar.hx",191,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_230_get_page,"feathers.controls.supportClasses.BaseScrollBar","get_page",0x53ae110e,"feathers.controls.supportClasses.BaseScrollBar.get_page","feathers/controls/supportClasses/BaseScrollBar.hx",230,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_233_set_page,"feathers.controls.supportClasses.BaseScrollBar","set_page",0x020b6a82,"feathers.controls.supportClasses.BaseScrollBar.set_page","feathers/controls/supportClasses/BaseScrollBar.hx",233,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_443_initialize,"feathers.controls.supportClasses.BaseScrollBar","initialize",0x3e1a6606,"feathers.controls.supportClasses.BaseScrollBar.initialize","feathers/controls/supportClasses/BaseScrollBar.hx",443,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_452_update,"feathers.controls.supportClasses.BaseScrollBar","update",0xe9d2a7bf,"feathers.controls.supportClasses.BaseScrollBar.update","feathers/controls/supportClasses/BaseScrollBar.hx",452,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_473_measure,"feathers.controls.supportClasses.BaseScrollBar","measure",0x4d9a58e8,"feathers.controls.supportClasses.BaseScrollBar.measure","feathers/controls/supportClasses/BaseScrollBar.hx",473,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_476_refreshThumb,"feathers.controls.supportClasses.BaseScrollBar","refreshThumb",0xf232ec71,"feathers.controls.supportClasses.BaseScrollBar.refreshThumb","feathers/controls/supportClasses/BaseScrollBar.hx",476,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_519_refreshTrack,"feathers.controls.supportClasses.BaseScrollBar","refreshTrack",0xf8bfd8e6,"feathers.controls.supportClasses.BaseScrollBar.refreshTrack","feathers/controls/supportClasses/BaseScrollBar.hx",519,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_562_refreshSecondaryTrack,"feathers.controls.supportClasses.BaseScrollBar","refreshSecondaryTrack",0x32393cbc,"feathers.controls.supportClasses.BaseScrollBar.refreshSecondaryTrack","feathers/controls/supportClasses/BaseScrollBar.hx",562,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_609_refreshEnabled,"feathers.controls.supportClasses.BaseScrollBar","refreshEnabled",0x813cdb9c,"feathers.controls.supportClasses.BaseScrollBar.refreshEnabled","feathers/controls/supportClasses/BaseScrollBar.hx",609,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_614_layoutContent,"feathers.controls.supportClasses.BaseScrollBar","layoutContent",0x4587b0b9,"feathers.controls.supportClasses.BaseScrollBar.layoutContent","feathers/controls/supportClasses/BaseScrollBar.hx",614,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_628_layoutSplitTrack,"feathers.controls.supportClasses.BaseScrollBar","layoutSplitTrack",0x1a5d89d1,"feathers.controls.supportClasses.BaseScrollBar.layoutSplitTrack","feathers/controls/supportClasses/BaseScrollBar.hx",628,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_632_layoutSingleTrack,"feathers.controls.supportClasses.BaseScrollBar","layoutSingleTrack",0x2d8ace63,"feathers.controls.supportClasses.BaseScrollBar.layoutSingleTrack","feathers/controls/supportClasses/BaseScrollBar.hx",632,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_636_layoutThumb,"feathers.controls.supportClasses.BaseScrollBar","layoutThumb",0xa26ae596,"feathers.controls.supportClasses.BaseScrollBar.layoutThumb","feathers/controls/supportClasses/BaseScrollBar.hx",636,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_639_drawFallbackTrack,"feathers.controls.supportClasses.BaseScrollBar","drawFallbackTrack",0x4a61b26f,"feathers.controls.supportClasses.BaseScrollBar.drawFallbackTrack","feathers/controls/supportClasses/BaseScrollBar.hx",639,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_652_normalizeValue,"feathers.controls.supportClasses.BaseScrollBar","normalizeValue",0xe0c6005a,"feathers.controls.supportClasses.BaseScrollBar.normalizeValue","feathers/controls/supportClasses/BaseScrollBar.hx",652,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_666_valueToLocation,"feathers.controls.supportClasses.BaseScrollBar","valueToLocation",0xb926952b,"feathers.controls.supportClasses.BaseScrollBar.valueToLocation","feathers/controls/supportClasses/BaseScrollBar.hx",666,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_670_locationToValue,"feathers.controls.supportClasses.BaseScrollBar","locationToValue",0xe97addcb,"feathers.controls.supportClasses.BaseScrollBar.locationToValue","feathers/controls/supportClasses/BaseScrollBar.hx",670,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_674_saveThumbStart,"feathers.controls.supportClasses.BaseScrollBar","saveThumbStart",0x7f2597bf,"feathers.controls.supportClasses.BaseScrollBar.saveThumbStart","feathers/controls/supportClasses/BaseScrollBar.hx",674,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_677_getAdjustedPage,"feathers.controls.supportClasses.BaseScrollBar","getAdjustedPage",0xc922e95d,"feathers.controls.supportClasses.BaseScrollBar.getAdjustedPage","feathers/controls/supportClasses/BaseScrollBar.hx",677,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_688_thumbSkin_mouseDownHandler,"feathers.controls.supportClasses.BaseScrollBar","thumbSkin_mouseDownHandler",0xb4fe9765,"feathers.controls.supportClasses.BaseScrollBar.thumbSkin_mouseDownHandler","feathers/controls/supportClasses/BaseScrollBar.hx",688,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_703_thumbSkin_stage_mouseMoveHandler,"feathers.controls.supportClasses.BaseScrollBar","thumbSkin_stage_mouseMoveHandler",0x8b4debf7,"feathers.controls.supportClasses.BaseScrollBar.thumbSkin_stage_mouseMoveHandler","feathers/controls/supportClasses/BaseScrollBar.hx",703,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_709_thumbSkin_stage_mouseUpHandler,"feathers.controls.supportClasses.BaseScrollBar","thumbSkin_stage_mouseUpHandler",0xae85da6d,"feathers.controls.supportClasses.BaseScrollBar.thumbSkin_stage_mouseUpHandler","feathers/controls/supportClasses/BaseScrollBar.hx",709,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_719_trackSkin_mouseDownHandler,"feathers.controls.supportClasses.BaseScrollBar","trackSkin_mouseDownHandler",0xff4a28d0,"feathers.controls.supportClasses.BaseScrollBar.trackSkin_mouseDownHandler","feathers/controls/supportClasses/BaseScrollBar.hx",719,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_735_trackSkin_stage_mouseMoveHandler,"feathers.controls.supportClasses.BaseScrollBar","trackSkin_stage_mouseMoveHandler",0x2994dfa2,"feathers.controls.supportClasses.BaseScrollBar.trackSkin_stage_mouseMoveHandler","feathers/controls/supportClasses/BaseScrollBar.hx",735,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_3c2c6b8d019ab331_742_trackSkin_stage_mouseUpHandler,"feathers.controls.supportClasses.BaseScrollBar","trackSkin_stage_mouseUpHandler",0x304dfd58,"feathers.controls.supportClasses.BaseScrollBar.trackSkin_stage_mouseUpHandler","feathers/controls/supportClasses/BaseScrollBar.hx",742,0xff2e5fe7)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_thumbSkin,"feathers.controls.supportClasses.BaseScrollBar","set_thumbSkin",0x7e5a7ea0,"feathers.controls.supportClasses.BaseScrollBar.set_thumbSkin","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_thumbSkin,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_thumbSkin",0xf084610e,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_thumbSkin","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_trackSkin,"feathers.controls.supportClasses.BaseScrollBar","set_trackSkin",0xa9af4995,"feathers.controls.supportClasses.BaseScrollBar.set_trackSkin","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_trackSkin,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_trackSkin",0x1bd92c03,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_trackSkin","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_secondaryTrackSkin,"feathers.controls.supportClasses.BaseScrollBar","set_secondaryTrackSkin",0x1e6ad807,"feathers.controls.supportClasses.BaseScrollBar.set_secondaryTrackSkin","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_secondaryTrackSkin,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_secondaryTrackSkin",0xfcf437d9,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_secondaryTrackSkin","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_fixedThumbSize,"feathers.controls.supportClasses.BaseScrollBar","set_fixedThumbSize",0x638e37d6,"feathers.controls.supportClasses.BaseScrollBar.set_fixedThumbSize","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_fixedThumbSize,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_fixedThumbSize",0x1f92c6a8,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_fixedThumbSize","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_paddingTop,"feathers.controls.supportClasses.BaseScrollBar","set_paddingTop",0x5e1235b7,"feathers.controls.supportClasses.BaseScrollBar.set_paddingTop","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingTop,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_paddingTop",0xd08e7389,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_paddingTop","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_paddingRight,"feathers.controls.supportClasses.BaseScrollBar","set_paddingRight",0x8489677e,"feathers.controls.supportClasses.BaseScrollBar.set_paddingRight","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingRight,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_paddingRight",0xbcee3dd0,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_paddingRight","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_paddingBottom,"feathers.controls.supportClasses.BaseScrollBar","set_paddingBottom",0x8b03b909,"feathers.controls.supportClasses.BaseScrollBar.set_paddingBottom","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingBottom,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_paddingBottom",0xaada6a77,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_paddingBottom","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_68_set_paddingLeft,"feathers.controls.supportClasses.BaseScrollBar","set_paddingLeft",0xec8b76a5,"feathers.controls.supportClasses.BaseScrollBar.set_paddingLeft","feathers/macros/StyleMacro.hx",68,0x3426f2ba)
HX_LOCAL_STACK_FRAME(_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingLeft,"feathers.controls.supportClasses.BaseScrollBar","clearStyle_paddingLeft",0xa6c55093,"feathers.controls.supportClasses.BaseScrollBar.clearStyle_paddingLeft","feathers/macros/StyleMacro.hx",94,0x3426f2ba)
namespace feathers{
namespace controls{
namespace supportClasses{

void BaseScrollBar_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_33_new)
HXLINE( 441)		this->_previousFallbackTrackHeight = ((Float)0.0);
HXLINE( 440)		this->_previousFallbackTrackWidth = ((Float)0.0);
HXLINE( 438)		this->_thumbStartY = ((Float)0.0);
HXLINE( 437)		this->_thumbStartX = ((Float)0.0);
HXLINE( 436)		this->_pointerStartY = ((Float)0.0);
HXLINE( 435)		this->_pointerStartX = ((Float)0.0);
HXLINE( 434)		this->_dragging = false;
HXLINE( 432)		this->paddingLeft = ((Float)0.0);
HXLINE( 412)		this->paddingBottom = ((Float)0.0);
HXLINE( 392)		this->paddingRight = ((Float)0.0);
HXLINE( 372)		this->paddingTop = ((Float)0.0);
HXLINE( 352)		this->fixedThumbSize = false;
HXLINE( 335)		this->secondaryTrackSkin = null();
HXLINE( 306)		this->_secondaryTrackSkinMeasurements = null();
HXLINE( 305)		this->_currentSecondaryTrackSkin = null();
HXLINE( 302)		this->trackSkin = null();
HXLINE( 283)		this->_trackSkinMeasurements = null();
HXLINE( 282)		this->_currentTrackSkin = null();
HXLINE( 279)		this->thumbSkin = null();
HXLINE( 261)		this->_thumbSkinMeasurements = null();
HXLINE( 260)		this->_currentThumbSkin = null();
HXLINE( 257)		this->liveDragging = true;
HXLINE( 227)		this->page = ((Float)0.0);
HXLINE( 185)		this->step = ((Float)0.0);
HXLINE( 143)		this->maximum = ((Float)1.0);
HXLINE( 105)		this->minimum = ((Float)0.0);
HXLINE(  67)		this->value = ((Float)0.0);
HXLINE(  35)		super::__construct();
HXLINE(  37)		this->set_tabChildren(false);
HXLINE(  38)		this->focusRect = false;
            	}

Dynamic BaseScrollBar_obj::__CreateEmpty() { return new BaseScrollBar_obj; }

void *BaseScrollBar_obj::_hx_vtable = 0;

Dynamic BaseScrollBar_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BaseScrollBar_obj > _hx_result = new BaseScrollBar_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BaseScrollBar_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x28846938) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x093ab78b) {
				if (inClassId<=(int)0x0330636f) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
				} else {
					return inClassId==(int)0x093ab78b;
				}
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x28846938;
		}
	} else {
		if (inClassId<=(int)0x58123034) {
			if (inClassId<=(int)0x4af7dd8e) {
				return inClassId==(int)0x4033f4be || inClassId==(int)0x4af7dd8e;
			} else {
				return inClassId==(int)0x58123034;
			}
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

static ::feathers::controls::IScrollBar_obj _hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_controls_IScrollBar= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::supportClasses::BaseScrollBar_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_enabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_enabled,
	( void (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::initializeNow,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_value,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_value,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_minimum,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_minimum,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_maximum,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_maximum,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_step,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_step,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_page,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_page,
};

static ::feathers::controls::IRange_obj _hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_controls_IRange= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::supportClasses::BaseScrollBar_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_enabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_enabled,
	( void (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::initializeNow,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_value,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_value,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_minimum,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_minimum,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_maximum,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_maximum,
};

static ::openfl::events::IEventDispatcher_obj _hx_feathers_controls_supportClasses_BaseScrollBar__hx_openfl_events_IEventDispatcher= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::supportClasses::BaseScrollBar_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::willTrigger,
};

static ::feathers::core::IUIControl_obj _hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_core_IUIControl= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::supportClasses::BaseScrollBar_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_visible,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_enabled,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_enabled,
	( void (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::initializeNow,
};

static ::feathers::core::IDisplayObject_obj _hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_core_IDisplayObject= {
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ,::hx::Null< int > ,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::addEventListener,
	( bool (::hx::Object::*)( ::openfl::events::Event))&::feathers::controls::supportClasses::BaseScrollBar_obj::dispatchEvent,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::hasEventListener,
	( void (::hx::Object::*)(::String, ::Dynamic,::hx::Null< bool > ))&::feathers::controls::supportClasses::BaseScrollBar_obj::removeEventListener,
	( bool (::hx::Object::*)(::String))&::feathers::controls::supportClasses::BaseScrollBar_obj::willTrigger,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_x,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_x,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_y,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_y,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_width,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_width,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_height,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_height,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleX,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleX,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_scaleY,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_scaleY,
	( Float (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_alpha,
	( Float (::hx::Object::*)(Float))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_alpha,
	( bool (::hx::Object::*)())&::feathers::controls::supportClasses::BaseScrollBar_obj::get_visible,
	( bool (::hx::Object::*)(bool))&::feathers::controls::supportClasses::BaseScrollBar_obj::set_visible,
};

void *BaseScrollBar_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xa9590423: return &_hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_controls_IScrollBar;
		case (int)0x16fd9f9a: return &_hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_controls_IRange;
		case (int)0x87530281: return &_hx_feathers_controls_supportClasses_BaseScrollBar__hx_openfl_events_IEventDispatcher;
		case (int)0x2696a04f: return &_hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_core_IUIControl;
		case (int)0x3a979a67: return &_hx_feathers_controls_supportClasses_BaseScrollBar__hx_feathers_core_IDisplayObject;
	}
	return super::_hx_getInterface(inHash);
}

Float BaseScrollBar_obj::get_value(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_70_get_value)
HXDLIN(  70)		return this->value;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,get_value,return )

Float BaseScrollBar_obj::set_value(Float value){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_73_set_value)
HXLINE(  74)		if ((this->get_value() == value)) {
HXLINE(  75)			return this->get_value();
            		}
HXLINE(  77)		this->value = value;
HXLINE(  78)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE(  79)		bool _hx_tmp;
HXDLIN(  79)		if (!(this->liveDragging)) {
HXLINE(  79)			_hx_tmp = !(this->_dragging);
            		}
            		else {
HXLINE(  79)			_hx_tmp = true;
            		}
HXDLIN(  79)		if (_hx_tmp) {
HXLINE(  80)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
HXLINE(  82)		return this->get_value();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_value,return )

Float BaseScrollBar_obj::get_minimum(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_108_get_minimum)
HXDLIN( 108)		return this->minimum;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,get_minimum,return )

Float BaseScrollBar_obj::set_minimum(Float value){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_111_set_minimum)
HXLINE( 112)		if ((this->get_minimum() == value)) {
HXLINE( 113)			return this->get_minimum();
            		}
HXLINE( 115)		this->minimum = value;
HXLINE( 116)		bool _hx_tmp;
HXDLIN( 116)		if (this->initialized) {
HXLINE( 116)			Float _hx_tmp1 = this->get_value();
HXDLIN( 116)			_hx_tmp = (_hx_tmp1 < this->get_minimum());
            		}
            		else {
HXLINE( 116)			_hx_tmp = false;
            		}
HXDLIN( 116)		if (_hx_tmp) {
HXLINE( 117)			this->set_value(this->get_minimum());
            		}
HXLINE( 119)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE( 120)		return this->get_minimum();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_minimum,return )

Float BaseScrollBar_obj::get_maximum(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_146_get_maximum)
HXDLIN( 146)		return this->maximum;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,get_maximum,return )

Float BaseScrollBar_obj::set_maximum(Float value){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_149_set_maximum)
HXLINE( 150)		if ((this->get_maximum() == value)) {
HXLINE( 151)			return this->get_maximum();
            		}
HXLINE( 153)		this->maximum = value;
HXLINE( 154)		bool _hx_tmp;
HXDLIN( 154)		if (this->initialized) {
HXLINE( 154)			Float _hx_tmp1 = this->get_value();
HXDLIN( 154)			_hx_tmp = (_hx_tmp1 > this->get_maximum());
            		}
            		else {
HXLINE( 154)			_hx_tmp = false;
            		}
HXDLIN( 154)		if (_hx_tmp) {
HXLINE( 155)			this->set_value(this->get_maximum());
            		}
HXLINE( 157)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE( 158)		return this->get_maximum();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_maximum,return )

Float BaseScrollBar_obj::get_step(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_188_get_step)
HXDLIN( 188)		return this->step;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,get_step,return )

Float BaseScrollBar_obj::set_step(Float value){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_191_set_step)
HXLINE( 192)		if ((this->get_step() == value)) {
HXLINE( 193)			return this->get_step();
            		}
HXLINE( 195)		this->step = value;
HXLINE( 196)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE( 197)		return this->get_step();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_step,return )

Float BaseScrollBar_obj::get_page(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_230_get_page)
HXDLIN( 230)		return this->page;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,get_page,return )

Float BaseScrollBar_obj::set_page(Float value){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_233_set_page)
HXLINE( 234)		if ((this->get_page() == value)) {
HXLINE( 235)			return this->get_page();
            		}
HXLINE( 237)		this->page = value;
HXLINE( 238)		this->setInvalid(HX_("data",2a,56,63,42));
HXLINE( 239)		return this->get_page();
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_page,return )

void BaseScrollBar_obj::initialize(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_443_initialize)
HXLINE( 444)		this->super::initialize();
HXLINE( 445)		Float _hx_tmp = this->get_value();
HXDLIN( 445)		if ((_hx_tmp < this->get_minimum())) {
HXLINE( 446)			this->set_value(this->get_minimum());
            		}
            		else {
HXLINE( 447)			Float _hx_tmp = this->get_value();
HXDLIN( 447)			if ((_hx_tmp > this->get_maximum())) {
HXLINE( 448)				this->set_value(this->get_maximum());
            			}
            		}
            	}


void BaseScrollBar_obj::update(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_452_update)
HXLINE( 453)		bool sizeInvalid = this->isInvalid(HX_("size",c1,a0,53,4c));
HXLINE( 454)		bool stateInvalid = this->isInvalid(HX_("state",11,76,0b,84));
HXLINE( 455)		bool stylesInvalid = this->isInvalid(HX_("styles",22,e6,d2,15));
HXLINE( 457)		if (stylesInvalid) {
HXLINE( 458)			this->refreshThumb();
HXLINE( 459)			this->refreshTrack();
HXLINE( 460)			this->refreshSecondaryTrack();
            		}
HXLINE( 463)		if (stateInvalid) {
HXLINE( 464)			this->refreshEnabled();
            		}
HXLINE( 467)		if (this->measure()) {
HXLINE( 467)			sizeInvalid = true;
            		}
HXLINE( 469)		this->layoutContent();
            	}


bool BaseScrollBar_obj::measure(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_473_measure)
HXDLIN( 473)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'measure' in type ",cc,02,af,85) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
HXDLIN( 473)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,measure,return )

void BaseScrollBar_obj::refreshThumb(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_476_refreshThumb)
HXLINE( 477)		 ::openfl::display::DisplayObject oldSkin = this->_currentThumbSkin;
HXLINE( 478)		this->_currentThumbSkin = this->thumbSkin;
HXLINE( 479)		if (::hx::IsEq( this->_currentThumbSkin,oldSkin )) {
HXLINE( 480)			return;
            		}
HXLINE( 482)		if (::hx::IsNotNull( oldSkin )) {
HXLINE( 483)			if (::hx::IsNotNull( this->thumbContainer )) {
HXLINE( 484)				this->thumbContainer->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->thumbSkin_mouseDownHandler_dyn(),null());
HXLINE( 485)				this->thumbContainer->removeChild(oldSkin);
HXLINE( 486)				this->removeChild(this->thumbContainer);
HXLINE( 487)				this->thumbContainer = null();
            			}
            			else {
HXLINE( 489)				oldSkin->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->thumbSkin_mouseDownHandler_dyn(),null());
HXLINE( 490)				this->removeChild(oldSkin);
            			}
            		}
HXLINE( 493)		if (::hx::IsNotNull( this->_currentThumbSkin )) {
HXLINE( 494)			if (::Std_obj::isOfType(this->_currentThumbSkin,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::IUIControl >()) ))) {
HXLINE( 495)				::feathers::core::IUIControl_obj::initializeNow( ::hx::interface_check(this->_currentThumbSkin,0x2696a04f));
            			}
HXLINE( 497)			if (::hx::IsNull( this->_thumbSkinMeasurements )) {
HXLINE( 498)				this->_thumbSkinMeasurements =  ::feathers::layout::Measurements_obj::__alloc( HX_CTX ,this->_currentThumbSkin);
            			}
            			else {
HXLINE( 500)				this->_thumbSkinMeasurements->save(this->_currentThumbSkin);
            			}
HXLINE( 502)			if (!(::Std_obj::isOfType(this->_currentThumbSkin,( ( ::Dynamic)(::hx::ClassOf< ::openfl::display::InteractiveObject >()) )))) {
HXLINE( 505)				this->thumbContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE( 506)				this->thumbContainer->addChild(this->_currentThumbSkin);
HXLINE( 507)				this->addChild(this->thumbContainer);
HXLINE( 508)				this->thumbContainer->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->thumbSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            			else {
HXLINE( 511)				this->addChild(this->_currentThumbSkin);
HXLINE( 512)				this->_currentThumbSkin->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->thumbSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            		}
            		else {
HXLINE( 515)			this->_thumbSkinMeasurements = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,refreshThumb,(void))

void BaseScrollBar_obj::refreshTrack(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_519_refreshTrack)
HXLINE( 520)		 ::openfl::display::DisplayObject oldSkin = this->_currentTrackSkin;
HXLINE( 521)		this->_currentTrackSkin = this->trackSkin;
HXLINE( 522)		if (::hx::IsEq( this->_currentTrackSkin,oldSkin )) {
HXLINE( 523)			return;
            		}
HXLINE( 525)		if (::hx::IsNotNull( oldSkin )) {
HXLINE( 526)			if (::hx::IsNotNull( this->trackContainer )) {
HXLINE( 527)				this->trackContainer->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null());
HXLINE( 528)				this->trackContainer->removeChild(oldSkin);
HXLINE( 529)				this->removeChild(this->trackContainer);
HXLINE( 530)				this->trackContainer = null();
            			}
            			else {
HXLINE( 532)				this->removeChild(oldSkin);
HXLINE( 533)				oldSkin->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null());
            			}
            		}
HXLINE( 536)		if (::hx::IsNotNull( this->_currentTrackSkin )) {
HXLINE( 537)			if (::Std_obj::isOfType(this->_currentTrackSkin,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::IUIControl >()) ))) {
HXLINE( 538)				::feathers::core::IUIControl_obj::initializeNow( ::hx::interface_check(this->_currentTrackSkin,0x2696a04f));
            			}
HXLINE( 540)			if (::hx::IsNull( this->_trackSkinMeasurements )) {
HXLINE( 541)				this->_trackSkinMeasurements =  ::feathers::layout::Measurements_obj::__alloc( HX_CTX ,this->_currentTrackSkin);
            			}
            			else {
HXLINE( 543)				this->_trackSkinMeasurements->save(this->_currentTrackSkin);
            			}
HXLINE( 545)			if (!(::Std_obj::isOfType(this->_currentTrackSkin,( ( ::Dynamic)(::hx::ClassOf< ::openfl::display::InteractiveObject >()) )))) {
HXLINE( 548)				this->trackContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE( 549)				this->trackContainer->addChild(this->_currentTrackSkin);
HXLINE( 550)				this->addChildAt(this->trackContainer,0);
HXLINE( 551)				this->trackContainer->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            			else {
HXLINE( 554)				this->addChildAt(this->_currentTrackSkin,0);
HXLINE( 555)				this->_currentTrackSkin->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            		}
            		else {
HXLINE( 558)			this->_trackSkinMeasurements = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,refreshTrack,(void))

void BaseScrollBar_obj::refreshSecondaryTrack(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_562_refreshSecondaryTrack)
HXLINE( 563)		 ::openfl::display::DisplayObject oldSkin = this->_currentSecondaryTrackSkin;
HXLINE( 564)		this->_currentSecondaryTrackSkin = this->secondaryTrackSkin;
HXLINE( 565)		if (::hx::IsEq( this->_currentSecondaryTrackSkin,oldSkin )) {
HXLINE( 566)			return;
            		}
HXLINE( 568)		if (::hx::IsNotNull( oldSkin )) {
HXLINE( 569)			if (::hx::IsNotNull( this->secondaryTrackContainer )) {
HXLINE( 570)				this->secondaryTrackContainer->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null());
HXLINE( 571)				this->secondaryTrackContainer->removeChild(oldSkin);
HXLINE( 572)				this->removeChild(this->secondaryTrackContainer);
HXLINE( 573)				this->secondaryTrackContainer = null();
            			}
            			else {
HXLINE( 575)				this->removeChild(oldSkin);
HXLINE( 576)				oldSkin->removeEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null());
            			}
            		}
HXLINE( 579)		if (::hx::IsNotNull( this->_currentSecondaryTrackSkin )) {
HXLINE( 580)			if (::Std_obj::isOfType(this->_currentSecondaryTrackSkin,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::IUIControl >()) ))) {
HXLINE( 581)				::feathers::core::IUIControl_obj::initializeNow( ::hx::interface_check(this->_currentSecondaryTrackSkin,0x2696a04f));
            			}
HXLINE( 583)			if (::hx::IsNull( this->_secondaryTrackSkinMeasurements )) {
HXLINE( 584)				this->_secondaryTrackSkinMeasurements =  ::feathers::layout::Measurements_obj::__alloc( HX_CTX ,this->_currentSecondaryTrackSkin);
            			}
            			else {
HXLINE( 586)				this->_secondaryTrackSkinMeasurements->save(this->_currentSecondaryTrackSkin);
            			}
HXLINE( 590)			int index;
HXDLIN( 590)			if (::hx::IsNotNull( this->_currentTrackSkin )) {
HXLINE( 590)				index = 1;
            			}
            			else {
HXLINE( 590)				index = 0;
            			}
HXLINE( 592)			if (!(::Std_obj::isOfType(this->_currentSecondaryTrackSkin,( ( ::Dynamic)(::hx::ClassOf< ::openfl::display::InteractiveObject >()) )))) {
HXLINE( 595)				this->secondaryTrackContainer =  ::openfl::display::Sprite_obj::__alloc( HX_CTX );
HXLINE( 596)				this->secondaryTrackContainer->addChild(this->_currentSecondaryTrackSkin);
HXLINE( 597)				this->addChildAt(this->secondaryTrackContainer,index);
HXLINE( 598)				this->secondaryTrackContainer->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            			else {
HXLINE( 600)				this->addChildAt(this->_currentSecondaryTrackSkin,index);
HXLINE( 601)				this->_currentSecondaryTrackSkin->addEventListener(HX_("mouseDown",27,b1,c2,ee),this->trackSkin_mouseDownHandler_dyn(),null(),null(),null());
            			}
            		}
            		else {
HXLINE( 604)			this->_secondaryTrackSkinMeasurements = null();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,refreshSecondaryTrack,(void))

void BaseScrollBar_obj::refreshEnabled(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_609_refreshEnabled)
HXDLIN( 609)		if (::Std_obj::isOfType(this->thumbSkin,( ( ::Dynamic)(::hx::ClassOf< ::feathers::core::IUIControl >()) ))) {
HXLINE( 610)			::Dynamic _hx_tmp =  ::hx::interface_check(this->thumbSkin,0x2696a04f);
HXDLIN( 610)			::feathers::core::IUIControl_obj::set_enabled(_hx_tmp,this->get_enabled());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,refreshEnabled,(void))

void BaseScrollBar_obj::layoutContent(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_614_layoutContent)
HXLINE( 615)		bool _hx_tmp;
HXDLIN( 615)		if (::hx::IsNotNull( this->trackSkin )) {
HXLINE( 615)			_hx_tmp = ::hx::IsNotNull( this->secondaryTrackSkin );
            		}
            		else {
HXLINE( 615)			_hx_tmp = false;
            		}
HXDLIN( 615)		if (_hx_tmp) {
HXLINE( 616)			this->get_graphics()->clear();
HXLINE( 617)			this->layoutSplitTrack();
            		}
            		else {
HXLINE( 618)			if (::hx::IsNotNull( this->trackSkin )) {
HXLINE( 619)				this->get_graphics()->clear();
HXLINE( 620)				this->layoutSingleTrack();
            			}
            			else {
HXLINE( 622)				this->drawFallbackTrack();
            			}
            		}
HXLINE( 624)		this->layoutThumb();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,layoutContent,(void))

void BaseScrollBar_obj::layoutSplitTrack(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_628_layoutSplitTrack)
HXDLIN( 628)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'layoutSplitTrack' in type ",b5,e6,8d,3e) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,layoutSplitTrack,(void))

void BaseScrollBar_obj::layoutSingleTrack(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_632_layoutSingleTrack)
HXDLIN( 632)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'layoutSingleTrack' in type ",07,68,20,0a) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,layoutSingleTrack,(void))

void BaseScrollBar_obj::layoutThumb(){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_636_layoutThumb)
HXDLIN( 636)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'layoutThumb' in type ",fa,84,83,a9) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,layoutThumb,(void))

void BaseScrollBar_obj::drawFallbackTrack(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_639_drawFallbackTrack)
HXLINE( 640)		bool _hx_tmp;
HXDLIN( 640)		if ((this->actualWidth == this->_previousFallbackTrackWidth)) {
HXLINE( 640)			_hx_tmp = (this->actualHeight == this->_previousFallbackTrackHeight);
            		}
            		else {
HXLINE( 640)			_hx_tmp = false;
            		}
HXDLIN( 640)		if (_hx_tmp) {
HXLINE( 642)			return;
            		}
HXLINE( 644)		this->get_graphics()->clear();
HXLINE( 645)		this->get_graphics()->beginFill(16711935,((Float)0.0));
HXLINE( 646)		this->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),this->actualWidth,this->actualHeight);
HXLINE( 647)		this->get_graphics()->endFill();
HXLINE( 648)		this->_previousFallbackTrackWidth = this->actualWidth;
HXLINE( 649)		this->_previousFallbackTrackHeight = this->actualHeight;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,drawFallbackTrack,(void))

Float BaseScrollBar_obj::normalizeValue(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_652_normalizeValue)
HXLINE( 653)		Float normalized = ((Float)0.0);
HXLINE( 654)		Float _hx_tmp = this->get_minimum();
HXDLIN( 654)		if ((_hx_tmp != this->get_maximum())) {
HXLINE( 655)			Float normalized1 = this->get_value();
HXDLIN( 655)			Float normalized2 = (normalized1 - this->get_minimum());
HXDLIN( 655)			Float normalized3 = this->get_maximum();
HXDLIN( 655)			normalized = (normalized2 / (normalized3 - this->get_minimum()));
HXLINE( 656)			if ((normalized < ((Float)0.0))) {
HXLINE( 657)				normalized = ((Float)0.0);
            			}
            			else {
HXLINE( 658)				if ((normalized > 1)) {
HXLINE( 659)					normalized = ((Float)1.0);
            				}
            			}
            		}
HXLINE( 662)		return normalized;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,normalizeValue,return )

Float BaseScrollBar_obj::valueToLocation(Float value){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_666_valueToLocation)
HXDLIN( 666)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'valueToLocation' in type ",cf,70,3c,d7) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
HXDLIN( 666)		return ((Float)0.);
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,valueToLocation,return )

Float BaseScrollBar_obj::locationToValue(Float x,Float y){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_670_locationToValue)
HXDLIN( 670)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'locationToValue' in type ",6f,c1,bd,51) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
HXDLIN( 670)		return ((Float)0.);
            	}


HX_DEFINE_DYNAMIC_FUNC2(BaseScrollBar_obj,locationToValue,return )

void BaseScrollBar_obj::saveThumbStart( ::openfl::geom::Point location){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_674_saveThumbStart)
HXDLIN( 674)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown( ::openfl::errors::TypeError_obj::__alloc( HX_CTX ,(HX_("Missing override for 'saveThumbStart' in type ",23,f2,cd,c0) + ::Type_obj::getClassName(::Type_obj::getClass(::hx::ObjectPtr<OBJ_>(this)))))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,saveThumbStart,(void))

Float BaseScrollBar_obj::getAdjustedPage(){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_677_getAdjustedPage)
HXLINE( 678)		Float range = this->get_maximum();
HXDLIN( 678)		Float range1 = (range - this->get_minimum());
HXLINE( 679)		Float adjustedPage = this->get_page();
HXLINE( 680)		if ((adjustedPage == 0)) {
HXLINE( 681)			adjustedPage = this->get_step();
            		}
            		else {
HXLINE( 682)			if ((adjustedPage > range1)) {
HXLINE( 683)				adjustedPage = range1;
            			}
            		}
HXLINE( 685)		return adjustedPage;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,getAdjustedPage,return )

void BaseScrollBar_obj::thumbSkin_mouseDownHandler( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_688_thumbSkin_mouseDownHandler)
HXLINE( 689)		this->stage->addEventListener(HX_("mouseMove",d6,9b,b5,f4),this->thumbSkin_stage_mouseMoveHandler_dyn(),false,0,true);
HXLINE( 690)		this->stage->addEventListener(HX_("mouseUp",e0,f3,72,c0),this->thumbSkin_stage_mouseUpHandler_dyn(),false,0,true);
HXLINE( 692)		 ::openfl::geom::Point location =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,event->stageX,event->stageY);
HXLINE( 693)		location = this->globalToLocal(location);
HXLINE( 695)		this->_thumbStartX = this->thumbSkin->get_x();
HXLINE( 696)		this->_thumbStartY = this->thumbSkin->get_y();
HXLINE( 697)		this->_pointerStartX = location->x;
HXLINE( 698)		this->_pointerStartY = location->y;
HXLINE( 699)		this->_dragging = true;
HXLINE( 700)		::feathers::events::ScrollEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("scrollStart",15,bd,e8,cd),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,thumbSkin_mouseDownHandler,(void))

void BaseScrollBar_obj::thumbSkin_stage_mouseMoveHandler( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_703_thumbSkin_stage_mouseMoveHandler)
HXLINE( 704)		 ::openfl::geom::Point location =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,event->stageX,event->stageY);
HXLINE( 705)		location = this->globalToLocal(location);
HXLINE( 706)		this->set_value(this->locationToValue(location->x,location->y));
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,thumbSkin_stage_mouseMoveHandler,(void))

void BaseScrollBar_obj::thumbSkin_stage_mouseUpHandler( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_709_thumbSkin_stage_mouseUpHandler)
HXLINE( 710)		this->stage->removeEventListener(HX_("mouseMove",d6,9b,b5,f4),this->thumbSkin_stage_mouseMoveHandler_dyn(),null());
HXLINE( 711)		this->stage->removeEventListener(HX_("mouseUp",e0,f3,72,c0),this->thumbSkin_stage_mouseUpHandler_dyn(),null());
HXLINE( 712)		this->_dragging = false;
HXLINE( 713)		::feathers::events::ScrollEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("scrollComplete",e6,e9,b8,0b),null(),null());
HXLINE( 714)		if (!(this->liveDragging)) {
HXLINE( 715)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,thumbSkin_stage_mouseUpHandler,(void))

void BaseScrollBar_obj::trackSkin_mouseDownHandler( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_719_trackSkin_mouseDownHandler)
HXLINE( 720)		this->stage->addEventListener(HX_("mouseMove",d6,9b,b5,f4),this->trackSkin_stage_mouseMoveHandler_dyn(),false,0,true);
HXLINE( 721)		this->stage->addEventListener(HX_("mouseUp",e0,f3,72,c0),this->trackSkin_stage_mouseUpHandler_dyn(),false,0,true);
HXLINE( 723)		 ::openfl::geom::Point location =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,event->stageX,event->stageY);
HXLINE( 724)		location = this->globalToLocal(location);
HXLINE( 726)		this->saveThumbStart(location);
HXLINE( 727)		this->_pointerStartX = location->x;
HXLINE( 728)		this->_pointerStartY = location->y;
HXLINE( 729)		this->_dragging = true;
HXLINE( 730)		::feathers::events::ScrollEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("scrollStart",15,bd,e8,cd),null(),null());
HXLINE( 732)		this->set_value(this->locationToValue(location->x,location->y));
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,trackSkin_mouseDownHandler,(void))

void BaseScrollBar_obj::trackSkin_stage_mouseMoveHandler( ::openfl::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_735_trackSkin_stage_mouseMoveHandler)
HXLINE( 736)		 ::openfl::geom::Point location =  ::openfl::geom::Point_obj::__alloc( HX_CTX ,event->stageX,event->stageY);
HXLINE( 737)		location = this->globalToLocal(location);
HXLINE( 739)		this->set_value(this->locationToValue(location->x,location->y));
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,trackSkin_stage_mouseMoveHandler,(void))

void BaseScrollBar_obj::trackSkin_stage_mouseUpHandler( ::openfl::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_3c2c6b8d019ab331_742_trackSkin_stage_mouseUpHandler)
HXLINE( 743)		this->stage->removeEventListener(HX_("mouseMove",d6,9b,b5,f4),this->trackSkin_stage_mouseMoveHandler_dyn(),null());
HXLINE( 744)		this->stage->removeEventListener(HX_("mouseUp",e0,f3,72,c0),this->trackSkin_stage_mouseUpHandler_dyn(),null());
HXLINE( 745)		this->_dragging = false;
HXLINE( 746)		::feathers::events::ScrollEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("scrollComplete",e6,e9,b8,0b),null(),null());
HXLINE( 747)		if (!(this->liveDragging)) {
HXLINE( 748)			::feathers::events::FeathersEvent_obj::dispatch(::hx::ObjectPtr<OBJ_>(this),HX_("change",70,91,72,b7),null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,trackSkin_stage_mouseUpHandler,(void))

 ::openfl::display::DisplayObject BaseScrollBar_obj::set_thumbSkin( ::openfl::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_thumbSkin)
HXLINE(  69)		if (!(this->setStyle(HX_("thumbSkin",b3,a7,8a,0c),null()))) {
HXLINE(  70)			return this->thumbSkin;
            		}
HXLINE(  72)		if (::hx::IsEq( this->thumbSkin,value )) {
HXLINE(  73)			return this->thumbSkin;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_thumbSkin_dyn();
HXLINE(  79)		this->thumbSkin = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->thumbSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_thumbSkin,return )

 ::openfl::display::DisplayObject BaseScrollBar_obj::clearStyle_thumbSkin(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_thumbSkin)
HXLINE(  95)		this->set_thumbSkin(null());
HXLINE(  96)		return this->thumbSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_thumbSkin,return )

 ::openfl::display::DisplayObject BaseScrollBar_obj::set_trackSkin( ::openfl::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_trackSkin)
HXLINE(  69)		if (!(this->setStyle(HX_("trackSkin",a8,72,df,37),null()))) {
HXLINE(  70)			return this->trackSkin;
            		}
HXLINE(  72)		if (::hx::IsEq( this->trackSkin,value )) {
HXLINE(  73)			return this->trackSkin;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_trackSkin_dyn();
HXLINE(  79)		this->trackSkin = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->trackSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_trackSkin,return )

 ::openfl::display::DisplayObject BaseScrollBar_obj::clearStyle_trackSkin(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_trackSkin)
HXLINE(  95)		this->set_trackSkin(null());
HXLINE(  96)		return this->trackSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_trackSkin,return )

 ::openfl::display::DisplayObject BaseScrollBar_obj::set_secondaryTrackSkin( ::openfl::display::DisplayObject value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_secondaryTrackSkin)
HXLINE(  69)		if (!(this->setStyle(HX_("secondaryTrackSkin",94,74,f4,7c),null()))) {
HXLINE(  70)			return this->secondaryTrackSkin;
            		}
HXLINE(  72)		if (::hx::IsEq( this->secondaryTrackSkin,value )) {
HXLINE(  73)			return this->secondaryTrackSkin;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_secondaryTrackSkin_dyn();
HXLINE(  79)		this->secondaryTrackSkin = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->secondaryTrackSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_secondaryTrackSkin,return )

 ::openfl::display::DisplayObject BaseScrollBar_obj::clearStyle_secondaryTrackSkin(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_secondaryTrackSkin)
HXLINE(  95)		this->set_secondaryTrackSkin(null());
HXLINE(  96)		return this->secondaryTrackSkin;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_secondaryTrackSkin,return )

bool BaseScrollBar_obj::set_fixedThumbSize(bool value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_fixedThumbSize)
HXLINE(  69)		if (!(this->setStyle(HX_("fixedThumbSize",e3,49,f1,a1),null()))) {
HXLINE(  70)			return this->fixedThumbSize;
            		}
HXLINE(  72)		if ((this->fixedThumbSize == value)) {
HXLINE(  73)			return this->fixedThumbSize;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_fixedThumbSize_dyn();
HXLINE(  79)		this->fixedThumbSize = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->fixedThumbSize;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_fixedThumbSize,return )

bool BaseScrollBar_obj::clearStyle_fixedThumbSize(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_fixedThumbSize)
HXLINE(  95)		this->set_fixedThumbSize(false);
HXLINE(  96)		return this->fixedThumbSize;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_fixedThumbSize,return )

Float BaseScrollBar_obj::set_paddingTop(Float value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_paddingTop)
HXLINE(  69)		if (!(this->setStyle(HX_("paddingTop",44,fd,05,3a),null()))) {
HXLINE(  70)			return this->paddingTop;
            		}
HXLINE(  72)		if ((this->paddingTop == value)) {
HXLINE(  73)			return this->paddingTop;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_paddingTop_dyn();
HXLINE(  79)		this->paddingTop = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->paddingTop;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_paddingTop,return )

Float BaseScrollBar_obj::clearStyle_paddingTop(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingTop)
HXLINE(  95)		this->set_paddingTop(((Float)0.0));
HXLINE(  96)		return this->paddingTop;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_paddingTop,return )

Float BaseScrollBar_obj::set_paddingRight(Float value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_paddingRight)
HXLINE(  69)		if (!(this->setStyle(HX_("paddingRight",4b,ec,a7,1a),null()))) {
HXLINE(  70)			return this->paddingRight;
            		}
HXLINE(  72)		if ((this->paddingRight == value)) {
HXLINE(  73)			return this->paddingRight;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_paddingRight_dyn();
HXLINE(  79)		this->paddingRight = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->paddingRight;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_paddingRight,return )

Float BaseScrollBar_obj::clearStyle_paddingRight(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingRight)
HXLINE(  95)		this->set_paddingRight(((Float)0.0));
HXLINE(  96)		return this->paddingRight;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_paddingRight,return )

Float BaseScrollBar_obj::set_paddingBottom(Float value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_paddingBottom)
HXLINE(  69)		if (!(this->setStyle(HX_("paddingBottom",9c,67,99,4f),null()))) {
HXLINE(  70)			return this->paddingBottom;
            		}
HXLINE(  72)		if ((this->paddingBottom == value)) {
HXLINE(  73)			return this->paddingBottom;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_paddingBottom_dyn();
HXLINE(  79)		this->paddingBottom = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->paddingBottom;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_paddingBottom,return )

Float BaseScrollBar_obj::clearStyle_paddingBottom(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingBottom)
HXLINE(  95)		this->set_paddingBottom(((Float)0.0));
HXLINE(  96)		return this->paddingBottom;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_paddingBottom,return )

Float BaseScrollBar_obj::set_paddingLeft(Float value){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_68_set_paddingLeft)
HXLINE(  69)		if (!(this->setStyle(HX_("paddingLeft",78,4a,e6,85),null()))) {
HXLINE(  70)			return this->paddingLeft;
            		}
HXLINE(  72)		if ((this->paddingLeft == value)) {
HXLINE(  73)			return this->paddingLeft;
            		}
HXLINE(  78)		this->_previousClearStyle = this->clearStyle_paddingLeft_dyn();
HXLINE(  79)		this->paddingLeft = value;
HXLINE(  80)		this->setInvalid(HX_("styles",22,e6,d2,15));
HXLINE(  81)		return this->paddingLeft;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BaseScrollBar_obj,set_paddingLeft,return )

Float BaseScrollBar_obj::clearStyle_paddingLeft(){
            	HX_STACKFRAME(&_hx_pos_6dcf85a8b028089f_94_clearStyle_paddingLeft)
HXLINE(  95)		this->set_paddingLeft(((Float)0.0));
HXLINE(  96)		return this->paddingLeft;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BaseScrollBar_obj,clearStyle_paddingLeft,return )


::hx::ObjectPtr< BaseScrollBar_obj > BaseScrollBar_obj::__new() {
	::hx::ObjectPtr< BaseScrollBar_obj > __this = new BaseScrollBar_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< BaseScrollBar_obj > BaseScrollBar_obj::__alloc(::hx::Ctx *_hx_ctx) {
	BaseScrollBar_obj *__this = (BaseScrollBar_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BaseScrollBar_obj), true, "feathers.controls.supportClasses.BaseScrollBar"));
	*(void **)__this = BaseScrollBar_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

BaseScrollBar_obj::BaseScrollBar_obj()
{
}

void BaseScrollBar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BaseScrollBar);
	HX_MARK_MEMBER_NAME(value,"value");
	HX_MARK_MEMBER_NAME(minimum,"minimum");
	HX_MARK_MEMBER_NAME(maximum,"maximum");
	HX_MARK_MEMBER_NAME(step,"step");
	HX_MARK_MEMBER_NAME(page,"page");
	HX_MARK_MEMBER_NAME(liveDragging,"liveDragging");
	HX_MARK_MEMBER_NAME(thumbContainer,"thumbContainer");
	HX_MARK_MEMBER_NAME(_currentThumbSkin,"_currentThumbSkin");
	HX_MARK_MEMBER_NAME(_thumbSkinMeasurements,"_thumbSkinMeasurements");
	HX_MARK_MEMBER_NAME(thumbSkin,"thumbSkin");
	HX_MARK_MEMBER_NAME(trackContainer,"trackContainer");
	HX_MARK_MEMBER_NAME(_currentTrackSkin,"_currentTrackSkin");
	HX_MARK_MEMBER_NAME(_trackSkinMeasurements,"_trackSkinMeasurements");
	HX_MARK_MEMBER_NAME(trackSkin,"trackSkin");
	HX_MARK_MEMBER_NAME(secondaryTrackContainer,"secondaryTrackContainer");
	HX_MARK_MEMBER_NAME(_currentSecondaryTrackSkin,"_currentSecondaryTrackSkin");
	HX_MARK_MEMBER_NAME(_secondaryTrackSkinMeasurements,"_secondaryTrackSkinMeasurements");
	HX_MARK_MEMBER_NAME(secondaryTrackSkin,"secondaryTrackSkin");
	HX_MARK_MEMBER_NAME(fixedThumbSize,"fixedThumbSize");
	HX_MARK_MEMBER_NAME(paddingTop,"paddingTop");
	HX_MARK_MEMBER_NAME(paddingRight,"paddingRight");
	HX_MARK_MEMBER_NAME(paddingBottom,"paddingBottom");
	HX_MARK_MEMBER_NAME(paddingLeft,"paddingLeft");
	HX_MARK_MEMBER_NAME(_dragging,"_dragging");
	HX_MARK_MEMBER_NAME(_pointerStartX,"_pointerStartX");
	HX_MARK_MEMBER_NAME(_pointerStartY,"_pointerStartY");
	HX_MARK_MEMBER_NAME(_thumbStartX,"_thumbStartX");
	HX_MARK_MEMBER_NAME(_thumbStartY,"_thumbStartY");
	HX_MARK_MEMBER_NAME(_previousFallbackTrackWidth,"_previousFallbackTrackWidth");
	HX_MARK_MEMBER_NAME(_previousFallbackTrackHeight,"_previousFallbackTrackHeight");
	 ::feathers::core::FeathersControl_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void BaseScrollBar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(value,"value");
	HX_VISIT_MEMBER_NAME(minimum,"minimum");
	HX_VISIT_MEMBER_NAME(maximum,"maximum");
	HX_VISIT_MEMBER_NAME(step,"step");
	HX_VISIT_MEMBER_NAME(page,"page");
	HX_VISIT_MEMBER_NAME(liveDragging,"liveDragging");
	HX_VISIT_MEMBER_NAME(thumbContainer,"thumbContainer");
	HX_VISIT_MEMBER_NAME(_currentThumbSkin,"_currentThumbSkin");
	HX_VISIT_MEMBER_NAME(_thumbSkinMeasurements,"_thumbSkinMeasurements");
	HX_VISIT_MEMBER_NAME(thumbSkin,"thumbSkin");
	HX_VISIT_MEMBER_NAME(trackContainer,"trackContainer");
	HX_VISIT_MEMBER_NAME(_currentTrackSkin,"_currentTrackSkin");
	HX_VISIT_MEMBER_NAME(_trackSkinMeasurements,"_trackSkinMeasurements");
	HX_VISIT_MEMBER_NAME(trackSkin,"trackSkin");
	HX_VISIT_MEMBER_NAME(secondaryTrackContainer,"secondaryTrackContainer");
	HX_VISIT_MEMBER_NAME(_currentSecondaryTrackSkin,"_currentSecondaryTrackSkin");
	HX_VISIT_MEMBER_NAME(_secondaryTrackSkinMeasurements,"_secondaryTrackSkinMeasurements");
	HX_VISIT_MEMBER_NAME(secondaryTrackSkin,"secondaryTrackSkin");
	HX_VISIT_MEMBER_NAME(fixedThumbSize,"fixedThumbSize");
	HX_VISIT_MEMBER_NAME(paddingTop,"paddingTop");
	HX_VISIT_MEMBER_NAME(paddingRight,"paddingRight");
	HX_VISIT_MEMBER_NAME(paddingBottom,"paddingBottom");
	HX_VISIT_MEMBER_NAME(paddingLeft,"paddingLeft");
	HX_VISIT_MEMBER_NAME(_dragging,"_dragging");
	HX_VISIT_MEMBER_NAME(_pointerStartX,"_pointerStartX");
	HX_VISIT_MEMBER_NAME(_pointerStartY,"_pointerStartY");
	HX_VISIT_MEMBER_NAME(_thumbStartX,"_thumbStartX");
	HX_VISIT_MEMBER_NAME(_thumbStartY,"_thumbStartY");
	HX_VISIT_MEMBER_NAME(_previousFallbackTrackWidth,"_previousFallbackTrackWidth");
	HX_VISIT_MEMBER_NAME(_previousFallbackTrackHeight,"_previousFallbackTrackHeight");
	 ::feathers::core::FeathersControl_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val BaseScrollBar_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_step() : step ); }
		if (HX_FIELD_EQ(inName,"page") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_page() : page ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_value() : value ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"minimum") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_minimum() : minimum ); }
		if (HX_FIELD_EQ(inName,"maximum") ) { return ::hx::Val( inCallProp == ::hx::paccAlways ? get_maximum() : maximum ); }
		if (HX_FIELD_EQ(inName,"measure") ) { return ::hx::Val( measure_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_step") ) { return ::hx::Val( get_step_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_step") ) { return ::hx::Val( set_step_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_page") ) { return ::hx::Val( get_page_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_page") ) { return ::hx::Val( set_page_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_value") ) { return ::hx::Val( get_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_value") ) { return ::hx::Val( set_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"thumbSkin") ) { return ::hx::Val( thumbSkin ); }
		if (HX_FIELD_EQ(inName,"trackSkin") ) { return ::hx::Val( trackSkin ); }
		if (HX_FIELD_EQ(inName,"_dragging") ) { return ::hx::Val( _dragging ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"paddingTop") ) { return ::hx::Val( paddingTop ); }
		if (HX_FIELD_EQ(inName,"initialize") ) { return ::hx::Val( initialize_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_minimum") ) { return ::hx::Val( get_minimum_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_minimum") ) { return ::hx::Val( set_minimum_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_maximum") ) { return ::hx::Val( get_maximum_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_maximum") ) { return ::hx::Val( set_maximum_dyn() ); }
		if (HX_FIELD_EQ(inName,"paddingLeft") ) { return ::hx::Val( paddingLeft ); }
		if (HX_FIELD_EQ(inName,"layoutThumb") ) { return ::hx::Val( layoutThumb_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"liveDragging") ) { return ::hx::Val( liveDragging ); }
		if (HX_FIELD_EQ(inName,"paddingRight") ) { return ::hx::Val( paddingRight ); }
		if (HX_FIELD_EQ(inName,"_thumbStartX") ) { return ::hx::Val( _thumbStartX ); }
		if (HX_FIELD_EQ(inName,"_thumbStartY") ) { return ::hx::Val( _thumbStartY ); }
		if (HX_FIELD_EQ(inName,"refreshThumb") ) { return ::hx::Val( refreshThumb_dyn() ); }
		if (HX_FIELD_EQ(inName,"refreshTrack") ) { return ::hx::Val( refreshTrack_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"paddingBottom") ) { return ::hx::Val( paddingBottom ); }
		if (HX_FIELD_EQ(inName,"layoutContent") ) { return ::hx::Val( layoutContent_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_thumbSkin") ) { return ::hx::Val( set_thumbSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_trackSkin") ) { return ::hx::Val( set_trackSkin_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"thumbContainer") ) { return ::hx::Val( thumbContainer ); }
		if (HX_FIELD_EQ(inName,"trackContainer") ) { return ::hx::Val( trackContainer ); }
		if (HX_FIELD_EQ(inName,"fixedThumbSize") ) { return ::hx::Val( fixedThumbSize ); }
		if (HX_FIELD_EQ(inName,"_pointerStartX") ) { return ::hx::Val( _pointerStartX ); }
		if (HX_FIELD_EQ(inName,"_pointerStartY") ) { return ::hx::Val( _pointerStartY ); }
		if (HX_FIELD_EQ(inName,"refreshEnabled") ) { return ::hx::Val( refreshEnabled_dyn() ); }
		if (HX_FIELD_EQ(inName,"normalizeValue") ) { return ::hx::Val( normalizeValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"saveThumbStart") ) { return ::hx::Val( saveThumbStart_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paddingTop") ) { return ::hx::Val( set_paddingTop_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"valueToLocation") ) { return ::hx::Val( valueToLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"locationToValue") ) { return ::hx::Val( locationToValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAdjustedPage") ) { return ::hx::Val( getAdjustedPage_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paddingLeft") ) { return ::hx::Val( set_paddingLeft_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"layoutSplitTrack") ) { return ::hx::Val( layoutSplitTrack_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paddingRight") ) { return ::hx::Val( set_paddingRight_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_currentThumbSkin") ) { return ::hx::Val( _currentThumbSkin ); }
		if (HX_FIELD_EQ(inName,"_currentTrackSkin") ) { return ::hx::Val( _currentTrackSkin ); }
		if (HX_FIELD_EQ(inName,"layoutSingleTrack") ) { return ::hx::Val( layoutSingleTrack_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawFallbackTrack") ) { return ::hx::Val( drawFallbackTrack_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paddingBottom") ) { return ::hx::Val( set_paddingBottom_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"secondaryTrackSkin") ) { return ::hx::Val( secondaryTrackSkin ); }
		if (HX_FIELD_EQ(inName,"set_fixedThumbSize") ) { return ::hx::Val( set_fixedThumbSize_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"clearStyle_thumbSkin") ) { return ::hx::Val( clearStyle_thumbSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle_trackSkin") ) { return ::hx::Val( clearStyle_trackSkin_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"refreshSecondaryTrack") ) { return ::hx::Val( refreshSecondaryTrack_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle_paddingTop") ) { return ::hx::Val( clearStyle_paddingTop_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_thumbSkinMeasurements") ) { return ::hx::Val( _thumbSkinMeasurements ); }
		if (HX_FIELD_EQ(inName,"_trackSkinMeasurements") ) { return ::hx::Val( _trackSkinMeasurements ); }
		if (HX_FIELD_EQ(inName,"set_secondaryTrackSkin") ) { return ::hx::Val( set_secondaryTrackSkin_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle_paddingLeft") ) { return ::hx::Val( clearStyle_paddingLeft_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"secondaryTrackContainer") ) { return ::hx::Val( secondaryTrackContainer ); }
		if (HX_FIELD_EQ(inName,"clearStyle_paddingRight") ) { return ::hx::Val( clearStyle_paddingRight_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"clearStyle_paddingBottom") ) { return ::hx::Val( clearStyle_paddingBottom_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"clearStyle_fixedThumbSize") ) { return ::hx::Val( clearStyle_fixedThumbSize_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"_currentSecondaryTrackSkin") ) { return ::hx::Val( _currentSecondaryTrackSkin ); }
		if (HX_FIELD_EQ(inName,"thumbSkin_mouseDownHandler") ) { return ::hx::Val( thumbSkin_mouseDownHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"trackSkin_mouseDownHandler") ) { return ::hx::Val( trackSkin_mouseDownHandler_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"_previousFallbackTrackWidth") ) { return ::hx::Val( _previousFallbackTrackWidth ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"_previousFallbackTrackHeight") ) { return ::hx::Val( _previousFallbackTrackHeight ); }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"clearStyle_secondaryTrackSkin") ) { return ::hx::Val( clearStyle_secondaryTrackSkin_dyn() ); }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"thumbSkin_stage_mouseUpHandler") ) { return ::hx::Val( thumbSkin_stage_mouseUpHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"trackSkin_stage_mouseUpHandler") ) { return ::hx::Val( trackSkin_stage_mouseUpHandler_dyn() ); }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_secondaryTrackSkinMeasurements") ) { return ::hx::Val( _secondaryTrackSkinMeasurements ); }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"thumbSkin_stage_mouseMoveHandler") ) { return ::hx::Val( thumbSkin_stage_mouseMoveHandler_dyn() ); }
		if (HX_FIELD_EQ(inName,"trackSkin_stage_mouseMoveHandler") ) { return ::hx::Val( trackSkin_stage_mouseMoveHandler_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val BaseScrollBar_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_step(inValue.Cast< Float >()) );step=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"page") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_page(inValue.Cast< Float >()) );page=inValue.Cast< Float >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_value(inValue.Cast< Float >()) );value=inValue.Cast< Float >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"minimum") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_minimum(inValue.Cast< Float >()) );minimum=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"maximum") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_maximum(inValue.Cast< Float >()) );maximum=inValue.Cast< Float >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"thumbSkin") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_thumbSkin(inValue.Cast<  ::openfl::display::DisplayObject >()) );thumbSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trackSkin") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_trackSkin(inValue.Cast<  ::openfl::display::DisplayObject >()) );trackSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_dragging") ) { _dragging=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"paddingTop") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_paddingTop(inValue.Cast< Float >()) );paddingTop=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"paddingLeft") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_paddingLeft(inValue.Cast< Float >()) );paddingLeft=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"liveDragging") ) { liveDragging=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"paddingRight") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_paddingRight(inValue.Cast< Float >()) );paddingRight=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_thumbStartX") ) { _thumbStartX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_thumbStartY") ) { _thumbStartY=inValue.Cast< Float >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"paddingBottom") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_paddingBottom(inValue.Cast< Float >()) );paddingBottom=inValue.Cast< Float >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"thumbContainer") ) { thumbContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"trackContainer") ) { trackContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"fixedThumbSize") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_fixedThumbSize(inValue.Cast< bool >()) );fixedThumbSize=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_pointerStartX") ) { _pointerStartX=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_pointerStartY") ) { _pointerStartY=inValue.Cast< Float >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"_currentThumbSkin") ) { _currentThumbSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_currentTrackSkin") ) { _currentTrackSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"secondaryTrackSkin") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_secondaryTrackSkin(inValue.Cast<  ::openfl::display::DisplayObject >()) );secondaryTrackSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_thumbSkinMeasurements") ) { _thumbSkinMeasurements=inValue.Cast<  ::feathers::layout::Measurements >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_trackSkinMeasurements") ) { _trackSkinMeasurements=inValue.Cast<  ::feathers::layout::Measurements >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"secondaryTrackContainer") ) { secondaryTrackContainer=inValue.Cast<  ::openfl::display::Sprite >(); return inValue; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"_currentSecondaryTrackSkin") ) { _currentSecondaryTrackSkin=inValue.Cast<  ::openfl::display::DisplayObject >(); return inValue; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"_previousFallbackTrackWidth") ) { _previousFallbackTrackWidth=inValue.Cast< Float >(); return inValue; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"_previousFallbackTrackHeight") ) { _previousFallbackTrackHeight=inValue.Cast< Float >(); return inValue; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"_secondaryTrackSkinMeasurements") ) { _secondaryTrackSkinMeasurements=inValue.Cast<  ::feathers::layout::Measurements >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BaseScrollBar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("value",71,7f,b8,31));
	outFields->push(HX_("minimum",ce,c5,ea,4b));
	outFields->push(HX_("maximum",e0,af,11,db));
	outFields->push(HX_("step",4c,e7,5b,4c));
	outFields->push(HX_("page",4f,da,51,4a));
	outFields->push(HX_("liveDragging",db,e3,cb,84));
	outFields->push(HX_("thumbContainer",4b,c0,b5,75));
	outFields->push(HX_("_currentThumbSkin",99,0a,36,98));
	outFields->push(HX_("_thumbSkinMeasurements",8b,82,78,b1));
	outFields->push(HX_("thumbSkin",b3,a7,8a,0c));
	outFields->push(HX_("trackContainer",36,1d,34,c6));
	outFields->push(HX_("_currentTrackSkin",8e,d5,8a,c3));
	outFields->push(HX_("_trackSkinMeasurements",00,69,0c,2f));
	outFields->push(HX_("trackSkin",a8,72,df,37));
	outFields->push(HX_("secondaryTrackContainer",ca,a3,94,ac));
	outFields->push(HX_("_currentSecondaryTrackSkin",ee,84,b4,e8));
	outFields->push(HX_("_secondaryTrackSkinMeasurements",4a,ba,64,e6));
	outFields->push(HX_("secondaryTrackSkin",94,74,f4,7c));
	outFields->push(HX_("fixedThumbSize",e3,49,f1,a1));
	outFields->push(HX_("paddingTop",44,fd,05,3a));
	outFields->push(HX_("paddingRight",4b,ec,a7,1a));
	outFields->push(HX_("paddingBottom",9c,67,99,4f));
	outFields->push(HX_("paddingLeft",78,4a,e6,85));
	outFields->push(HX_("_dragging",2e,34,22,7f));
	outFields->push(HX_("_pointerStartX",94,32,2b,a5));
	outFields->push(HX_("_pointerStartY",95,32,2b,a5));
	outFields->push(HX_("_thumbStartX",6d,da,a8,d1));
	outFields->push(HX_("_thumbStartY",6e,da,a8,d1));
	outFields->push(HX_("_previousFallbackTrackWidth",73,a7,a9,84));
	outFields->push(HX_("_previousFallbackTrackHeight",da,55,18,46));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo BaseScrollBar_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,value),HX_("value",71,7f,b8,31)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,minimum),HX_("minimum",ce,c5,ea,4b)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,maximum),HX_("maximum",e0,af,11,db)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,step),HX_("step",4c,e7,5b,4c)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,page),HX_("page",4f,da,51,4a)},
	{::hx::fsBool,(int)offsetof(BaseScrollBar_obj,liveDragging),HX_("liveDragging",db,e3,cb,84)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(BaseScrollBar_obj,thumbContainer),HX_("thumbContainer",4b,c0,b5,75)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,_currentThumbSkin),HX_("_currentThumbSkin",99,0a,36,98)},
	{::hx::fsObject /*  ::feathers::layout::Measurements */ ,(int)offsetof(BaseScrollBar_obj,_thumbSkinMeasurements),HX_("_thumbSkinMeasurements",8b,82,78,b1)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,thumbSkin),HX_("thumbSkin",b3,a7,8a,0c)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(BaseScrollBar_obj,trackContainer),HX_("trackContainer",36,1d,34,c6)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,_currentTrackSkin),HX_("_currentTrackSkin",8e,d5,8a,c3)},
	{::hx::fsObject /*  ::feathers::layout::Measurements */ ,(int)offsetof(BaseScrollBar_obj,_trackSkinMeasurements),HX_("_trackSkinMeasurements",00,69,0c,2f)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,trackSkin),HX_("trackSkin",a8,72,df,37)},
	{::hx::fsObject /*  ::openfl::display::Sprite */ ,(int)offsetof(BaseScrollBar_obj,secondaryTrackContainer),HX_("secondaryTrackContainer",ca,a3,94,ac)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,_currentSecondaryTrackSkin),HX_("_currentSecondaryTrackSkin",ee,84,b4,e8)},
	{::hx::fsObject /*  ::feathers::layout::Measurements */ ,(int)offsetof(BaseScrollBar_obj,_secondaryTrackSkinMeasurements),HX_("_secondaryTrackSkinMeasurements",4a,ba,64,e6)},
	{::hx::fsObject /*  ::openfl::display::DisplayObject */ ,(int)offsetof(BaseScrollBar_obj,secondaryTrackSkin),HX_("secondaryTrackSkin",94,74,f4,7c)},
	{::hx::fsBool,(int)offsetof(BaseScrollBar_obj,fixedThumbSize),HX_("fixedThumbSize",e3,49,f1,a1)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,paddingTop),HX_("paddingTop",44,fd,05,3a)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,paddingRight),HX_("paddingRight",4b,ec,a7,1a)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,paddingBottom),HX_("paddingBottom",9c,67,99,4f)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,paddingLeft),HX_("paddingLeft",78,4a,e6,85)},
	{::hx::fsBool,(int)offsetof(BaseScrollBar_obj,_dragging),HX_("_dragging",2e,34,22,7f)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_pointerStartX),HX_("_pointerStartX",94,32,2b,a5)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_pointerStartY),HX_("_pointerStartY",95,32,2b,a5)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_thumbStartX),HX_("_thumbStartX",6d,da,a8,d1)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_thumbStartY),HX_("_thumbStartY",6e,da,a8,d1)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_previousFallbackTrackWidth),HX_("_previousFallbackTrackWidth",73,a7,a9,84)},
	{::hx::fsFloat,(int)offsetof(BaseScrollBar_obj,_previousFallbackTrackHeight),HX_("_previousFallbackTrackHeight",da,55,18,46)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *BaseScrollBar_obj_sStaticStorageInfo = 0;
#endif

static ::String BaseScrollBar_obj_sMemberFields[] = {
	HX_("value",71,7f,b8,31),
	HX_("get_value",c8,db,61,75),
	HX_("set_value",d4,c7,b2,58),
	HX_("minimum",ce,c5,ea,4b),
	HX_("get_minimum",e5,25,e5,d1),
	HX_("set_minimum",f1,2c,52,dc),
	HX_("maximum",e0,af,11,db),
	HX_("get_maximum",f7,0f,0c,61),
	HX_("set_maximum",03,17,79,6b),
	HX_("step",4c,e7,5b,4c),
	HX_("get_step",d5,a2,16,cc),
	HX_("set_step",49,fc,73,7a),
	HX_("page",4f,da,51,4a),
	HX_("get_page",d8,95,0c,ca),
	HX_("set_page",4c,ef,69,78),
	HX_("liveDragging",db,e3,cb,84),
	HX_("thumbContainer",4b,c0,b5,75),
	HX_("_currentThumbSkin",99,0a,36,98),
	HX_("_thumbSkinMeasurements",8b,82,78,b1),
	HX_("thumbSkin",b3,a7,8a,0c),
	HX_("trackContainer",36,1d,34,c6),
	HX_("_currentTrackSkin",8e,d5,8a,c3),
	HX_("_trackSkinMeasurements",00,69,0c,2f),
	HX_("trackSkin",a8,72,df,37),
	HX_("secondaryTrackContainer",ca,a3,94,ac),
	HX_("_currentSecondaryTrackSkin",ee,84,b4,e8),
	HX_("_secondaryTrackSkinMeasurements",4a,ba,64,e6),
	HX_("secondaryTrackSkin",94,74,f4,7c),
	HX_("fixedThumbSize",e3,49,f1,a1),
	HX_("paddingTop",44,fd,05,3a),
	HX_("paddingRight",4b,ec,a7,1a),
	HX_("paddingBottom",9c,67,99,4f),
	HX_("paddingLeft",78,4a,e6,85),
	HX_("_dragging",2e,34,22,7f),
	HX_("_pointerStartX",94,32,2b,a5),
	HX_("_pointerStartY",95,32,2b,a5),
	HX_("_thumbStartX",6d,da,a8,d1),
	HX_("_thumbStartY",6e,da,a8,d1),
	HX_("_previousFallbackTrackWidth",73,a7,a9,84),
	HX_("_previousFallbackTrackHeight",da,55,18,46),
	HX_("initialize",50,31,bb,ec),
	HX_("update",09,86,05,87),
	HX_("measure",5e,fb,e9,3c),
	HX_("refreshThumb",3b,9e,14,23),
	HX_("refreshTrack",b0,8a,a1,29),
	HX_("refreshSecondaryTrack",b2,01,dc,94),
	HX_("refreshEnabled",e6,13,46,f3),
	HX_("layoutContent",af,8f,21,da),
	HX_("layoutSplitTrack",9b,e8,5c,0b),
	HX_("layoutSingleTrack",59,60,fe,1b),
	HX_("layoutThumb",0c,fb,7b,c0),
	HX_("drawFallbackTrack",65,44,d5,38),
	HX_("normalizeValue",a4,38,cf,52),
	HX_("valueToLocation",a1,9d,2e,0f),
	HX_("locationToValue",41,e6,82,3f),
	HX_("saveThumbStart",09,d0,2e,f1),
	HX_("getAdjustedPage",d3,f1,2a,1f),
	HX_("thumbSkin_mouseDownHandler",af,16,a0,d5),
	HX_("thumbSkin_stage_mouseMoveHandler",c1,fe,cc,85),
	HX_("thumbSkin_stage_mouseUpHandler",b7,c6,f9,b2),
	HX_("trackSkin_mouseDownHandler",1a,a8,eb,1f),
	HX_("trackSkin_stage_mouseMoveHandler",6c,f2,13,24),
	HX_("trackSkin_stage_mouseUpHandler",a2,e9,c1,34),
	HX_("set_thumbSkin",96,5d,f4,12),
	HX_("clearStyle_thumbSkin",d8,ec,7b,c6),
	HX_("set_trackSkin",8b,28,49,3e),
	HX_("clearStyle_trackSkin",cd,b7,d0,f1),
	HX_("set_secondaryTrackSkin",51,6a,34,0a),
	HX_("clearStyle_secondaryTrackSkin",cf,e2,f5,59),
	HX_("set_fixedThumbSize",20,5d,3a,1a),
	HX_("clearStyle_fixedThumbSize",9e,3e,7a,a9),
	HX_("set_paddingTop",01,6e,1b,d0),
	HX_("clearStyle_paddingTop",7f,38,31,33),
	HX_("set_paddingRight",48,c6,88,75),
	HX_("clearStyle_paddingRight",46,ac,84,21),
	HX_("set_paddingBottom",ff,4a,77,79),
	HX_("clearStyle_paddingBottom",41,a3,e4,49),
	HX_("set_paddingLeft",1b,7f,93,42),
	HX_("clearStyle_paddingLeft",dd,e2,8e,92),
	::String(null()) };

::hx::Class BaseScrollBar_obj::__mClass;

void BaseScrollBar_obj::__register()
{
	BaseScrollBar_obj _hx_dummy;
	BaseScrollBar_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.controls.supportClasses.BaseScrollBar",f8,23,67,2f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(BaseScrollBar_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< BaseScrollBar_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BaseScrollBar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BaseScrollBar_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace controls
} // end namespace supportClasses
